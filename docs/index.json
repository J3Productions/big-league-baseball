[
  {
    "__docId__": 1,
    "kind": "external",
    "name": "Infinity",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Infinity",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Infinity",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 2,
    "kind": "external",
    "name": "NaN",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/NaN",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~NaN",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 3,
    "kind": "external",
    "name": "undefined",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/undefined",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~undefined",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 4,
    "kind": "external",
    "name": "null",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/null",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~null",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 5,
    "kind": "external",
    "name": "Object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Object",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 6,
    "kind": "external",
    "name": "object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~object",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 7,
    "kind": "external",
    "name": "Function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Function",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 8,
    "kind": "external",
    "name": "function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~function",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 9,
    "kind": "external",
    "name": "Boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Boolean",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 10,
    "kind": "external",
    "name": "boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~boolean",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 11,
    "kind": "external",
    "name": "Symbol",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Symbol",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 12,
    "kind": "external",
    "name": "Error",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Error",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 13,
    "kind": "external",
    "name": "EvalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/EvalError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~EvalError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 14,
    "kind": "external",
    "name": "InternalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/InternalError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~InternalError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 15,
    "kind": "external",
    "name": "RangeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RangeError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~RangeError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 16,
    "kind": "external",
    "name": "ReferenceError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ReferenceError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~ReferenceError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 17,
    "kind": "external",
    "name": "SyntaxError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/SyntaxError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~SyntaxError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 18,
    "kind": "external",
    "name": "TypeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypeError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~TypeError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 19,
    "kind": "external",
    "name": "URIError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/URIError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~URIError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 20,
    "kind": "external",
    "name": "Number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Number",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 21,
    "kind": "external",
    "name": "number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~number",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 22,
    "kind": "external",
    "name": "Date",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Date",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 23,
    "kind": "external",
    "name": "String",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~String",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 24,
    "kind": "external",
    "name": "string",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~string",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 25,
    "kind": "external",
    "name": "RegExp",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~RegExp",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 26,
    "kind": "external",
    "name": "Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 27,
    "kind": "external",
    "name": "Int8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int8Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Int8Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 28,
    "kind": "external",
    "name": "Uint8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint8Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 29,
    "kind": "external",
    "name": "Uint8ClampedArray",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8ClampedArray",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint8ClampedArray",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 30,
    "kind": "external",
    "name": "Int16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int16Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Int16Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 31,
    "kind": "external",
    "name": "Uint16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint16Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint16Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 32,
    "kind": "external",
    "name": "Int32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int32Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Int32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 33,
    "kind": "external",
    "name": "Uint32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint32Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 34,
    "kind": "external",
    "name": "Float32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float32Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Float32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 35,
    "kind": "external",
    "name": "Float64Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float64Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Float64Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 36,
    "kind": "external",
    "name": "Map",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Map",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 37,
    "kind": "external",
    "name": "Set",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Set",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 38,
    "kind": "external",
    "name": "WeakMap",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakMap",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~WeakMap",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 39,
    "kind": "external",
    "name": "WeakSet",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakSet",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~WeakSet",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 40,
    "kind": "external",
    "name": "ArrayBuffer",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~ArrayBuffer",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 41,
    "kind": "external",
    "name": "DataView",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DataView",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~DataView",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 42,
    "kind": "external",
    "name": "JSON",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~JSON",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 43,
    "kind": "external",
    "name": "Promise",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Promise",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 44,
    "kind": "external",
    "name": "Generator",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Generator",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Generator",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 45,
    "kind": "external",
    "name": "GeneratorFunction",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/GeneratorFunction",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~GeneratorFunction",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 46,
    "kind": "external",
    "name": "Reflect",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Reflect",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Reflect",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 47,
    "kind": "external",
    "name": "Proxy",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Proxy",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 48,
    "kind": "file",
    "name": "src/Animation.js",
    "content": "var gameAnimation;\nvar Side;\nvar count2 = 0;\n/**\n* SwitchSide function is to swtich the side when the a new inning came out.\n* @param {string} it represented the side of img. Home will call blue, away will call red.\n*/\nexport function SwitchSide(side)\n{\n    Side = side;\n    var SwSideViewCanvas = document.getElementById(\"SwSideView\");\n    var screenWidth = document.documentElement.clientWidth;\n    var screenHeight = document.documentElement.clientHeight;\n    SwSideViewCanvas.width = screenWidth * 0.75;\n    SwSideViewCanvas.height = screenHeight * 0.725;\n    var ctx = SwSideViewCanvas.getContext(\"2d\");\n    var img = document.getElementById(\"SwitchSide\");\n    ctx.drawImage(img, 1600, 0, 1600, 900, 0, 0, SwSideViewCanvas.width, SwSideViewCanvas.height);\n    SwSideViewCanvas.style.filter = \"opacity(100%)\";\n    SwSideViewCanvas.style.WebkitFilter = \"opacity(100%)\";\n\n    var PitcherWaitCanvas = document.getElementById(\"PitcherWait\");\n    var BatterWaitCanvas = document.getElementById(\"BatterWaitting\");\n    var ctx5 = BatterWaitCanvas.getContext(\"2d\");\n    var ctx6 = PitcherWaitCanvas.getContext(\"2d\");\n    ctx5.clearRect(0, 0, 192, 192);\n    ctx6.clearRect(0, 0, 128, 140);\n\n    var PitcherPitchCanvas = document.getElementById(\"PitcherPitch\");\n    var BatterHitCanvas = document.getElementById(\"BatterHit\");\n    var ctx1 = PitcherPitchCanvas.getContext(\"2d\");\n    ctx1.clearRect(0, 0, 128, 140);\n    var ctx2 = BatterHitCanvas.getContext(\"2d\");\n    ctx2.clearRect(0, 0, 192, 210);\n\n    PitcherWaitCanvas.style.filter = \"opacity(0%)\";\n    PitcherWaitCanvas.style.WebkitFilter = \"opacity(0%)\";\n    BatterWaitCanvas.style.filter = \"opacity(0%)\";\n    BatterWaitCanvas.style.WebkitFilter = \"opacity(0%)\";\n    var BackGroundCanvas = document.getElementById(\"batterView\");\n    BackGroundCanvas.style.filter = \"opacity(0%)\";\n    BackGroundCanvas.style.WebkitFilter = \"opacity(0%)\";\n\n    clearInterval(PitcherWaitControl);\n    clearInterval(BatterWaitControl);\n\n    if(count2 < 8)\n    {\n        count2++;\n    }\n    else\n    {\n        if(Side == \"home\")\n        {\n            Side = \"away\";\n        }\n        else\n        {\n            Side = \"home\";\n        }\n\n        SwSideViewCanvas.style.filter = \"opacity(0%)\";\n        SwSideViewCanvas.style.WebkitFilter = \"opacity(0%)\";\n        BackGroundCanvas.style.filter = \"opacity(100%)\";\n        BackGroundCanvas.style.WebkitFilter = \"opacity(100%)\";\n        PitcherWaitCanvas.style.filter = \"opacity(100%)\";\n        PitcherWaitCanvas.style.WebkitFilter = \"opacity(100%)\";\n        BatterWaitCanvas.style.filter = \"opacity(100%)\";\n        BatterWaitCanvas.style.WebkitFilter = \"opacity(100%)\";\n        PitcherWaitOnload();\n        BatterWaitOnload();\n\n        count2 = 0;\n        clearInterval(SwitchSideControl);\n    }\n}\n\nvar SwitchSideControl;\n/**\n* SwitchSideOnload will make switchside been recalled for a period of time.\n* @param {string} it represented the side of img. Home will call blue, away will call red.\n*/\nexport function SwitchSideOnload(side)\n{\n    SwitchSideControl = setInterval(SwitchSide, 200, side);\n}\n\nvar BackGroundCurrFrame = 0;\nvar BackGroundTotalFrame = 2;\nvar temp = 0;\n/**\n* BackGroud function will make the playground background move. It is a animation function.\n* @param {string} it represented the side of img. Home will call blue, away will call red.\n*/\nexport function BackGround(location)\n{\n    if(temp == 0)\n    {\n        Side = location;\n        temp++;\n    }\n    var BackGroundCanvas = document.getElementById(\"batterView\");\n    var ctx = BackGroundCanvas.getContext(\"2d\");\n    if(Side == \"home\")\n    {\n        var img = document.getElementById(\"viewPic\");\n    }\n    else\n    {\n        var img = document.getElementById(\"viewPic2\");\n    }\n    var screenWidth = document.documentElement.clientWidth;\n    var screenHeight = document.documentElement.clientHeight;\n    BackGroundCanvas.width = screenWidth * 0.75;\n    BackGroundCanvas.height = screenHeight * 0.725;\n\n    if(BackGroundCurrFrame < BackGroundTotalFrame)\n    {\n        BackGroundCurrFrame++;\n    }\n    else\n    {\n        BackGroundCurrFrame = 0;\n    }\n\n    ctx.drawImage(img, BackGroundCurrFrame * 1600, 0, 1600, 900, 0, 0, BackGroundCanvas.width, BackGroundCanvas.height);\n}\n\nvar BackGroundControl;\n/**\n* BackGroundOnload, make the background moving when the game been played.\n* @param {string} it represented the side of img. Home will call blue, away will call red.\n*/\nexport function BackGroundOnload(location)\n{\n    BackGroundControl = setInterval(BackGround, 300, location);\n}\n\n\nvar BatterStatus = \"\";\n/**\n* drawPitchHit, this function is a control of stop the waiting animations and hidden the canvas to open the hit animation canvas.\n* @param {object} this is the object of the result of each action had been selected.\n*/\nexport function drawPitchHit(game)\n{\n    gameAnimation = game;\n    var PitcherWaitCanvas = document.getElementById(\"PitcherWait\");\n    var BatterWaitCanvas = document.getElementById(\"BatterWaitting\");\n    PitcherWaitCanvas.style.filter = \"opacity(0%)\";\n    PitcherWaitCanvas.style.WebkitFilter = \"opacity(0%)\";\n    BatterWaitCanvas.style.filter = \"opacity(0%)\";\n    BatterWaitCanvas.style.WebkitFilter = \"opacity(0%)\";\n\n    var PitcherPitchCanvas = document.getElementById(\"PitcherPitch\");\n    var BatterHitCanvas = document.getElementById(\"BatterHit\");\n    PitcherPitchCanvas.width = 96;\n    PitcherPitchCanvas.height = 105;\n    BatterHitCanvas.width = 160;\n    BatterHitCanvas.height = 175;\n\n    var ctx = PitcherPitchCanvas.getContext(\"2d\");\n    var ctx2 = BatterHitCanvas.getContext(\"2d\");\n    if(Side == \"home\")\n    {\n        var img = document.getElementById(\"PitcherPitching\");\n        var img2 = document.getElementById(\"BatterHitting\");\n    }\n    else\n    {\n        var img = document.getElementById(\"BluePitcherPitching\");\n        var img2 = document.getElementById(\"RedBatterHitting\");\n    }\n    ctx.drawImage(img, 0 * 128, 0, 128, 140, 0, 0, 96, 105);\n    ctx2.drawImage(img2, 0 * 192, 0, 192, 210, 0, 0, 160, 175);\n\n    PitcherPitchCanvas.style.filter = \"opacity(100%)\";\n    PitcherPitchCanvas.style.WebkitFilter = \"opacity(100%)\";\n    BatterHitCanvas.style.filter = \"opacity(100%)\";\n    BatterHitCanvas.style.WebkitFilter = \"opacity(100%)\";\n    clearInterval(PitcherWaitControl);\n    clearInterval(BatterWaitControl);\n\n    BatterStatus = \"Hit\";\n\n    PitcherPitchOnload();//start calling the pitcher pitch animation. go to line 85.\n}\n\nvar PitcherPitchFrames = 6;\nvar PitcherPitchCurrFrames = 0;\n/**\n* drawPitcherPitch, this is the animation of pitcher pitch.\n*\n*/\nfunction drawPitcherPitch()\n{\n    var PitcherPitchCanvas = document.getElementById(\"PitcherPitch\");\n    PitcherPitchCanvas.width = 96;\n    PitcherPitchCanvas.height = 105;\n    var ctx = PitcherPitchCanvas.getContext(\"2d\");\n\n    if(Side == \"home\")\n    {\n        var img = document.getElementById(\"PitcherPitching\");\n    }\n    else\n    {\n        var img = document.getElementById(\"BluePitcherPitching\");\n    }\n\n    var width = 128;\n    var height = 140;\n\n    ctx.clearRect(0, 0, width, height);\n\n    if(PitcherPitchCurrFrames == 2)\n    {\n        if(BatterStatus == \"Hit\")\n        {\n            BatterHitOnload();\n        }\n        if(BatterStatus == \"Strike\")\n        {\n            BatterSwingStrikeOnload();\n        }\n        if(BatterStatus == \"Ball\")\n        {\n            BatterTakeOnload();\n        }\n        if(BatterStatus == \"Out\")\n        {\n            BatterSwingOutOnload();\n        }\n    }\n\n    if(PitcherPitchCurrFrames == 3)\n    {\n        BallOnload();\n    }\n\n    if(PitcherPitchCurrFrames < PitcherPitchFrames)\n    {\n        PitcherPitchCurrFrames++;\n    }\n    else\n    {\n        clearInterval(PitcherPitchControl);\n        PitcherPitchCurrFrames = 0;\n    }\n\n    ctx.drawImage(img, PitcherPitchCurrFrames * width, 0, width, height, 0, 0, PitcherPitchCanvas.width, PitcherPitchCanvas.height);\n    if(PitcherPitchCurrFrames < 4)\n    {\n        var BatterHitCanvas = document.getElementById(\"BatterHit\");\n        BatterHitCanvas.width = 192;\n        BatterHitCanvas.height = 210;\n        var ctx2 = BatterHitCanvas.getContext(\"2d\");\n        if(Side == \"home\")\n        {\n            var img2 = document.getElementById(\"BatterHitting\");\n        }\n        else\n        {\n            var img2 = document.getElementById(\"RedBatterHitting\");\n        }\n        ctx2.drawImage(img2, 0 * 192, 0, 192, 210, 0, 0, 160, 175);\n    }\n}\n\nvar PitcherPitchControl;\n/**\n* PitcherPitchOnload - a control of pitcherPitch anuation, set the time interval of each frame.\n*/\nexport function PitcherPitchOnload()\n{\n    PitcherPitchControl = setInterval(drawPitcherPitch, 300);\n}\n\n\nvar BatterHitFrames = 16;\nvar BatterHitCurrFrame = 0;\nvar count = 0;\n/**\n* drawBatterHit, this is the animation of batter hit.\n*/\nfunction drawBatterHit()\n{\n    var BatterHitCanvas = document.getElementById(\"BatterHit\");\n    BatterHitCanvas.width = 160;\n    BatterHitCanvas.height = 175;\n    var ctx = BatterHitCanvas.getContext(\"2d\");\n    if(Side == \"home\")\n    {\n        var img = document.getElementById(\"BatterHitting\");\n    }\n    else\n    {\n        var img = document.getElementById(\"RedBatterHitting\");\n    }\n    var width = 192;\n    var height = 210;\n\n    ctx.clearRect(0, 0, width, height);\n    if(BatterHitCurrFrame < BatterHitFrames)\n    {\n        if(BatterHitCurrFrame == 11 && count <= 2)\n        {\n            count++;\n        }\n        else\n        {\n            BatterHitCurrFrame++; //if the curr frame didn't reach the final frame, increment.\n        }\n    }\n    else\n    {\n        clearInterval(BatterHitOnloadControl);              //reach the final frame, clear the counting timer for the hit\n        drawAboveView();\n        BatterHitCurrFrame = 0;\n    }\n\n    ctx.drawImage(img, BatterHitCurrFrame * width, 0, width, height, 0, 0, BatterHitCanvas.width, BatterHitCanvas.height);//draw Batter hit animation frame.\n}\n\nvar BatterHitOnloadControl;\n/**\n* BatterHitOnload - a control of Batter hit animation, set the time interval of each frame.\n*/\nexport function BatterHitOnload()\n{\n    BatterHitOnloadControl = setInterval(drawBatterHit, 80);//every 80ms call the drawBatterhit function once.\n}\n\nfunction drawAboveView()\n{\n    var PitcherPitchCanvas = document.getElementById(\"PitcherPitch\");\n    var BatterHitCanvas = document.getElementById(\"BatterHit\");\n    var BackGroundCanvas = document.getElementById(\"batterView\");\n    PitcherPitchCanvas.style.filter = \"opacity(0%)\";\n    PitcherPitchCanvas.style.WebkitFilter = \"opacity(0%)\";\n    BatterHitCanvas.style.filter = \"opacity(0%)\";\n    BatterHitCanvas.style.WebkitFilter = \"opacity(0%)\";\n    BackGroundCanvas.style.filter = \"opacity(0%)\";\n    BackGroundCanvas.style.WebkitFilter = \"opacity(0%)\";\n    var ctx1 = PitcherPitchCanvas.getContext(\"2d\");\n    ctx1.clearRect(0, 0, 128, 140);\n    var ctx2 = BatterHitCanvas.getContext(\"2d\");\n    ctx2.clearRect(0, 0, 192, 210);\n\n    var AboveViewCanvas = document.getElementById(\"AboveView\");\n    var screenWidth = document.documentElement.clientWidth;\n    var screenHeight = document.documentElement.clientHeight;\n    AboveViewCanvas.width = screenWidth * 0.75;\n    AboveViewCanvas.height = screenHeight * 0.725;\n    AboveViewCanvas.style.filter = \"opacity(100%)\";\n    AboveViewCanvas.style.WebkitFilter = \"opacity(100%)\";\n\n    var ctx = AboveViewCanvas.getContext(\"2d\");\n    var img = document.getElementById(\"AboveViewField\");\n\n    ctx.drawImage(img, 1600, 0, 1600, 900, 0, 0, AboveViewCanvas.width, AboveViewCanvas.height);\n\n    BaseChangeOnload();\n}\n\nvar base1 = false;\nvar base2 = false;\nvar base3 = false;\nvar base4 = false;\nvar times = 0;\nvar BaseChangeCurrFrame = 0;\nvar BaseChangeTotalFrame = 5;\n/**\n* drawBaseChange - This a control function and animation. It will determine which base change animation need to been called.\n*\n*/\nfunction drawBaseChange()\n{\n    var BackGroundCanvas = document.getElementById(\"batterView\");\n\n    var FirstBaseViewCanvas = document.getElementById(\"FirstBaseView\");\n    var ctx = FirstBaseViewCanvas.getContext(\"2d\");\n    var img = document.getElementById(\"FirstBase\");\n    FirstBaseViewCanvas.width = BackGroundCanvas.width;\n    FirstBaseViewCanvas.height = BackGroundCanvas.height;\n    FirstBaseViewCanvas.style.filter = \"opacity(100%)\";\n    FirstBaseViewCanvas.style.WebkitFilter = \"opacity(100%)\";\n\n    var SecondBaseViewCanvas = document.getElementById(\"FirstBaseView\");\n    var ctx2 = SecondBaseViewCanvas.getContext(\"2d\");\n    var img2 = document.getElementById(\"SecondBase\");\n    SecondBaseViewCanvas.width = BackGroundCanvas.width;\n    SecondBaseViewCanvas.height = BackGroundCanvas.height;\n    SecondBaseViewCanvas.style.filter = \"opacity(100%)\";\n    SecondBaseViewCanvas.style.WebkitFilter = \"opacity(100%)\";\n\n    var ThirdBaseViewCanvas = document.getElementById(\"FirstBaseView\");\n    var ctx3 = ThirdBaseViewCanvas.getContext(\"2d\");\n    var img3 = document.getElementById(\"ThirdBase\");\n    ThirdBaseViewCanvas.width = BackGroundCanvas.width;\n    ThirdBaseViewCanvas.height = BackGroundCanvas.height;\n    ThirdBaseViewCanvas.style.filter = \"opacity(100%)\";\n    ThirdBaseViewCanvas.style.WebkitFilter = \"opacity(100%)\";\n\n    var HomeBaseViewCanvas = document.getElementById(\"FirstBaseView\");\n    var ctx4 = HomeBaseViewCanvas.getContext(\"2d\");\n    var img4 = document.getElementById(\"HomeBase\");\n    HomeBaseViewCanvas.width = BackGroundCanvas.width;\n    HomeBaseViewCanvas.height = BackGroundCanvas.height;\n    HomeBaseViewCanvas.style.filter = \"opacity(100%)\";\n    HomeBaseViewCanvas.style.WebkitFilter = \"opacity(100%)\";\n\n    if(gameAnimation.lastPitch.play == \"flyoutAdv\" || gameAnimation.lastPitch.play == \"groundout\" || gameAnimation.lastPitch.play == \"groundoutAdvIfForced\")\n    {\n        if(gameAnimation.lastPitch.base1Change == true)\n        {\n            if(times == 1)\n            {\n                base2 = true;\n            }\n        }\n\n        if(gameAnimation.lastPitch.base2Change == true)\n        {\n            if(times == 1)\n            {\n                base3 = true;\n            }\n        }\n\n        if(gameAnimation.lastPitch.base3Change == true)\n        {\n            if(times == 1)\n            {\n                base4 = true;\n            }\n        }\n        if(gameAnimation.lastPitch.base1Change == true || gameAnimation.lastPitch.base2Change == true || gameAnimation.lastPitch.base3Change == true)\n        {\n            times++;\n        }\n    }\n\n    if(gameAnimation.lastPitch.play == \"flyoutNoAdv1st\" || gameAnimation.lastPitch.play == \"groundoutDoublePlay\")\n    {\n        if(gameAnimation.lastPitch.base2Change == true)\n        {\n            if(times == 1)\n            {\n                base3 = true;\n            }\n        }\n\n        if(gameAnimation.lastPitch.base3Change == true)\n        {\n            if(times == 1)\n            {\n                base4 = true;\n            }\n        }\n        if(gameAnimation.lastPitch.base2Change == true || gameAnimation.lastPitch.base3Change == true)\n        {\n            times++;\n        }\n    }\n\n    if(gameAnimation.lastPitch.play == \"homeRun\" || gameAnimation.lastPitch.play == \"triple\"\n        || gameAnimation.lastPitch.play == \"doubleClear\" || gameAnimation.lastPitch.play == \"double\"\n        || gameAnimation.lastPitch.play == \"single\" || gameAnimation.lastPitch.play == \"singleRISP\"\n        || gameAnimation.lastPitch.play == \"singleAdvance\" || gameAnimation.lastPitch.play == \"error\"\n        || gameAnimation.lastPitch.play == \"errorSecond\")\n    {\n        if(times == 0)\n        {\n            base1 = true;\n            times++;\n        }\n\n        if(gameAnimation.lastPitch.play == \"double\")\n        {\n            if(gameAnimation.lastPitch.base1to3 == true)\n            {\n                if(times == 1)\n                {\n                    base2 = true;\n                    times++;\n                }\n            }\n        }\n\n        if(gameAnimation.lastPitch.play == \"single\")\n        {\n            if(gameAnimation.lastPitch.base1Change == true)\n            {\n                if(times == 1)\n                {\n                    base2 = true;\n                }\n            }\n\n            if(gameAnimation.lastPitch.base2Change == true)\n            {\n                if(times == 1)\n                {\n                    base3 = true;\n                }\n            }\n\n            if(gameAnimation.lastPitch.base3Change == true)\n            {\n                if(times == 1)\n                {\n                    base4 = true;\n                }\n            }\n            if(gameAnimation.lastPitch.base1Change == true || gameAnimation.lastPitch.base2Change == true || gameAnimation.lastPitch.base3Change == true)\n            {\n                times++;\n            }\n        }\n\n        if(gameAnimation.lastPitch.play == \"singleRISP\")\n        {\n            if(gameAnimation.lastPitch.base1Change == true)\n            {\n                if(times == 1)\n                {\n                    base2 = true;\n                    times++;\n                }\n            }\n        }\n\n        if(gameAnimation.lastPitch.play == \"singleAdvance\")\n        {\n            if(gameAnimation.lastPitch.base1to3 == true)\n            {\n                if(times == 1)\n                {\n                    base2 = true;\n                    times++;\n                }\n            }\n        }\n\n        if(gameAnimation.lastPitch.play == \"error\")\n        {\n            if(gameAnimation.lastPitch.base1Change == true)\n            {\n                if(times == 1)\n                {\n                    base2 = true;\n                }\n            }\n\n            if(gameAnimation.lastPitch.base2Change == true)\n            {\n                if(times == 1)\n                {\n                    base3 = true;\n                }\n            }\n\n            if(gameAnimation.lastPitch.base3Change == true)\n            {\n                if(times == 1)\n                {\n                    base4 = true;\n                }\n            }\n            if(gameAnimation.lastPitch.base1Change == true || gameAnimation.lastPitch.base2Change == true || gameAnimation.lastPitch.base3Change == true)\n            {\n                times++;\n            }\n        }\n\n        if(gameAnimation.lastPitch.play == \"errorSecond\")\n        {\n            if(gameAnimation.lastPitch.base1to3 == true)\n            {\n                if(times == 1)\n                {\n                    base2 = true;\n                }\n            }\n            if(gameAnimation.lastPitch.base3Change = true)\n            {\n                if(times == 1)\n                {\n                    base3 = true;\n                }\n            }\n            if(gameAnimation.lastPitch.base1to3 == true || gameAnimation.lastPitch.base3Change == true)\n            {\n                times++;\n            }\n        }\n\n    }\n\n    if(base1 == true)\n    {\n        ctx.drawImage(img, BaseChangeCurrFrame * 1600, 0, 1600, 900, 0, 0, FirstBaseViewCanvas.width, FirstBaseViewCanvas.height);\n    }\n    if(base2 == true)\n    {\n        ctx2.drawImage(img2, BaseChangeCurrFrame * 1600, 0, 1600, 900, 0, 0, SecondBaseViewCanvas.width, SecondBaseViewCanvas.height);\n    }\n    if(base3 == true)\n    {\n        ctx3.drawImage(img3, BaseChangeCurrFrame * 1600, 0, 1600, 900, 0, 0, ThirdBaseViewCanvas.width, ThirdBaseViewCanvas.height);\n    }\n    if(base4 == true)\n    {\n        ctx4.drawImage(img4, BaseChangeCurrFrame * 1600, 0, 1600, 900, 0, 0, HomeBaseViewCanvas.width, HomeBaseViewCanvas.height);\n    }\n\n    if(BaseChangeCurrFrame < BaseChangeTotalFrame)\n    {\n        BaseChangeCurrFrame++;\n    }\n    else\n    {\n        if(gameAnimation.lastPitch.play == \"homeRun\")\n        {\n            if(base1 == true)\n            {\n                base1 = false;\n                base2 = true;\n            }\n            else if(base2 == true)\n            {\n                base2 = false;\n                base3 = true;\n            }\n            else if(base3 == true)\n            {\n                base3 = false;\n                base4 = true;\n            }\n            else\n            {\n                base1 = false;\n                base2 = false;\n                base3 = false;\n                base4 = false;\n                times = 0;\n                clearInterval(BaseChangeControl);\n                fieldBack();\n            }\n        }\n        else if(gameAnimation.lastPitch.play == \"triple\")\n        {\n            if(base1 == true)\n            {\n                base1 = false;\n                base2 = true;\n            }\n            else if(base2 == true)\n            {\n                base2 = false;\n                base3 = true;\n            }\n            else\n            {\n                base1 = false;\n                base2 = false;\n                base3 = false;\n                base4 = false;\n                times = 0;\n                clearInterval(BaseChangeControl);\n                fieldBack();\n            }\n        }\n        else if(gameAnimation.lastPitch.play == \"doubleClear\")\n        {\n            if(base1 == true)\n            {\n                base1 = false;\n                base2 = true;\n            }\n            else\n            {\n                base1 = false;\n                base2 = false;\n                base3 = false;\n                base4 = false;\n                times = 0;\n                clearInterval(BaseChangeControl);\n                fieldBack();\n            }\n        }\n        else if(gameAnimation.lastPitch.play == \"double\")\n        {\n            if(base1 == true)\n            {\n                base1 = false;\n                if(base2 == true)\n                {\n                    base3 = true;\n                }\n                else\n                {\n                    base2 = true;\n                }\n            }\n            else\n            {\n                base1 = false;\n                base2 = false;\n                base3 = false;\n                base4 = false;\n                times = 0;\n                clearInterval(BaseChangeControl);\n                fieldBack();\n            }\n        }\n        else if(gameAnimation.lastPitch.play == \"single\"\n            || gameAnimation.lastPitch.play == \"singleRISP\"\n            || gameAnimation.lastPitch.play == \"error\"\n            || gameAnimation.lastPitch.play == \"flyoutAdv\"\n            || gameAnimation.lastPitch.play == \"flyoutNoAdv1st\"\n            || gameAnimation.lastPitch.play == \"groundout\"\n            || gameAnimation.lastPitch.play == \"groundoutAdvIfForced\"\n            || gameAnimation.lastPitch.play == \"groundoutDoublePlay\")\n        {\n            base1 = false;\n            base2 = false;\n            base3 = false;\n            base4 = false;\n            times = 0;\n            clearInterval(BaseChangeControl);\n            fieldBack();\n        }\n        else if(gameAnimation.lastPitch.play == \"singleAdvance\")\n        {\n            if(base1 == true)\n            {\n                base1 = false;\n                if(base2 == true)\n                {\n                    base3 = true;\n                }\n            }\n            else\n            {\n                base1 = false;\n                base2 = false;\n                base3 = false;\n                base4 = false;\n                times = 0;\n                clearInterval(BaseChangeControl);\n                fieldBack();\n            }\n        }\n        else if(gameAnimation.lastPitch.play == \"errorSecond\")\n        {\n            if(base1 == true)\n            {\n                base1 = false;\n                if(base2 == true)\n                {\n                    if(base3 == true)\n                    {\n                        base4 = true;\n                    }\n                    else\n                    {\n                        base3 = true;\n                    }\n                }\n                else\n                {\n                    base2 = true;\n                }\n            }\n            else\n            {\n                base1 = false;\n                base2 = false;\n                base3 = false;\n                base4 = false;\n                times = 0;\n                clearInterval(BaseChangeControl);\n                fieldBack();\n            }\n        }\n        BaseChangeCurrFrame = 0;\n    }\n}\n\nvar BaseChangeControl;\n/**\n* BaseChangeOnload - a control of Base change animation, set the time interval of each frame.\n*\n*/\nexport function BaseChangeOnload()\n{\n    BaseChangeControl = setInterval(drawBaseChange, 200);\n}\n\n/**\n* This function will make the canvas back to normal when the field animation is finished.\n*/\nfunction fieldBack()\n{\n    var BackGroundCanvas = document.getElementById(\"batterView\");\n\n    var AboveViewCanvas = document.getElementById(\"AboveView\");\n    var ctx = AboveViewCanvas.getContext(\"2d\");\n    AboveViewCanvas.style.filter = \"opacity(0%)\";\n    AboveViewCanvas.style.WebkitFilter = \"opacity(0%)\";\n\n    var FirstBaseViewCanvas = document.getElementById(\"FirstBaseView\");\n    var ctx1 = FirstBaseViewCanvas.getContext(\"2d\");\n    FirstBaseViewCanvas.style.filter = \"opacity(0%)\";\n    FirstBaseViewCanvas.style.WebkitFilter = \"opacity(0%)\";\n    ctx1.clearRect(0, 0, BackGroundCanvas.width, BackGroundCanvas.height);\n\n    var SecondBaseViewCanvas = document.getElementById(\"FirstBaseView\");\n    var ctx2 = SecondBaseViewCanvas.getContext(\"2d\");\n    SecondBaseViewCanvas.style.filter = \"opacity(0%)\";\n    SecondBaseViewCanvas.style.WebkitFilter = \"opacity(0%)\";\n    ctx2.clearRect(0, 0, BackGroundCanvas.width, BackGroundCanvas.height);\n\n    var ThirdBaseViewCanvas = document.getElementById(\"FirstBaseView\");\n    var ctx3 = ThirdBaseViewCanvas.getContext(\"2d\");\n    ThirdBaseViewCanvas.style.filter = \"opacity(0%)\";\n    ThirdBaseViewCanvas.style.WebkitFilter = \"opacity(0%)\";\n    ctx3.clearRect(0, 0, BackGroundCanvas.width, BackGroundCanvas.height);\n\n    var HomeBaseViewCanvas = document.getElementById(\"FirstBaseView\");\n    var ctx4 = HomeBaseViewCanvas.getContext(\"2d\");\n    HomeBaseViewCanvas.style.filter = \"opacity(0%)\";\n    HomeBaseViewCanvas.style.WebkitFilter = \"opacity(0%)\";\n    ctx4.clearRect(0, 0, BackGroundCanvas.width, BackGroundCanvas.height);\n\n    var PitcherWaitCanvas = document.getElementById(\"PitcherWait\");\n    var BatterWaitCanvas = document.getElementById(\"BatterWaitting\");\n    PitcherWaitCanvas.style.filter = \"opacity(100%)\";\n    PitcherWaitCanvas.style.WebkitFilter = \"opacity(100%)\";\n    BatterWaitCanvas.style.filter = \"opacity(100%)\";\n    BatterWaitCanvas.style.WebkitFilter = \"opacity(100%)\";\n    var ctx5 = BatterWaitCanvas.getContext(\"2d\");\n    var ctx6 = PitcherWaitCanvas.getContext(\"2d\");\n    ctx5.clearRect(0, 0, 192, 192);\n    ctx6.clearRect(0, 0, 128, 140);\n\n    if(gameAnimation.lastPitch.newInning == true)\n    {\n        SwitchSideOnload(Side);\n    }\n\n    PitcherWaitOnload();\n    BatterWaitOnload();\n\n    BackGroundCanvas.style.filter = \"opacity(100%)\";\n    BackGroundCanvas.style.WebkitFilter = \"opacity(100%)\";\n}\n\n/**\n* This function is animation of strike.\n* @param {object} this is the object of the result of each action had been selected.\n*/\nexport function drawSwingStrike(game)\n{\n    gameAnimation = game;\n    var PitcherWaitCanvas = document.getElementById(\"PitcherWait\");\n    var BatterWaitCanvas = document.getElementById(\"BatterWaitting\");\n    PitcherWaitCanvas.style.filter = \"opacity(0%)\";\n    PitcherWaitCanvas.style.WebkitFilter = \"opacity(0%)\";\n    BatterWaitCanvas.style.filter = \"opacity(0%)\";\n    BatterWaitCanvas.style.WebkitFilter = \"opacity(0%)\";//first, make two waiting animation canvas disappear.\n\n    var PitcherPitchCanvas = document.getElementById(\"PitcherPitch\");\n    var BatterHitCanvas = document.getElementById(\"BatterHit\");\n    PitcherPitchCanvas.width = 96;\n    PitcherPitchCanvas.height = 105;\n    BatterHitCanvas.width = 160;\n    BatterHitCanvas.height = 175;\n\n    var ctx = PitcherPitchCanvas.getContext(\"2d\");\n    var ctx2 = BatterHitCanvas.getContext(\"2d\");\n    if(Side == \"home\")\n    {\n        var img = document.getElementById(\"PitcherPitching\");\n        var img2 = document.getElementById(\"BatterHitting\");\n    }\n    else\n    {\n        var img = document.getElementById(\"BluePitcherPitching\");\n        var img2 = document.getElementById(\"RedBatterHitting\");\n    }\n\n    ctx.drawImage(img, 0 * 128, 0, 128, 140, 0, 0, 96, 105);\n    ctx2.drawImage(img2, 0 * 192, 0, 192, 210, 0, 0, 160, 175);//in order to make the canvas change smooth, draw the frist frame of animation before display the Hit animation canvas.\n\n    PitcherPitchCanvas.style.filter = \"opacity(100%)\";\n    PitcherPitchCanvas.style.WebkitFilter = \"opacity(100%)\";\n    BatterHitCanvas.style.filter = \"opacity(100%)\";\n    BatterHitCanvas.style.WebkitFilter = \"opacity(100%)\";//display the hit animation canvas.\n\n    clearInterval(PitcherWaitControl);\n    clearInterval(BatterWaitControl);//clear the waiting animation counting.\n\n    BatterStatus = \"Strike\";\n\n    PitcherPitchOnload();//start calling the pitcher pitch animation. go to line 85.\n}\n\n/**\n* This function is animation of swing but it is Out.\n* @param {object} this is the object of the result of each action had been selected.\n*/\nexport function drawSwingOut(game)\n{\n    gameAnimation = game;\n    var PitcherWaitCanvas = document.getElementById(\"PitcherWait\");\n    var BatterWaitCanvas = document.getElementById(\"BatterWaitting\");\n    PitcherWaitCanvas.style.filter = \"opacity(0%)\";\n    PitcherWaitCanvas.style.WebkitFilter = \"opacity(0%)\";\n    BatterWaitCanvas.style.filter = \"opacity(0%)\";\n    BatterWaitCanvas.style.WebkitFilter = \"opacity(0%)\";//first, make two waiting animation canvas disappear.\n\n    var PitcherPitchCanvas = document.getElementById(\"PitcherPitch\");\n    var BatterHitCanvas = document.getElementById(\"BatterHit\");\n    PitcherPitchCanvas.width = 96;\n    PitcherPitchCanvas.height = 105;\n    BatterHitCanvas.width = 160;\n    BatterHitCanvas.height = 175;\n\n    var ctx = PitcherPitchCanvas.getContext(\"2d\");\n    var ctx2 = BatterHitCanvas.getContext(\"2d\");\n    if(Side == \"home\")\n    {\n        var img = document.getElementById(\"PitcherPitching\");\n        var img2 = document.getElementById(\"BatterHitting\");\n    }\n    else\n    {\n        var img = document.getElementById(\"BluePitcherPitching\");\n        var img2 = document.getElementById(\"RedBatterHitting\");\n    }\n\n    ctx.drawImage(img, 0 * 128, 0, 128, 140, 0, 0, 96, 105);\n    ctx2.drawImage(img2, 0 * 192, 0, 192, 210, 0, 0, 160, 175);//in order to make the canvas change smooth, draw the frist frame of animation before display the Hit animation canvas.\n\n    PitcherPitchCanvas.style.filter = \"opacity(100%)\";\n    PitcherPitchCanvas.style.WebkitFilter = \"opacity(100%)\";\n    BatterHitCanvas.style.filter = \"opacity(100%)\";\n    BatterHitCanvas.style.WebkitFilter = \"opacity(100%)\";//display the hit animation canvas.\n\n    clearInterval(PitcherWaitControl);\n    clearInterval(BatterWaitControl);//clear the waiting animation counting.\n\n    BatterStatus = \"Out\";\n\n    PitcherPitchOnload();//start calling the pitcher pitch animation. go to line 85.\n}\n\n/**\n* This function is animation of batter decided take and it was a Ball\n* @param {object} this is the object of the result of each action had been selected.\n*/\nexport function drawTakeBall(game)\n{\n    gameAnimation = game;\n    var PitcherWaitCanvas = document.getElementById(\"PitcherWait\");\n    var BatterWaitCanvas = document.getElementById(\"BatterWaitting\");\n    PitcherWaitCanvas.style.filter = \"opacity(0%)\";\n    PitcherWaitCanvas.style.WebkitFilter = \"opacity(0%)\";\n    BatterWaitCanvas.style.filter = \"opacity(0%)\";\n    BatterWaitCanvas.style.WebkitFilter = \"opacity(0%)\";//first, make two waiting animation canvas disappear.\n\n    var PitcherPitchCanvas = document.getElementById(\"PitcherPitch\");\n    var BatterHitCanvas = document.getElementById(\"BatterHit\");\n    PitcherPitchCanvas.width = 96;\n    PitcherPitchCanvas.height = 105;\n    BatterHitCanvas.width = 160;\n    BatterHitCanvas.height = 175;\n\n    var ctx = PitcherPitchCanvas.getContext(\"2d\");\n    var ctx2 = BatterHitCanvas.getContext(\"2d\");\n    if(Side == \"home\")\n    {\n        var img = document.getElementById(\"PitcherPitching\");\n        var img2 = document.getElementById(\"BatterHitting\");\n    }\n    else\n    {\n        var img = document.getElementById(\"BluePitcherPitching\");\n        var img2 = document.getElementById(\"RedBatterHitting\");\n    }\n\n    ctx.drawImage(img, 0 * 128, 0, 128, 140, 0, 0, 96, 105);\n    ctx2.drawImage(img2, 0 * 192, 0, 192, 210, 0, 0, 160, 175);//in order to make the canvas change smooth, draw the frist frame of animation before display the Hit animation canvas.\n\n    PitcherPitchCanvas.style.filter = \"opacity(100%)\";\n    PitcherPitchCanvas.style.WebkitFilter = \"opacity(100%)\";\n    BatterHitCanvas.style.filter = \"opacity(100%)\";\n    BatterHitCanvas.style.WebkitFilter = \"opacity(100%)\";//display the hit animation canvas.\n\n    clearInterval(PitcherWaitControl);\n    clearInterval(BatterWaitControl);//clear the waiting animation counting.\n\n    BatterStatus = \"Ball\";\n\n    PitcherPitchOnload();//start calling the pitcher pitch animation. go to line 85.\n}\n\n\nvar BatterStrikeFrames = 11;\nvar BatterStrikeCurrFrame = 0;\n/**\n* This function is animation of strike when the pitcher pitch has been called\n* @param {object} this is the object of the result of each action had been selected.\n*/\nfunction drawBatterSwingStrike()\n{\n    var BatterHitCanvas = document.getElementById(\"BatterHit\");\n    BatterHitCanvas.width = 160;\n    BatterHitCanvas.height = 175;\n    var ctx = BatterHitCanvas.getContext(\"2d\");\n\n    if(Side == \"home\")\n    {\n        var img = document.getElementById(\"BatterHitting\");\n    }\n    else\n    {\n        var img = document.getElementById(\"RedBatterHitting\");\n    }\n    var width = 192;\n    var height = 210;\n\n    ctx.clearRect(0, 0, width, height);\n\n    ctx.drawImage(img, BatterStrikeCurrFrame * width, 0, width, height, 0, 0, BatterHitCanvas.width, BatterHitCanvas.height);//draw Batter hit animation frame.\n\n    if(BatterStrikeCurrFrame < BatterStrikeFrames)\n    {\n        BatterStrikeCurrFrame++;\n        if(BatterStrikeCurrFrame == 8)\n        {\n            BatterStrikeCurrFrame++;\n        }\n        if(BatterStrikeCurrFrame == 11)\n        {\n            clearInterval(PitcherPitchControl);\n            PitcherPitchCurrFrames = 0;\n        }\n    }\n    else\n    {\n        clearInterval(BatterSwingStrikeControl);\n        BatterStrikeCurrFrame = 0;\n        strikeBackOnload();\n    }\n\n}\n\nvar BatterSwingStrikeControl;\n/**\n* BaseChangeOnload - a control of strike animation, set the time interval of each frame.\n*\n*/\nexport function BatterSwingStrikeOnload()\n{\n    BatterSwingStrikeControl = setInterval(drawBatterSwingStrike, 110);\n}\n\n\nvar BatterOutFrames = 11;\nvar BatterOutCurrFrame = 0;\n/**\n* This function will draw the out animation\n*/\nfunction drawOut()\n{\n    var BatterHitCanvas = document.getElementById(\"BatterHit\");\n    BatterHitCanvas.width = 160;\n    BatterHitCanvas.height = 175;\n    var ctx = BatterHitCanvas.getContext(\"2d\");\n\n    if(Side == \"home\")\n    {\n        var img = document.getElementById(\"BatterHitting\");\n    }\n    else\n    {\n        var img = document.getElementById(\"RedBatterHitting\");\n    }\n    var width = 192;\n    var height = 210;\n\n    ctx.clearRect(0, 0, width, height);\n\n    ctx.drawImage(img, BatterOutCurrFrame * width, 0, width, height, 0, 0, BatterHitCanvas.width, BatterHitCanvas.height);//draw Batter hit animation frame.\n\n    if(BatterOutCurrFrame < BatterOutFrames)\n    {\n        BatterOutCurrFrame++;\n    }\n    else\n    {\n        clearInterval(PitcherPitchControl);\n        PitcherPitchCurrFrames = 0;\n        clearInterval(BatterSwingOutControl);\n        BatterOutCurrFrame = 0;\n        strikeBackOnload();\n    }\n}\n\nvar BatterSwingOutControl;\n/**\n* BatterSwingOutOnload - a control of out animation, set the time interval of each frame.\n*\n*/\nexport function BatterSwingOutOnload()\n{\n    BatterSwingOutControl = setInterval(drawOut, 80);\n}\n\nvar count1 = 0;\n/**\n* This function will the canvas back to normal after strike animation is finished.\n*\n*/\nfunction strikeBack()\n{\n    var PitcherPitchCanvas = document.getElementById(\"PitcherPitch\");\n    var BatterHitCanvas = document.getElementById(\"BatterHit\");\n    var PitcherWaitCanvas = document.getElementById(\"PitcherWait\");\n    var BatterWaitCanvas = document.getElementById(\"BatterWaitting\");\n\n    if(count1 < 7)\n    {\n        count1++;\n    }\n    else\n    {\n        count1 = 0;\n        clearInterval(StrikeBackControl);\n\n        if(gameAnimation.lastPitch.newInning == true)\n        {\n            SwitchSideOnload(Side);\n        }\n\n        PitcherWaitOnload();\n        BatterWaitOnload();\n\n        PitcherWaitCanvas.style.filter = \"opacity(100%)\";\n        PitcherWaitCanvas.style.WebkitFilter = \"opacity(100%)\";\n        BatterWaitCanvas.style.filter = \"opacity(100%)\";\n        BatterWaitCanvas.style.WebkitFilter = \"opacity(100%)\";\n        var ctx5 = BatterWaitCanvas.getContext(\"2d\");\n        var ctx6 = PitcherWaitCanvas.getContext(\"2d\");\n\n        PitcherPitchCanvas.style.filter = \"opacity(0%)\";\n        PitcherPitchCanvas.style.WebkitFilter = \"opacity(0%)\";\n        BatterHitCanvas.style.filter = \"opacity(0%)\";\n        BatterHitCanvas.style.WebkitFilter = \"opacity(0%)\";\n        var ctx1 = PitcherPitchCanvas.getContext(\"2d\");\n        ctx1.clearRect(0, 0, 128, 140);\n        var ctx2 = BatterHitCanvas.getContext(\"2d\");\n        ctx2.clearRect(0, 0, 192, 210);\n    }\n}\n\nvar StrikeBackControl;\n/**\n* strikeBackOnload - a control of strike back to normal function, set the time interval of each frame.\n*\n*/\nexport function strikeBackOnload()\n{\n    StrikeBackControl = setInterval(strikeBack, 80);\n}\n\n/**\n* This function will draw the take animation\n*\n*/\nfunction drawBatterTake()\n{\n    var BatterHitCanvas = document.getElementById(\"BatterHit\");\n    BatterHitCanvas.width = 160;\n    BatterHitCanvas.height = 175;\n    var ctx = BatterHitCanvas.getContext(\"2d\");\n\n    if(Side == \"home\")\n    {\n        var img = document.getElementById(\"BatterHitting\");\n    }\n    else\n    {\n        var img = document.getElementById(\"RedBatterHitting\");\n    }\n\n    var width = 192;\n    var height = 210;\n\n    ctx.clearRect(0, 0, width, height);\n\n    ctx.drawImage(img, width, 0, width, height, 0, 0, BatterHitCanvas.width, BatterHitCanvas.height);\n\n    if(PitcherPitchCurrFrames == 6)\n    {\n        clearInterval(PitcherPitchControl);\n        clearInterval(BatterTakeControl);\n        PitcherPitchCurrFrames = 0;\n        BallBackOnload();\n    }\n}\n\nvar BatterTakeControl;\n/**\n* BatterTakeOnload - a control of take animation, set the time interval of each frame.\n*\n*/\nexport function BatterTakeOnload()\n{\n    BatterTakeControl = setInterval(drawBatterTake, 300);\n}\n\n/**\n* This function will the canvas back to normal after Ball animation is finished.\n*\n*/\nfunction BallBack()\n{\n    var PitcherPitchCanvas = document.getElementById(\"PitcherPitch\");\n    var BatterHitCanvas = document.getElementById(\"BatterHit\");\n    var PitcherWaitCanvas = document.getElementById(\"PitcherWait\");\n    var BatterWaitCanvas = document.getElementById(\"BatterWaitting\");\n\n    if(count1 < 7)\n    {\n        count1++;\n    }\n    else\n    {\n        count1 = 0;\n        clearInterval(BallBackControl);\n\n        if(gameAnimation.lastPitch.newInning == true)\n        {\n            SwitchSideOnload(Side);\n        }\n\n        PitcherWaitOnload();\n        BatterWaitOnload();\n\n        PitcherWaitCanvas.style.filter = \"opacity(100%)\";\n        PitcherWaitCanvas.style.WebkitFilter = \"opacity(100%)\";\n        BatterWaitCanvas.style.filter = \"opacity(100%)\";\n        BatterWaitCanvas.style.WebkitFilter = \"opacity(100%)\";\n        var ctx5 = BatterWaitCanvas.getContext(\"2d\");\n        var ctx6 = PitcherWaitCanvas.getContext(\"2d\");\n\n        PitcherPitchCanvas.style.filter = \"opacity(0%)\";\n        PitcherPitchCanvas.style.WebkitFilter = \"opacity(0%)\";\n        BatterHitCanvas.style.filter = \"opacity(0%)\";\n        BatterHitCanvas.style.WebkitFilter = \"opacity(0%)\";\n        var ctx1 = PitcherPitchCanvas.getContext(\"2d\");\n        ctx1.clearRect(0, 0, 128, 140);\n        var ctx2 = BatterHitCanvas.getContext(\"2d\");\n        ctx2.clearRect(0, 0, 192, 210);\n    }\n}\n\nvar BallBackControl;\n/**\n* BallBackOnload - a control of Ball back function.\n*\n*/\nexport function BallBackOnload()\n{\n    BallBackControl = setInterval(BallBack, 80);\n}\n\nvar BallFrames = 5;\nvar BallCurrFrames = 0;\nvar initalTop = 0;\n/**\n* This function is the animation of a flying Ball\n*\n*/\nfunction drawBall()\n{\n    var BallCanvas= document.getElementById(\"Ball\");\n    var screenWidth = document.documentElement.clientWidth;\n    var screenHeight = document.documentElement.clientHeight;\n    BallCanvas.width = 128;\n    BallCanvas.height = 128;\n    BallCanvas.style.top = (screenHeight * 0.20) + \"px\";\n    BallCanvas.style.left = (screenWidth * 0.33) + \"px\";\n    initalTop = (screenHeight * 0.20)\n    var temp =  initalTop * 0.73 * (BallCurrFrames + 1);             //the position of the canvas changing with the frame increment.\n    BallCanvas.style.top = temp + \"px\";\n    var ctx = BallCanvas.getContext(\"2d\");\n\n    var img = document.getElementById(\"BallShaping\");\n    var width = 128;\n    var height = 128;\n\n    ctx.clearRect(0, 0, width, height);\n\n    BallCurrFrames++;\n\n    ctx.drawImage(img, BallCurrFrames * width, 0, width, height, 0, 0, BallCanvas.width, BallCanvas.height);//draw this flying ball frame\n\n    if(BallCurrFrames == BallFrames)\n    {\n        clearInterval(BallControl);                             //when reach the final frame, clear the counting timer, and clean the canvas.\n        ctx.clearRect(0, 0, width, height);\n        BallCurrFrames = 0;\n    }\n}\n\nvar BallControl;\n/**\n* BallOnload - a control of flying ball animation, set the time interval of each frame.\n*\n*/\nexport function BallOnload()\n{\n    BallControl = setInterval(drawBall, 70);//every 70ms draw flying ball once\n}\n\nvar BatterWaitFrames = 17;\nvar BatterWaitCurrFrame = 0;\n/**\n* This function is the animation of Batter waiting of the action been selected.\n*\n*/\nfunction drawBatterWait()\n{\n    var BatterWaitCanvas = document.getElementById(\"BatterWaitting\");\n    BatterWaitCanvas.width = 160;\n    BatterWaitCanvas.height = 160;\n    var ctx = BatterWaitCanvas.getContext(\"2d\");\n\n    if(Side == \"home\")\n    {\n        var img = document.getElementById(\"BatterWait\");\n    }\n    else\n    {\n        var img = document.getElementById(\"RedBatterWait\");\n    }\n    var width = 192;\n    var height = 192;\n\n    ctx.clearRect(0, 0, width, height);\n    BatterWaitCurrFrame++;\n    if(BatterWaitCurrFrame == BatterWaitFrames)\n    {\n        BatterWaitCurrFrame = 0;\n    }\n    ctx.drawImage(img, BatterWaitCurrFrame * width, 0, width, height, 0, 0, BatterWaitCanvas.width, BatterWaitCanvas.height);\n}\n\nvar BatterWaitControl;\n/**\n* BatterWaitOnload - a control of batter waiting animation, set the time interval of each frame.\n*\n*/\nexport function BatterWaitOnload()\n{\n    BatterWaitControl = setInterval(drawBatterWait, 125);\n}\n\nvar PitcherWaitFrames = 16;\nvar PitcherWaitCurrFrames = 0;\n/**\n* This function is the animation of pitcher waiting of the action been selected.\n*\n*/\nfunction drawPitcherWait()\n{\n    var PitcherWaitCanvas = document.getElementById(\"PitcherWait\");\n    PitcherWaitCanvas.width = 96;\n    PitcherWaitCanvas.height = 105;\n    var ctx = PitcherWaitCanvas.getContext(\"2d\");\n\n    if(Side == \"home\")\n    {\n        var img = document.getElementById(\"PitcherWaiting\");\n    }\n    else\n    {\n        var img = document.getElementById(\"BluePitcherWaiting\");\n    }\n\n    var width = 128;\n    var height = 140;\n\n    ctx.clearRect(0, 0, width, height);\n\n    PitcherWaitCurrFrames++;\n    if(PitcherWaitCurrFrames == PitcherWaitFrames)\n    {\n        PitcherWaitCurrFrames = 0;\n    }\n\n    ctx.drawImage(img, PitcherWaitCurrFrames * width, 0, width, height, 0, 0, PitcherWaitCanvas.width, PitcherWaitCanvas.height);\n}\n\nvar PitcherWaitControl;\n/**\n* PitcherWaitOnload - a control of pitcher waiting animation, set the time interval of each frame.\n*\n*/\nexport function PitcherWaitOnload()\n{\n    PitcherWaitControl = setInterval(drawPitcherWait, 188);\n}\n\nexport function batterSound()//Sounds for pitching, batting and catching.\n{\n    var p= gameAnimation.lastPitch.play;//foul,strike,out\n    var d= 1300;//num time delay for sound to begin.\n    var t= Side ;//h=home, v=visitor\n    if(t== \"home\")\n    {\n        t= \"away\";\n    }\n    else\n    {\n        t=\"home\";\n    }\n    setTimeout(playSound, d, p );\n    function playSound(p)\n    {\n        if(t== \"home\")\n        {\n            if(p== \"ball\")\n            {\n                document.getElementById(\"hBall\").play();\n            }\n            if(p== \"foul\")\n            {\n                document.getElementById(\"hFoul\").play();\n            }\n            if(p== \"foulout\" ||p== \"flyout\")\n            {\n                document.getElementById(\"hHitOut\").play();\n            }\n            if(p== \"single\" || p==\"singleAdvance\" || p==\"error\" || p==\"flyoutAdv\" || p==\"flyoutNoAdv1st\" ||p== \"groundout\")\n            {\n                document.getElementById('hB1').play();\n            }\n            if(p== \"singleRISP\")\n            {\n                document.getElementById('hB3').play();\n            }\n            if(p== \"doubleClear\" ||p== \"double\" || p==\"errorSecond\")\n            {\n                document.getElementById('hB2').play();\n            }\n            if(p== \"triple\")\n            {\n                document.getElementById('hB3').play();\n            }\n            if(p== \"homeRun\")\n            {\n                document.getElementById(\"hHomeRun\").play();\n            }\n            if(p== \"groundoutAdvIfForced\" || p==\"groundoutDoublePlay\" ||p== \"lineoutDoublePlay\" || p== \"triplePlay\" ||p== \"fieldersChoice\")\n            {\n                document.getElementById(\"hHitOut\").play();\n            }\n            if(p== \"swingingStrike\")\n            {\n                document.getElementById(\"hSwingStrike\").play();\n            }\n            if(p== \"calledStrike\")\n            {\n                document.getElementById(\"hTakeStrike\").play();\n            }\n        }\n        else\n        {\n            if(p== \"ball\")\n            {\n                document.getElementById(\"vBall\").play();\n            }\n            if(p== \"foul\")\n            {\n                document.getElementById(\"vFoul\").play();\n            }\n            if(p== \"foulout\" ||p== \"flyout\")\n            {\n                document.getElementById(\"vB1Out\").play();\n            }\n            if(p== \"single\" ||p== \"singleAdvance\" || p==\"error\" || p==\"flyoutAdv\" || p==\"flyoutNoAdv1st\" || p==\"groundout\")\n            {\n                document.getElementById('vB1').play();\n            }\n            if(p== \"singleRISP\")\n            {\n                document.getElementById('vB1').play();\n            }\n            if(p== \"doubleClear\" || p==\"double\" || p==\"errorSecond\")\n            {\n                document.getElementById('vB1').play();\n            }\n            if(p== \"triple\")\n            {\n                document.getElementById('vB1').play();\n            }\n            if(p== \"homeRun\")\n            {\n                document.getElementById(\"vHomeRun\").play();\n            }\n            if(p== \"groundoutAdvIfForced\"  ||p== \"groundoutDoublePlay\" || p==\"lineoutDoublePlay\" || p==\"triplePlay\" || p==\"fieldersChoice\")\n            {\n                document.getElementById(\"vB1\").play();\n            }\n            if(p== \"swingingStrike\")\n            {\n                document.getElementById(\"vSwingStrike\").play();\n            }\n            if(p== \"calledStrike\")\n            {\n                document.getElementById(\"vTakeStrike\").play();\n            }\n        }\n    }\n}\n",
    "static": true,
    "longname": "/home/jacob/Programming/eecs448/big-league-baseball/src/Animation.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 49,
    "kind": "variable",
    "name": "count2",
    "memberof": "src/Animation.js",
    "static": true,
    "longname": "src/Animation.js~count2",
    "access": "public",
    "export": false,
    "importPath": "big-league-baseball/src/Animation.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "type": {
      "types": [
        "number"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 50,
    "kind": "function",
    "name": "SwitchSide",
    "memberof": "src/Animation.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/Animation.js~SwitchSide",
    "access": "public",
    "export": true,
    "importPath": "big-league-baseball/src/Animation.js",
    "importStyle": "{SwitchSide}",
    "description": "SwitchSide function is to swtich the side when the a new inning came out.",
    "lineNumber": 8,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "it",
        "description": "represented the side of img. Home will call blue, away will call red."
      }
    ],
    "return": null
  },
  {
    "__docId__": 51,
    "kind": "function",
    "name": "SwitchSideOnload",
    "memberof": "src/Animation.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/Animation.js~SwitchSideOnload",
    "access": "public",
    "export": true,
    "importPath": "big-league-baseball/src/Animation.js",
    "importStyle": "{SwitchSideOnload}",
    "description": "SwitchSideOnload will make switchside been recalled for a period of time.",
    "lineNumber": 83,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "it",
        "description": "represented the side of img. Home will call blue, away will call red."
      }
    ],
    "return": null
  },
  {
    "__docId__": 52,
    "kind": "variable",
    "name": "BackGroundCurrFrame",
    "memberof": "src/Animation.js",
    "static": true,
    "longname": "src/Animation.js~BackGroundCurrFrame",
    "access": "public",
    "export": false,
    "importPath": "big-league-baseball/src/Animation.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 88,
    "undocument": true,
    "type": {
      "types": [
        "number"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 53,
    "kind": "variable",
    "name": "BackGroundTotalFrame",
    "memberof": "src/Animation.js",
    "static": true,
    "longname": "src/Animation.js~BackGroundTotalFrame",
    "access": "public",
    "export": false,
    "importPath": "big-league-baseball/src/Animation.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 89,
    "undocument": true,
    "type": {
      "types": [
        "number"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 54,
    "kind": "variable",
    "name": "temp",
    "memberof": "src/Animation.js",
    "static": true,
    "longname": "src/Animation.js~temp",
    "access": "public",
    "export": false,
    "importPath": "big-league-baseball/src/Animation.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 90,
    "undocument": true,
    "type": {
      "types": [
        "number"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 55,
    "kind": "function",
    "name": "BackGround",
    "memberof": "src/Animation.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/Animation.js~BackGround",
    "access": "public",
    "export": true,
    "importPath": "big-league-baseball/src/Animation.js",
    "importStyle": "{BackGround}",
    "description": "BackGroud function will make the playground background move. It is a animation function.",
    "lineNumber": 95,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "it",
        "description": "represented the side of img. Home will call blue, away will call red."
      }
    ],
    "return": null
  },
  {
    "__docId__": 56,
    "kind": "function",
    "name": "BackGroundOnload",
    "memberof": "src/Animation.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/Animation.js~BackGroundOnload",
    "access": "public",
    "export": true,
    "importPath": "big-league-baseball/src/Animation.js",
    "importStyle": "{BackGroundOnload}",
    "description": "BackGroundOnload, make the background moving when the game been played.",
    "lineNumber": 134,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "it",
        "description": "represented the side of img. Home will call blue, away will call red."
      }
    ],
    "return": null
  },
  {
    "__docId__": 57,
    "kind": "variable",
    "name": "BatterStatus",
    "memberof": "src/Animation.js",
    "static": true,
    "longname": "src/Animation.js~BatterStatus",
    "access": "public",
    "export": false,
    "importPath": "big-league-baseball/src/Animation.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 140,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 58,
    "kind": "function",
    "name": "drawPitchHit",
    "memberof": "src/Animation.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/Animation.js~drawPitchHit",
    "access": "public",
    "export": true,
    "importPath": "big-league-baseball/src/Animation.js",
    "importStyle": "{drawPitchHit}",
    "description": "drawPitchHit, this function is a control of stop the waiting animations and hidden the canvas to open the hit animation canvas.",
    "lineNumber": 145,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "this",
        "description": "is the object of the result of each action had been selected."
      }
    ],
    "return": null
  },
  {
    "__docId__": 59,
    "kind": "variable",
    "name": "PitcherPitchFrames",
    "memberof": "src/Animation.js",
    "static": true,
    "longname": "src/Animation.js~PitcherPitchFrames",
    "access": "public",
    "export": false,
    "importPath": "big-league-baseball/src/Animation.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 189,
    "undocument": true,
    "type": {
      "types": [
        "number"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 60,
    "kind": "variable",
    "name": "PitcherPitchCurrFrames",
    "memberof": "src/Animation.js",
    "static": true,
    "longname": "src/Animation.js~PitcherPitchCurrFrames",
    "access": "public",
    "export": false,
    "importPath": "big-league-baseball/src/Animation.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 190,
    "undocument": true,
    "type": {
      "types": [
        "number"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 61,
    "kind": "function",
    "name": "drawPitcherPitch",
    "memberof": "src/Animation.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/Animation.js~drawPitcherPitch",
    "access": "public",
    "export": false,
    "importPath": "big-league-baseball/src/Animation.js",
    "importStyle": null,
    "description": "drawPitcherPitch, this is the animation of pitcher pitch.",
    "lineNumber": 195,
    "params": [],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 62,
    "kind": "function",
    "name": "PitcherPitchOnload",
    "memberof": "src/Animation.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/Animation.js~PitcherPitchOnload",
    "access": "public",
    "export": true,
    "importPath": "big-league-baseball/src/Animation.js",
    "importStyle": "{PitcherPitchOnload}",
    "description": "PitcherPitchOnload - a control of pitcherPitch anuation, set the time interval of each frame.",
    "lineNumber": 274,
    "params": [],
    "return": null
  },
  {
    "__docId__": 63,
    "kind": "variable",
    "name": "BatterHitFrames",
    "memberof": "src/Animation.js",
    "static": true,
    "longname": "src/Animation.js~BatterHitFrames",
    "access": "public",
    "export": false,
    "importPath": "big-league-baseball/src/Animation.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 280,
    "undocument": true,
    "type": {
      "types": [
        "number"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 64,
    "kind": "variable",
    "name": "BatterHitCurrFrame",
    "memberof": "src/Animation.js",
    "static": true,
    "longname": "src/Animation.js~BatterHitCurrFrame",
    "access": "public",
    "export": false,
    "importPath": "big-league-baseball/src/Animation.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 281,
    "undocument": true,
    "type": {
      "types": [
        "number"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 65,
    "kind": "variable",
    "name": "count",
    "memberof": "src/Animation.js",
    "static": true,
    "longname": "src/Animation.js~count",
    "access": "public",
    "export": false,
    "importPath": "big-league-baseball/src/Animation.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 282,
    "undocument": true,
    "type": {
      "types": [
        "number"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 66,
    "kind": "function",
    "name": "drawBatterHit",
    "memberof": "src/Animation.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/Animation.js~drawBatterHit",
    "access": "public",
    "export": false,
    "importPath": "big-league-baseball/src/Animation.js",
    "importStyle": null,
    "description": "drawBatterHit, this is the animation of batter hit.",
    "lineNumber": 286,
    "params": [],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 67,
    "kind": "function",
    "name": "BatterHitOnload",
    "memberof": "src/Animation.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/Animation.js~BatterHitOnload",
    "access": "public",
    "export": true,
    "importPath": "big-league-baseball/src/Animation.js",
    "importStyle": "{BatterHitOnload}",
    "description": "BatterHitOnload - a control of Batter hit animation, set the time interval of each frame.",
    "lineNumber": 329,
    "params": [],
    "return": null
  },
  {
    "__docId__": 68,
    "kind": "function",
    "name": "drawAboveView",
    "memberof": "src/Animation.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/Animation.js~drawAboveView",
    "access": "public",
    "export": false,
    "importPath": "big-league-baseball/src/Animation.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 334,
    "undocument": true,
    "params": [],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 69,
    "kind": "variable",
    "name": "base1",
    "memberof": "src/Animation.js",
    "static": true,
    "longname": "src/Animation.js~base1",
    "access": "public",
    "export": false,
    "importPath": "big-league-baseball/src/Animation.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 366,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 70,
    "kind": "variable",
    "name": "base2",
    "memberof": "src/Animation.js",
    "static": true,
    "longname": "src/Animation.js~base2",
    "access": "public",
    "export": false,
    "importPath": "big-league-baseball/src/Animation.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 367,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 71,
    "kind": "variable",
    "name": "base3",
    "memberof": "src/Animation.js",
    "static": true,
    "longname": "src/Animation.js~base3",
    "access": "public",
    "export": false,
    "importPath": "big-league-baseball/src/Animation.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 368,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 72,
    "kind": "variable",
    "name": "base4",
    "memberof": "src/Animation.js",
    "static": true,
    "longname": "src/Animation.js~base4",
    "access": "public",
    "export": false,
    "importPath": "big-league-baseball/src/Animation.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 369,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 73,
    "kind": "variable",
    "name": "times",
    "memberof": "src/Animation.js",
    "static": true,
    "longname": "src/Animation.js~times",
    "access": "public",
    "export": false,
    "importPath": "big-league-baseball/src/Animation.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 370,
    "undocument": true,
    "type": {
      "types": [
        "number"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 74,
    "kind": "variable",
    "name": "BaseChangeCurrFrame",
    "memberof": "src/Animation.js",
    "static": true,
    "longname": "src/Animation.js~BaseChangeCurrFrame",
    "access": "public",
    "export": false,
    "importPath": "big-league-baseball/src/Animation.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 371,
    "undocument": true,
    "type": {
      "types": [
        "number"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 75,
    "kind": "variable",
    "name": "BaseChangeTotalFrame",
    "memberof": "src/Animation.js",
    "static": true,
    "longname": "src/Animation.js~BaseChangeTotalFrame",
    "access": "public",
    "export": false,
    "importPath": "big-league-baseball/src/Animation.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 372,
    "undocument": true,
    "type": {
      "types": [
        "number"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 76,
    "kind": "function",
    "name": "drawBaseChange",
    "memberof": "src/Animation.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/Animation.js~drawBaseChange",
    "access": "public",
    "export": false,
    "importPath": "big-league-baseball/src/Animation.js",
    "importStyle": null,
    "description": "drawBaseChange - This a control function and animation. It will determine which base change animation need to been called.",
    "lineNumber": 377,
    "params": [],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 77,
    "kind": "function",
    "name": "BaseChangeOnload",
    "memberof": "src/Animation.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/Animation.js~BaseChangeOnload",
    "access": "public",
    "export": true,
    "importPath": "big-league-baseball/src/Animation.js",
    "importStyle": "{BaseChangeOnload}",
    "description": "BaseChangeOnload - a control of Base change animation, set the time interval of each frame.",
    "lineNumber": 797,
    "params": [],
    "return": null
  },
  {
    "__docId__": 78,
    "kind": "function",
    "name": "fieldBack",
    "memberof": "src/Animation.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/Animation.js~fieldBack",
    "access": "public",
    "export": false,
    "importPath": "big-league-baseball/src/Animation.js",
    "importStyle": null,
    "description": "This function will make the canvas back to normal when the field animation is finished.",
    "lineNumber": 805,
    "params": [],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 79,
    "kind": "function",
    "name": "drawSwingStrike",
    "memberof": "src/Animation.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/Animation.js~drawSwingStrike",
    "access": "public",
    "export": true,
    "importPath": "big-league-baseball/src/Animation.js",
    "importStyle": "{drawSwingStrike}",
    "description": "This function is animation of strike.",
    "lineNumber": 865,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "this",
        "description": "is the object of the result of each action had been selected."
      }
    ],
    "return": null
  },
  {
    "__docId__": 80,
    "kind": "function",
    "name": "drawSwingOut",
    "memberof": "src/Animation.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/Animation.js~drawSwingOut",
    "access": "public",
    "export": true,
    "importPath": "big-league-baseball/src/Animation.js",
    "importStyle": "{drawSwingOut}",
    "description": "This function is animation of swing but it is Out.",
    "lineNumber": 915,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "this",
        "description": "is the object of the result of each action had been selected."
      }
    ],
    "return": null
  },
  {
    "__docId__": 81,
    "kind": "function",
    "name": "drawTakeBall",
    "memberof": "src/Animation.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/Animation.js~drawTakeBall",
    "access": "public",
    "export": true,
    "importPath": "big-league-baseball/src/Animation.js",
    "importStyle": "{drawTakeBall}",
    "description": "This function is animation of batter decided take and it was a Ball",
    "lineNumber": 965,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "this",
        "description": "is the object of the result of each action had been selected."
      }
    ],
    "return": null
  },
  {
    "__docId__": 82,
    "kind": "variable",
    "name": "BatterStrikeFrames",
    "memberof": "src/Animation.js",
    "static": true,
    "longname": "src/Animation.js~BatterStrikeFrames",
    "access": "public",
    "export": false,
    "importPath": "big-league-baseball/src/Animation.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1012,
    "undocument": true,
    "type": {
      "types": [
        "number"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 83,
    "kind": "variable",
    "name": "BatterStrikeCurrFrame",
    "memberof": "src/Animation.js",
    "static": true,
    "longname": "src/Animation.js~BatterStrikeCurrFrame",
    "access": "public",
    "export": false,
    "importPath": "big-league-baseball/src/Animation.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1013,
    "undocument": true,
    "type": {
      "types": [
        "number"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 84,
    "kind": "function",
    "name": "drawBatterSwingStrike",
    "memberof": "src/Animation.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/Animation.js~drawBatterSwingStrike",
    "access": "public",
    "export": false,
    "importPath": "big-league-baseball/src/Animation.js",
    "importStyle": null,
    "description": "This function is animation of strike when the pitcher pitch has been called",
    "lineNumber": 1018,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "this",
        "description": "is the object of the result of each action had been selected."
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 85,
    "kind": "function",
    "name": "BatterSwingStrikeOnload",
    "memberof": "src/Animation.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/Animation.js~BatterSwingStrikeOnload",
    "access": "public",
    "export": true,
    "importPath": "big-league-baseball/src/Animation.js",
    "importStyle": "{BatterSwingStrikeOnload}",
    "description": "BaseChangeOnload - a control of strike animation, set the time interval of each frame.",
    "lineNumber": 1067,
    "params": [],
    "return": null
  },
  {
    "__docId__": 86,
    "kind": "variable",
    "name": "BatterOutFrames",
    "memberof": "src/Animation.js",
    "static": true,
    "longname": "src/Animation.js~BatterOutFrames",
    "access": "public",
    "export": false,
    "importPath": "big-league-baseball/src/Animation.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1073,
    "undocument": true,
    "type": {
      "types": [
        "number"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 87,
    "kind": "variable",
    "name": "BatterOutCurrFrame",
    "memberof": "src/Animation.js",
    "static": true,
    "longname": "src/Animation.js~BatterOutCurrFrame",
    "access": "public",
    "export": false,
    "importPath": "big-league-baseball/src/Animation.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1074,
    "undocument": true,
    "type": {
      "types": [
        "number"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 88,
    "kind": "function",
    "name": "drawOut",
    "memberof": "src/Animation.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/Animation.js~drawOut",
    "access": "public",
    "export": false,
    "importPath": "big-league-baseball/src/Animation.js",
    "importStyle": null,
    "description": "This function will draw the out animation",
    "lineNumber": 1078,
    "params": [],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 89,
    "kind": "function",
    "name": "BatterSwingOutOnload",
    "memberof": "src/Animation.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/Animation.js~BatterSwingOutOnload",
    "access": "public",
    "export": true,
    "importPath": "big-league-baseball/src/Animation.js",
    "importStyle": "{BatterSwingOutOnload}",
    "description": "BatterSwingOutOnload - a control of out animation, set the time interval of each frame.",
    "lineNumber": 1119,
    "params": [],
    "return": null
  },
  {
    "__docId__": 90,
    "kind": "variable",
    "name": "count1",
    "memberof": "src/Animation.js",
    "static": true,
    "longname": "src/Animation.js~count1",
    "access": "public",
    "export": false,
    "importPath": "big-league-baseball/src/Animation.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1124,
    "undocument": true,
    "type": {
      "types": [
        "number"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 91,
    "kind": "function",
    "name": "strikeBack",
    "memberof": "src/Animation.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/Animation.js~strikeBack",
    "access": "public",
    "export": false,
    "importPath": "big-league-baseball/src/Animation.js",
    "importStyle": null,
    "description": "This function will the canvas back to normal after strike animation is finished.",
    "lineNumber": 1129,
    "params": [],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 92,
    "kind": "function",
    "name": "strikeBackOnload",
    "memberof": "src/Animation.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/Animation.js~strikeBackOnload",
    "access": "public",
    "export": true,
    "importPath": "big-league-baseball/src/Animation.js",
    "importStyle": "{strikeBackOnload}",
    "description": "strikeBackOnload - a control of strike back to normal function, set the time interval of each frame.",
    "lineNumber": 1176,
    "params": [],
    "return": null
  },
  {
    "__docId__": 93,
    "kind": "function",
    "name": "drawBatterTake",
    "memberof": "src/Animation.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/Animation.js~drawBatterTake",
    "access": "public",
    "export": false,
    "importPath": "big-league-baseball/src/Animation.js",
    "importStyle": null,
    "description": "This function will draw the take animation",
    "lineNumber": 1185,
    "params": [],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 94,
    "kind": "function",
    "name": "BatterTakeOnload",
    "memberof": "src/Animation.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/Animation.js~BatterTakeOnload",
    "access": "public",
    "export": true,
    "importPath": "big-league-baseball/src/Animation.js",
    "importStyle": "{BatterTakeOnload}",
    "description": "BatterTakeOnload - a control of take animation, set the time interval of each frame.",
    "lineNumber": 1222,
    "params": [],
    "return": null
  },
  {
    "__docId__": 95,
    "kind": "function",
    "name": "BallBack",
    "memberof": "src/Animation.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/Animation.js~BallBack",
    "access": "public",
    "export": false,
    "importPath": "big-league-baseball/src/Animation.js",
    "importStyle": null,
    "description": "This function will the canvas back to normal after Ball animation is finished.",
    "lineNumber": 1231,
    "params": [],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 96,
    "kind": "function",
    "name": "BallBackOnload",
    "memberof": "src/Animation.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/Animation.js~BallBackOnload",
    "access": "public",
    "export": true,
    "importPath": "big-league-baseball/src/Animation.js",
    "importStyle": "{BallBackOnload}",
    "description": "BallBackOnload - a control of Ball back function.",
    "lineNumber": 1278,
    "params": [],
    "return": null
  },
  {
    "__docId__": 97,
    "kind": "variable",
    "name": "BallFrames",
    "memberof": "src/Animation.js",
    "static": true,
    "longname": "src/Animation.js~BallFrames",
    "access": "public",
    "export": false,
    "importPath": "big-league-baseball/src/Animation.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1283,
    "undocument": true,
    "type": {
      "types": [
        "number"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 98,
    "kind": "variable",
    "name": "BallCurrFrames",
    "memberof": "src/Animation.js",
    "static": true,
    "longname": "src/Animation.js~BallCurrFrames",
    "access": "public",
    "export": false,
    "importPath": "big-league-baseball/src/Animation.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1284,
    "undocument": true,
    "type": {
      "types": [
        "number"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 99,
    "kind": "variable",
    "name": "initalTop",
    "memberof": "src/Animation.js",
    "static": true,
    "longname": "src/Animation.js~initalTop",
    "access": "public",
    "export": false,
    "importPath": "big-league-baseball/src/Animation.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1285,
    "undocument": true,
    "type": {
      "types": [
        "number"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 100,
    "kind": "function",
    "name": "drawBall",
    "memberof": "src/Animation.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/Animation.js~drawBall",
    "access": "public",
    "export": false,
    "importPath": "big-league-baseball/src/Animation.js",
    "importStyle": null,
    "description": "This function is the animation of a flying Ball",
    "lineNumber": 1290,
    "params": [],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 101,
    "kind": "function",
    "name": "BallOnload",
    "memberof": "src/Animation.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/Animation.js~BallOnload",
    "access": "public",
    "export": true,
    "importPath": "big-league-baseball/src/Animation.js",
    "importStyle": "{BallOnload}",
    "description": "BallOnload - a control of flying ball animation, set the time interval of each frame.",
    "lineNumber": 1327,
    "params": [],
    "return": null
  },
  {
    "__docId__": 102,
    "kind": "variable",
    "name": "BatterWaitFrames",
    "memberof": "src/Animation.js",
    "static": true,
    "longname": "src/Animation.js~BatterWaitFrames",
    "access": "public",
    "export": false,
    "importPath": "big-league-baseball/src/Animation.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1332,
    "undocument": true,
    "type": {
      "types": [
        "number"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 103,
    "kind": "variable",
    "name": "BatterWaitCurrFrame",
    "memberof": "src/Animation.js",
    "static": true,
    "longname": "src/Animation.js~BatterWaitCurrFrame",
    "access": "public",
    "export": false,
    "importPath": "big-league-baseball/src/Animation.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1333,
    "undocument": true,
    "type": {
      "types": [
        "number"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 104,
    "kind": "function",
    "name": "drawBatterWait",
    "memberof": "src/Animation.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/Animation.js~drawBatterWait",
    "access": "public",
    "export": false,
    "importPath": "big-league-baseball/src/Animation.js",
    "importStyle": null,
    "description": "This function is the animation of Batter waiting of the action been selected.",
    "lineNumber": 1338,
    "params": [],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 105,
    "kind": "function",
    "name": "BatterWaitOnload",
    "memberof": "src/Animation.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/Animation.js~BatterWaitOnload",
    "access": "public",
    "export": true,
    "importPath": "big-league-baseball/src/Animation.js",
    "importStyle": "{BatterWaitOnload}",
    "description": "BatterWaitOnload - a control of batter waiting animation, set the time interval of each frame.",
    "lineNumber": 1370,
    "params": [],
    "return": null
  },
  {
    "__docId__": 106,
    "kind": "variable",
    "name": "PitcherWaitFrames",
    "memberof": "src/Animation.js",
    "static": true,
    "longname": "src/Animation.js~PitcherWaitFrames",
    "access": "public",
    "export": false,
    "importPath": "big-league-baseball/src/Animation.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1375,
    "undocument": true,
    "type": {
      "types": [
        "number"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 107,
    "kind": "variable",
    "name": "PitcherWaitCurrFrames",
    "memberof": "src/Animation.js",
    "static": true,
    "longname": "src/Animation.js~PitcherWaitCurrFrames",
    "access": "public",
    "export": false,
    "importPath": "big-league-baseball/src/Animation.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1376,
    "undocument": true,
    "type": {
      "types": [
        "number"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 108,
    "kind": "function",
    "name": "drawPitcherWait",
    "memberof": "src/Animation.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/Animation.js~drawPitcherWait",
    "access": "public",
    "export": false,
    "importPath": "big-league-baseball/src/Animation.js",
    "importStyle": null,
    "description": "This function is the animation of pitcher waiting of the action been selected.",
    "lineNumber": 1381,
    "params": [],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 109,
    "kind": "function",
    "name": "PitcherWaitOnload",
    "memberof": "src/Animation.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/Animation.js~PitcherWaitOnload",
    "access": "public",
    "export": true,
    "importPath": "big-league-baseball/src/Animation.js",
    "importStyle": "{PitcherWaitOnload}",
    "description": "PitcherWaitOnload - a control of pitcher waiting animation, set the time interval of each frame.",
    "lineNumber": 1416,
    "params": [],
    "return": null
  },
  {
    "__docId__": 110,
    "kind": "function",
    "name": "batterSound",
    "memberof": "src/Animation.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/Animation.js~batterSound",
    "access": "public",
    "export": true,
    "importPath": "big-league-baseball/src/Animation.js",
    "importStyle": "{batterSound}",
    "description": null,
    "lineNumber": 1421,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 111,
    "kind": "file",
    "name": "src/Catcher.js",
    "content": "'use strict';\n/**\n *Child of PositionPlayer class\n */\nimport { PositionPlayer } from './PositionPlayer.js';\n/**\n * Catcher class - stores information about name, position, batting strength, baserunning speed, whether they have been chosen on a team.\n */\nexport class Catcher extends PositionPlayer {\n    /**\n    * * Constructor creates a player that stores there name, position, hitting stats, baserunning speed and whether the player is on a team using functions inherited from the PositionPlayer class.\n    * POSTCONDITION: name, position, hitting stats, baserunning speed all now have set values.\n        * @extends {PositionPlayerClass}This class is a child of the PositionPlayer class.\n        * @param {string} positionType The players position\n        */\n    constructor(name, position, batStrengths, baseSpeed){\n        /**\n        * @extends {PositionPlayerClass}\n        */\n        super(name, position, batStrengths, baseSpeed);\n    }\n}\n",
    "static": true,
    "longname": "/home/jacob/Programming/eecs448/big-league-baseball/src/Catcher.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 112,
    "kind": "class",
    "name": "Catcher",
    "memberof": "src/Catcher.js",
    "static": true,
    "longname": "src/Catcher.js~Catcher",
    "access": "public",
    "export": true,
    "importPath": "big-league-baseball/src/Catcher.js",
    "importStyle": "{Catcher}",
    "description": "Catcher class - stores information about name, position, batting strength, baserunning speed, whether they have been chosen on a team.",
    "lineNumber": 9,
    "interface": false,
    "extends": [
      "src/PositionPlayer.js~PositionPlayer"
    ]
  },
  {
    "__docId__": 113,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/Catcher.js~Catcher",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Catcher.js~Catcher#constructor",
    "access": "public",
    "description": "* Constructor creates a player that stores there name, position, hitting stats, baserunning speed and whether the player is on a team using functions inherited from the PositionPlayer class.\nPOSTCONDITION: name, position, hitting stats, baserunning speed all now have set values.",
    "lineNumber": 16,
    "unknown": [
      {
        "tagName": "@extends",
        "tagValue": "{PositionPlayerClass}This class is a child of the PositionPlayer class."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "positionType",
        "description": "The players position"
      }
    ]
  },
  {
    "__docId__": 114,
    "kind": "file",
    "name": "src/Game.js",
    "content": "'use strict';\nimport { Team } from \"./Team.js\";\n\n/**\n * Game class - makes decisions and stores the game status based on player/user actions.\n */\nexport class Game {\n\t/**\n\t * Constructor - creates and instantiates all necessary variables\n\t * @param {string} playerTeam The team that the user will play as\n\t */\n\tconstructor(playerTeam) {\n\n\t\t/**\n\t\t * The team the user will be playing for, either \"home\" or \"away\".\n\t\t * @type {string}\n\t\t */\n\t\tthis.playerTeam = playerTeam;\n\n\t\t/**\n\t\t * Number of outs in the inning\n\t\t * @type {number}\n\t\t */\n\t\tthis.outs = 0;\n\t\t/**\n\t\t * Number of balls in the AB\n\t\t * @type {number}\n\t\t */\n\t\tthis.balls = 0;\n\t\t/**\n\t\t * Number of strikes in the AB\n\t\t * @type {number}\n\t\t */\n\t\tthis.strikes = 0;\n\t\t/**\n\t\t * First base - true if occupied, false otherwise\n\t\t * @type {boolean}\n\t\t */\n\t\tthis.first = false;\n\t\t/**\n\t\t * Second base - true if occupied, false otherwise\n\t\t * @type {boolean}\n\t\t */\n\t\tthis.second = false;\n\t\t/**\n\t\t * Third base - true if occupied, false otherwise\n\t\t * @type {boolean}\n\t\t */\n\t\tthis.third = false;\n\n\t\t/**\n\t\t * Home team object - stores all data for the home team\n\t\t * @type {Team}\n\t\t */\n\t\tthis.homeTeam = new Team(\"home\");\n\t\t/**\n\t\t * Visitor team object - stores all data for the visiting team\n\t\t * @type {Team}\n\t\t */\n\t\tthis.visitTeam = new Team(\"away\");\n\n\t\t/**\n\t\t * Position in the home team lineup that is at bat (or scheduled to bat next)\n\t\t * @type {number}\n\t\t */\n\t\tthis.homeAB = 0;\n\n\t\t/**\n\t\t * Position in the visiting team lineup that is at bat (or scheduled to bat next)\n\t\t * @type {number}\n\t\t */\n\t\tthis.visitAB = 0;\n\n\t\t/**\n\t\t * Inning number - this.inningSide denotes the top or the bottom of the inning\n\t\t * @type {number}\n\t\t */\n\t\tthis.inning = 1;\n\n\t\t/**\n\t\t * Top or the bottom of the inning - false denotes the top, true denotes the bottom.\n\t\t * @type {boolean}\n\t\t */\n\t\tthis.inningSide = false;\n\n\t\t/**\n\t\t * Object that stores the result of the last pitch thrown - what pitch it was, what the category of contact was, the resulting play, whether an out was made, whether a new at bat is starting, and whether a new half-innning is starting.\n\t\t * @type {{pitch: string, swing: boolean, play: string, out: boolean, newAB: boolean, newInning: boolean, runsScored: number}}\n\t\t */\n\t\tthis.lastPitch = {\n\t\t\tpitch: \"\",\n\t\t\tswing: false,\n\t\t\tplay: \"\",\n\t\t\tout: false,\n\t\t\tnewAB: true,\n\t\t\tnewInning: true,\n\t\t\trunsScored: 0,\n\t\t\tbase1Change: false,\n\t\t\tbase2Change: false,\n\t\t\tbase3Change: false,\n\t\t\tbase1to3: false\n\t\t};\n\n\t\t/**\n\t\t * Boolean that shows if the game is over or not. True if game is over, false otherwise.\n\t\t * @type {boolean}\n\t\t */\n\t\tthis.gameOver = false;\n\t}\n\n\t/*\n\t * ss = Slow Straight\n\t * si = Slow Inside\n\t * sh = Slow High\n\t * sl = Slow Low\n\t * fs = Fastball Straigh\n\t * fi = Fastball Inside\n\t * fh = Fastball High\n\t * fl = Fastball Low\n\t * co = Curveball Outside\n\t * ci = Curveball Inside\n\t * ch = Curveball High\n\t * cl = Curveball Low\n\t */\n\n\t/**\n\t * Pitcher throws a slowball straight pitch and the outcome is determined by the batter's action\n\t * @param {string} batter The batter's action\n\t */\n\tssPitch(batter) {\n\t\tthis.lastPitch.pitch = \"ss\";\n\t\tswitch (batter) {\n\t\t\tcase \"ss\":\n\t\t\t\tif (this.inningSide === false) {\n\t\t\t\t\tif (this.visitTeam.lineup[this.visitAB].getBatStrengths().includes(\"ss\")) {\n\t\t\t\t\t\tthis.hit6();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tif (this.homeTeam.lineup[this.homeAB].getBatStrengths().includes(\"ss\")) {\n\t\t\t\t\t\tthis.hit6();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis.hit5();\n\t\t\t\tbreak;\n\n\t\t\tcase \"si\":\n\t\t\t\tthis.hit4();\n\t\t\t\tbreak;\n\n\t\t\tcase \"fs\":\n\t\t\tcase \"co\":\n\t\t\t\tthis.hit3();\n\t\t\t\tbreak;\n\n\t\t\tcase \"sl\":\n\t\t\tcase \"ci\":\n\t\t\t\tthis.hit2();\n\t\t\t\tbreak;\n\n\t\t\tcase \"fi\":\n\t\t\t\tthis.hit1();\n\t\t\t\tbreak;\n\n\t\t\tcase \"sh\":\n\t\t\tcase \"fh\":\n\t\t\tcase \"fl\":\n\t\t\t\tthis.foul();\n\t\t\t\tbreak;\n\n\t\t\tcase \"ch\":\n\t\t\tcase \"cl\":\n\t\t\t\tthis.swingingStrike();\n\t\t\t\tbreak;\n\n\t\t\tcase \"take\":\n\t\t\t\tthis.calledStrike();\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\t/**\n\t * Pitcher throws a slowball high pitch and the outcome is determined by the batter's action\n\t * @param {string} batter The batter's action\n\t */\n\tshPitch(batter) {\n\t\tthis.lastPitch.pitch = \"sh\";\n\n\t\tswitch (batter) {\n\t\t\tcase \"sh\":\n\t\t\t\tif (this.inningSide === false) {\n\t\t\t\t\tif (this.visitTeam.lineup[this.visitAB].getBatStrengths().includes(\"sh\")) {\n\t\t\t\t\t\tthis.hit6();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tif (this.homeTeam.lineup[this.homeAB].getBatStrengths().includes(\"sh\")) {\n\t\t\t\t\t\tthis.hit6();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis.hit3();\n\t\t\t\tbreak;\n\n\t\t\tcase \"fh\":\n\t\t\t\tthis.hit2();\n\t\t\t\tbreak;\n\n\t\t\tcase \"si\":\n\t\t\tcase \"fs\":\n\t\t\tcase \"ch\":\n\t\t\t\tthis.hit1();\n\t\t\t\tbreak;\n\n\t\t\tcase \"ss\":\n\t\t\tcase \"fi\":\n\t\t\tcase \"ci\":\n\t\t\t\tthis.foul();\n\t\t\t\tbreak;\n\n\t\t\tcase \"sl\":\n\t\t\tcase \"fl\":\n\t\t\tcase \"co\":\n\t\t\tcase \"cl\":\n\t\t\t\tthis.swingingStrike();\n\t\t\t\tbreak;\n\n\t\t\tcase \"take\":\n\t\t\t\tthis.ball();\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\t/**\n\t * Pitcher throws a slowball low pitch and the outcome is determined by the batter's action\n\t * @param {string} batter The batter's action\n\t */\n\tslPitch(batter) {\n\t\tthis.lastPitch.pitch = \"sl\";\n\t\tswitch (batter) {\n\t\t\tcase \"sl\":\n\t\t\t\tif (this.inningSide === false) {\n\t\t\t\t\tif (this.visitTeam.lineup[this.visitAB].getBatStrengths().includes(\"sl\")) {\n\t\t\t\t\t\tthis.hit6();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tif (this.homeTeam.lineup[this.homeAB].getBatStrengths().includes(\"sl\")) {\n\t\t\t\t\t\tthis.hit6();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis.hit3();\n\t\t\t\tbreak;\n\n\t\t\tcase \"ss\":\n\t\t\tcase \"fl\":\n\t\t\t\tthis.hit2();\n\t\t\t\tbreak;\n\n\t\t\tcase \"co\":\n\t\t\tcase \"cl\":\n\t\t\t\tthis.hit1();\n\t\t\t\tbreak;\n\n\t\t\tcase \"si\":\n\t\t\tcase \"fs\":\n\t\t\tcase \"fi\":\n\t\t\t\tthis.foul();\n\t\t\t\tbreak;\n\n\t\t\tcase \"sh\":\n\t\t\tcase \"fh\":\n\t\t\tcase \"ch\":\n\t\t\tcase \"ci\":\n\t\t\t\tthis.swingingStrike();\n\t\t\t\tbreak;\n\n\t\t\tcase \"take\":\n\t\t\t\tthis.ball();\n\t\t\t\tbreak;\n\t\t}\n\n\t}\n\n\t/**\n\t * Pitcher throws a slowball inside pitch and the outcome is determined by the batter's action\n\t * @param {string} batter The batter's action\n\t */\n\tsiPitch(batter) {\n\t\tthis.lastPitch.pitch = \"si\";\n\t\tswitch (batter) {\n\t\t\tcase \"si\":\n\t\t\t\tif (this.inningSide === false) {\n\t\t\t\t\tif (this.visitTeam.lineup[this.visitAB].getBatStrengths().includes(\"si\")) {\n\t\t\t\t\t\tthis.hit6();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tif (this.homeTeam.lineup[this.homeAB].getBatStrengths().includes(\"si\")) {\n\t\t\t\t\t\tthis.hit6();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis.hit5();\n\t\t\t\tbreak;\n\n\t\t\tcase \"ss\":\n\t\t\t\tthis.hit4();\n\t\t\t\tbreak;\n\n\t\t\tcase \"fi\":\n\t\t\tcase \"ci\":\n\t\t\t\tthis.hit3();\n\t\t\t\tbreak;\n\n\t\t\tcase \"sh\":\n\t\t\tcase \"sl\":\n\t\t\tcase \"fs\":\n\t\t\t\tthis.hit2();\n\t\t\t\tbreak;\n\n\t\t\tcase \"fh\":\n\t\t\tcase \"fl\":\n\t\t\tcase \"co\":\n\t\t\tcase \"ch\":\n\t\t\t\tthis.foul();\n\t\t\t\tbreak;\n\n\t\t\tcase \"cl\":\n\t\t\t\tthis.swingingStrike();\n\t\t\t\tbreak;\n\n\t\t\tcase \"take\":\n\t\t\t\tthis.calledStrike();\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\t/**\n\t * Pitcher throws a fastball straight pitch and the outcome is determined by the batter's action\n\t * @param {string} batter The batter's action\n\t */\n\tfsPitch(batter) {\n\t\tthis.lastPitch.pitch = \"fs\";\n\t\tswitch (batter) {\n\t\t\tcase \"fs\":\n\t\t\t\tif (this.inningSide === false) {\n\t\t\t\t\tif (this.visitTeam.lineup[this.visitAB].getBatStrengths().includes(\"fs\")) {\n\t\t\t\t\t\tthis.hit6();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tif (this.homeTeam.lineup[this.homeAB].getBatStrengths().includes(\"fs\")) {\n\t\t\t\t\t\tthis.hit6();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis.hit5();\n\t\t\t\tbreak;\n\n\t\t\tcase \"fi\":\n\t\t\t\tthis.hit4();\n\t\t\t\tbreak;\n\n\t\t\tcase \"ss\":\n\t\t\tcase \"fh\":\n\t\t\tcase \"ci\":\n\t\t\t\tthis.hit3();\n\t\t\t\tbreak;\n\n\t\t\tcase \"co\":\n\t\t\t\tthis.hit2();\n\t\t\t\tbreak;\n\n\t\t\tcase \"si\":\n\t\t\t\tthis.hit1();\n\t\t\t\tbreak;\n\n\t\t\tcase \"sh\":\n\t\t\tcase \"sl\":\n\t\t\tcase \"fl\":\n\t\t\t\tthis.foul();\n\t\t\t\tbreak;\n\n\t\t\tcase \"ch\":\n\t\t\tcase \"cl\":\n\t\t\t\tthis.swingingStrike();\n\t\t\t\tbreak;\n\n\t\t\tcase \"take\":\n\t\t\t\tthis.calledStrike();\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\t/**\n\t * Pitcher throws a fastball high pitch and the outcome is determined by the batter's action\n\t * @param {string} batter The batter's action\n\t */\n\tfhPitch(batter) {\n\t\tthis.lastPitch.pitch = \"fh\";\n\t\tswitch (batter) {\n\t\t\tcase \"fh\":\n\t\t\t\tif (this.inningSide === false) {\n\t\t\t\t\tif (this.visitTeam.lineup[this.visitAB].getBatStrengths().includes(\"fh\")) {\n\t\t\t\t\t\tthis.hit6();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tif (this.homeTeam.lineup[this.homeAB].getBatStrengths().includes(\"fh\")) {\n\t\t\t\t\t\tthis.hit6();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis.hit3();\n\t\t\t\tbreak;\n\n\t\t\tcase \"fi\":\n\t\t\t\tthis.hit2();\n\t\t\t\tbreak;\n\n\t\t\tcase \"sh\":\n\t\t\tcase \"ch\":\n\t\t\tcase \"ci\":\n\t\t\t\tthis.hit1();\n\t\t\t\tbreak;\n\n\t\t\tcase \"si\":\n\t\t\tcase \"fs\":\n\t\t\tcase \"co\":\n\t\t\t\tthis.foul();\n\t\t\t\tbreak;\n\n\t\t\tcase \"ss\":\n\t\t\tcase \"sl\":\n\t\t\tcase \"fl\":\n\t\t\tcase \"cl\":\n\t\t\t\tthis.swingingStrike();\n\t\t\t\tbreak;\n\n\t\t\tcase \"take\":\n\t\t\t\tthis.ball();\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\t/**\n\t * Pitcher throws a fastball low pitch and the outcome is determined by the batter's action\n\t * @param {string} batter The batter's action\n\t */\n\tflPitch(batter) {\n\t\tthis.lastPitch.pitch = \"fl\";\n\t\tswitch (batter) {\n\t\t\tcase \"fl\":\n\t\t\t\tif (this.inningSide === false) {\n\t\t\t\t\tif (this.visitTeam.lineup[this.visitAB].getBatStrengths().includes(\"fl\")) {\n\t\t\t\t\t\tthis.hit6();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tif (this.homeTeam.lineup[this.homeAB].getBatStrengths().includes(\"fl\")) {\n\t\t\t\t\t\tthis.hit6();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis.hit3();\n\t\t\t\tbreak;\n\n\t\t\tcase \"fs\":\n\t\t\t\tthis.hit2();\n\t\t\t\tbreak;\n\n\t\t\tcase \"sl\":\n\t\t\tcase \"co\":\n\t\t\tcase \"cl\":\n\t\t\t\tthis.hit1();\n\t\t\t\tbreak;\n\n\t\t\tcase \"ss\":\n\t\t\tcase \"si\":\n\t\t\tcase \"fi\":\n\t\t\t\tthis.foul();\n\t\t\t\tbreak;\n\n\t\t\tcase \"sh\":\n\t\t\tcase \"fh\":\n\t\t\tcase \"ch\":\n\t\t\tcase \"ci\":\n\t\t\t\tthis.swingingStrike();\n\t\t\t\tbreak;\n\n\t\t\tcase \"take\":\n\t\t\t\tthis.ball();\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\t/**\n\t * Pitcher throws a fastball inside pitch and the outcome is determined by the batter's action\n\t * @param {string} batter The batter's action\n\t */\n\tfiPitch(batter) {\n\t\tthis.lastPitch.pitch = \"fi\";\n\t\tswitch (batter) {\n\t\t\tcase \"fi\":\n\t\t\t\tif (this.inningSide === false) {\n\t\t\t\t\tif (this.visitTeam.lineup[this.visitAB].getBatStrengths().includes(\"fi\")) {\n\t\t\t\t\t\tthis.hit6();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tif (this.homeTeam.lineup[this.homeAB].getBatStrengths().includes(\"fi\")) {\n\t\t\t\t\t\tthis.hit6();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis.hit5();\n\t\t\t\tbreak;\n\n\t\t\tcase \"fs\":\n\t\t\t\tthis.hit4();\n\t\t\t\tbreak;\n\n\t\t\tcase \"si\":\n\t\t\tcase \"ci\":\n\t\t\t\tthis.hit3();\n\t\t\t\tbreak;\n\n\t\t\tcase \"fl\":\n\t\t\t\tthis.hit2();\n\t\t\t\tbreak;\n\n\t\t\tcase \"ss\":\n\t\t\tcase \"ch\":\n\t\t\t\tthis.hit1();\n\t\t\t\tbreak;\n\n\t\t\tcase \"sh\":\n\t\t\tcase \"fh\":\n\t\t\tcase \"co\":\n\t\t\tcase \"cl\":\n\t\t\t\tthis.foul();\n\t\t\t\tbreak;\n\n\t\t\tcase \"sl\":\n\t\t\t\tthis.swingingStrike();\n\t\t\t\tbreak;\n\n\t\t\tcase \"take\":\n\t\t\t\tthis.calledStrike();\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\t/**\n\t * Pitcher throws a curveball outside pitch and the outcome is determined by the batter's action\n\t * @param {string} batter The batter's action\n\t */\n\tcoPitch(batter) {\n\t\tthis.lastPitch.pitch = \"co\";\n\t\tswitch (batter) {\n\t\t\tcase \"co\":\n\t\t\t\tif (this.inningSide === false) {\n\t\t\t\t\tif (this.visitTeam.lineup[this.visitAB].getBatStrengths().includes(\"co\")) {\n\t\t\t\t\t\tthis.hit6();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tif (this.homeTeam.lineup[this.homeAB].getBatStrengths().includes(\"co\")) {\n\t\t\t\t\t\tthis.hit6();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis.hit5();\n\t\t\t\tbreak;\n\n\t\t\tcase \"fs\":\n\t\t\t\tthis.hit4();\n\t\t\t\tbreak;\n\n\t\t\tcase \"ss\":\n\t\t\t\tthis.hit3();\n\t\t\t\tbreak;\n\n\t\t\tcase \"ch\":\n\t\t\t\tthis.hit2();\n\t\t\t\tbreak;\n\n\t\t\tcase \"fl\":\n\t\t\tcase \"fi\":\n\t\t\tcase \"cl\":\n\t\t\t\tthis.hit1();\n\t\t\t\tbreak;\n\n\t\t\tcase \"sh\":\n\t\t\tcase \"sl\":\n\t\t\t\tthis.foul();\n\t\t\t\tbreak;\n\n\t\t\tcase \"si\":\n\t\t\tcase \"fh\":\n\t\t\tcase \"ci\":\n\t\t\t\tthis.swingingStrike();\n\t\t\t\tbreak;\n\n\t\t\tcase \"take\":\n\t\t\t\tthis.calledStrike();\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\t/**\n\t * Pitcher throws a curveball high pitch and the outcome is determined by the batter's action\n\t * @param {string} batter The batter's action\n\t */\n\tchPitch(batter) {\n\t\tthis.lastPitch.pitch = \"ch\";\n\t\tswitch (batter) {\n\t\t\tcase \"ch\":\n\t\t\t\tif (this.inningSide === false) {\n\t\t\t\t\tif (this.visitTeam.lineup[this.visitAB].getBatStrengths().includes(\"ch\")) {\n\t\t\t\t\t\tthis.hit6();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tif (this.homeTeam.lineup[this.homeAB].getBatStrengths().includes(\"ch\")) {\n\t\t\t\t\t\tthis.hit6();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis.hit3();\n\t\t\t\tbreak;\n\n\t\t\tcase \"ss\":\n\t\t\tcase \"sh\":\n\t\t\tcase \"si\":\n\t\t\tcase \"fh\":\n\t\t\tcase \"co\":\n\t\t\t\tthis.hit1();\n\t\t\t\tbreak;\n\n\t\t\tcase \"fs\":\n\t\t\tcase \"ci\":\n\t\t\t\tthis.foul();\n\t\t\t\tbreak;\n\n\t\t\tcase \"sl\":\n\t\t\tcase \"fl\":\n\t\t\tcase \"fi\":\n\t\t\tcase \"cl\":\n\t\t\t\tthis.swingingStrike();\n\t\t\t\tbreak;\n\n\t\t\tcase \"take\":\n\t\t\t\tthis.ball();\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\t/**\n\t * Pitcher throws a curveball low pitch and the outcome is determined by the batter's action\n\t * @param {string} batter The batter's action\n\t */\n\tclPitch(batter) {\n\t\tthis.lastPitch.pitch = \"cl\";\n\t\tswitch (batter) {\n\t\t\tcase \"cl\":\n\t\t\t\tif (this.inningSide === false) {\n\t\t\t\t\tif (this.visitTeam.lineup[this.visitAB].getBatStrengths().includes(\"cl\")) {\n\t\t\t\t\t\tthis.hit6();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tif (this.homeTeam.lineup[this.homeAB].getBatStrengths().includes(\"cl\")) {\n\t\t\t\t\t\tthis.hit6();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis.hit3();\n\t\t\t\tbreak;\n\n\t\t\tcase \"co\":\n\t\t\tcase \"ci\":\n\t\t\t\tthis.hit2();\n\t\t\t\tbreak;\n\n\t\t\tcase \"sl\":\n\t\t\tcase \"fl\":\n\t\t\t\tthis.hit1();\n\t\t\t\tbreak;\n\n\t\t\tcase \"ss\":\n\t\t\tcase \"si\":\n\t\t\tcase \"fi\":\n\t\t\t\tthis.foul();\n\t\t\t\tbreak;\n\n\t\t\tcase \"sh\":\n\t\t\tcase \"fs\":\n\t\t\tcase \"fh\":\n\t\t\tcase \"ch\":\n\t\t\t\tthis.swingingStrike();\n\t\t\t\tbreak;\n\n\t\t\tcase \"take\":\n\t\t\t\tthis.ball();\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\t/**\n\t * Pitcher throws a curveball inside pitch and the outcome is determined by the batter's action\n\t * @param {string} batter The batter's action\n\t */\n\tciPitch(batter) {\n\t\tthis.lastPitch.pitch = \"ci\";\n\t\tswitch (batter) {\n\t\t\tcase \"ci\":\n\t\t\t\tif (this.inningSide === false) {\n\t\t\t\t\tif (this.visitTeam.lineup[this.visitAB].getBatStrengths().includes(\"ci\")) {\n\t\t\t\t\t\tthis.hit6();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tif (this.homeTeam.lineup[this.homeAB].getBatStrengths().includes(\"ci\")) {\n\t\t\t\t\t\tthis.hit6();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis.hit5();\n\t\t\t\tbreak;\n\n\t\t\tcase \"fi\":\n\t\t\t\tthis.hit4();\n\t\t\t\tbreak;\n\n\t\t\tcase \"si\":\n\t\t\tcase \"fs\":\n\t\t\t\tthis.hit3();\n\t\t\t\tbreak;\n\n\t\t\tcase \"ss\":\n\t\t\tcase \"cl\":\n\t\t\t\tthis.hit2();\n\t\t\t\tbreak;\n\n\t\t\tcase \"sh\":\n\t\t\t\tthis.hit1();\n\t\t\t\tbreak;\n\n\t\t\tcase \"sl\":\n\t\t\tcase \"fh\":\n\t\t\tcase \"co\":\n\t\t\tcase \"ch\":\n\t\t\t\tthis.foul();\n\t\t\t\tbreak;\n\n\t\t\tcase \"fl\":\n\t\t\t\tthis.swingingStrike();\n\t\t\t\tbreak;\n\n\t\t\tcase \"take\":\n\t\t\t\tthis.calledStrike();\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\n\t/**\n\t * Hit chart 1: Infield balls\n\t */\n\thit1() {\n\t\tthis.lastPitch.swing = true;\n\t\tlet roll = (Math.floor(Math.random() * 6) + 1) + (Math.floor(Math.random() * 6) + 1);\n\t\tswitch (roll) {\n\t\t\tcase 2:\n\t\t\t\tthis.triplePlay();\n\t\t\t\tbreak;\n\t\t\tcase 3:\n\t\t\tcase 8:\n\t\t\t\tthis.single();\n\t\t\t\tbreak;\n\t\t\tcase 4:\n\t\t\tcase 7:\n\t\t\t\tthis.flyout();\n\t\t\t\tbreak;\n\t\t\tcase 5:\n\t\t\t\tthis.foulout();\n\t\t\t\tbreak;\n\t\t\tcase 6:\n\t\t\tcase 11:\n\t\t\t\tthis.groundoutDoublePlay();\n\t\t\t\tbreak;\n\t\t\tcase 9:\n\t\t\t\tthis.groundout();\n\t\t\t\tbreak;\n\t\t\tcase 10:\n\t\t\t\tthis.fieldersChoice();\n\t\t\t\tbreak;\n\t\t\tcase 12:\n\t\t\t\tthis.error();\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\t/**\n\t * Hit chart 2: Hits that fall over the infield, moderately hard hit grounders in the infield and fly balls that infielders go out for and outfielders come in for\n\t */\n\thit2() {\n\t\tthis.lastPitch.swing = true;\n\t\tlet roll = (Math.floor(Math.random() * 6) + 1) + (Math.floor(Math.random() * 6) + 1);\n\t\tswitch (roll) {\n\t\t\tcase 2:\n\t\t\tcase 6:\n\t\t\t\tthis.groundoutDoublePlay();\n\t\t\t\tbreak;\n\t\t\tcase 3:\n\t\t\tcase 8:\n\t\t\tcase 10:\n\t\t\t\tthis.flyout();\n\t\t\t\tbreak;\n\t\t\tcase 4:\n\t\t\t\tthis.groundoutAdvIfForced();\n\t\t\t\tbreak;\n\t\t\tcase 5:\n\t\t\t\tthis.foulout();\n\t\t\t\tbreak;\n\t\t\tcase 7:\n\t\t\tcase 9:\n\t\t\t\tthis.single();\n\t\t\t\tbreak;\n\t\t\tcase 11:\n\t\t\t\tthis.groundout();\n\t\t\t\tbreak;\n\t\t\tcase 12:\n\t\t\t\tthis.error();\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\t/**\n\t * Hit chart 3: Sharply hit balls through the infield and fly balls and hits to the outfield that go farther than chart 2 balls\n\t */\n\thit3() {\n\t\tthis.lastPitch.swing = true;\n\t\tlet roll = (Math.floor(Math.random() * 6) + 1) + (Math.floor(Math.random() * 6) + 1);\n\t\tswitch (roll) {\n\t\t\tcase 2:\n\t\t\tcase 12:\n\t\t\t\tthis.groundoutDoublePlay();\n\t\t\t\tbreak;\n\t\t\tcase 3:\n\t\t\t\tthis.single();\n\t\t\t\tbreak;\n\t\t\tcase 4:\n\t\t\t\tthis.groundoutAdvIfForced();\n\t\t\t\tbreak;\n\t\t\tcase 5:\n\t\t\tcase 7:\n\t\t\t\tthis.flyoutAdv();\n\t\t\t\tbreak;\n\t\t\tcase 8:\n\t\t\tcase 10:\n\t\t\t\tthis.singleRISP();\n\t\t\t\tbreak;\n\t\t\tcase 9:\n\t\t\t\tthis.fieldersChoice();\n\t\t\t\tbreak;\n\t\t\tcase 11:\n\t\t\t\tthis.errorSecond();\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\t/**\n\t * Hit chart 4: Balls hit down the 1st and 3rd base lines and hard hit balls not going as far as those on chart 5\n\t */\n\thit4() {\n\t\tthis.lastPitch.swing = true;\n\t\tlet roll = (Math.floor(Math.random() * 6) + 1) + (Math.floor(Math.random() * 6) + 1);\n\t\tswitch (roll) {\n\t\t\tcase 2:\n\t\t\t\tthis.homeRun();\n\t\t\t\tbreak;\n\t\t\tcase 3:\n\t\t\t\tthis.flyoutAdv();\n\t\t\t\tbreak;\n\t\t\tcase 4:\n\t\t\t\tthis.groundout();\n\t\t\t\tbreak;\n\t\t\tcase 5:\n\t\t\t\tthis.double();\n\t\t\t\tbreak;\n\t\t\tcase 6:\n\t\t\tcase 8:\n\t\t\t\tthis.singleAdvance();\n\t\t\t\tbreak;\n\t\t\tcase 7:\n\t\t\t\tthis.flyoutNoAdv1st();\n\t\t\t\tbreak;\n\t\t\tcase 9:\n\t\t\t\tthis.singleRISP();\n\t\t\t\tbreak;\n\t\t\tcase 10:\n\t\t\t\tthis.groundoutDoublePlay();\n\t\t\t\tbreak;\n\t\t\tcase 11:\n\t\t\t\tthis.flyout();\n\t\t\t\tbreak;\n\t\t\tcase 12:\n\t\t\t\tthis.lineoutDoublePlay();\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\t/**\n\t * Hit chart 5: Hard hit balls\n\t */\n\thit5() {\n\t\tthis.lastPitch.swing = true;\n\t\tlet roll = (Math.floor(Math.random() * 6) + 1) + (Math.floor(Math.random() * 6) + 1);\n\t\tswitch (roll) {\n\t\t\tcase 2:\n\t\t\t\tthis.error();\n\t\t\t\tbreak;\n\t\t\tcase 3:\n\t\t\tcase 6:\n\t\t\t\tthis.singleAdvance();\n\t\t\t\tbreak;\n\t\t\tcase 4:\n\t\t\t\tthis.double();\n\t\t\t\tbreak;\n\t\t\tcase 5:\n\t\t\t\tthis.flyoutAdv();\n\t\t\t\tbreak;\n\t\t\tcase 7:\n\t\t\t\tthis.flyoutNoAdv1st();\n\t\t\t\tbreak;\n\t\t\tcase 8:\n\t\t\t\tthis.groundout();\n\t\t\t\tbreak;\n\t\t\tcase 9:\n\t\t\t\tthis.homeRun();\n\t\t\t\tbreak;\n\t\t\tcase 10:\n\t\t\t\tthis.doubleClear();\n\t\t\t\tbreak;\n\t\t\tcase 11:\n\t\t\t\tthis.triple();\n\t\t\t\tbreak;\n\t\t\tcase 12:\n\t\t\t\tthis.lineoutDoublePlay();\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\t/**\n\t * Hit chart 6: The most solidly hit balls and when hit for extra bases are the longest hit balls\n\t */\n\thit6() {\n\t\tthis.lastPitch.swing = true;\n\t\tlet roll = (Math.floor(Math.random() * 6) + 1) + (Math.floor(Math.random() * 6) + 1);\n\t\tswitch (roll) {\n\t\t\tcase 2:\n\t\t\t\tthis.foulout();\n\t\t\t\tbreak;\n\t\t\tcase 3:\n\t\t\t\tthis.flyoutAdv();\n\t\t\t\tbreak;\n\t\t\tcase 4:\n\t\t\tcase 6:\n\t\t\t\tthis.homeRun();\n\t\t\t\tbreak;\n\t\t\tcase 5:\n\t\t\t\tthis.flyoutNoAdv1st();\n\t\t\t\tbreak;\n\t\t\tcase 7:\n\t\t\t\tthis.double();\n\t\t\t\tbreak;\n\t\t\tcase 8:\n\t\t\t\tthis.triple();\n\t\t\t\tbreak;\n\t\t\tcase 9:\n\t\t\t\tthis.singleAdvance();\n\t\t\t\tbreak;\n\t\t\tcase 10:\n\t\t\t\tthis.single();\n\t\t\t\tbreak;\n\t\t\tcase 11:\n\t\t\t\tthis.doubleClear();\n\t\t\t\tbreak;\n\t\t\tcase 12:\n\t\t\t\tthis.groundout();\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\t/**\n\t * Home run - clears the bases and adds one run for every runner\n\t */\n\thomeRun() {\n\t    this.lastPitch.base1Change = false;\n\t    this.lastPitch.base2Change = false;\n\t    this.lastPitch.base3Change = false;\n\t    this.lastPitch.base1to3 = false;\n\n\t\tlet numRuns = 0;\n\t\tif (this.third) {\n\t\t\tthis.third = false;\n\t\t\tnumRuns++;\n\t\t}\n\t\tif (this.second) {\n\t\t\tthis.second = false;\n\t\t\tnumRuns++;\n\t\t}\n\t\tif (this.first) {\n\t\t\tthis.first = false;\n\t\t\tnumRuns++;\n\t\t}\n\t\tnumRuns++;\n\n\t\tif (this.inningSide === false) {\n\t\t\tthis.visitTeam.score(numRuns);\n\t\t}\n\t\telse {\n\t\t\tthis.homeTeam.score(numRuns);\n\t\t}\n\n\t\tthis.newAB();\n\t\tthis.lastPitch.play = \"homeRun\";\n\t\tthis.lastPitch.out = false;\n\n\t\tthis.lastPitch.newInning = false;\n\t\tthis.lastPitch.runsScored = numRuns;\n\t}\n\n\t/**\n\t * Triple - clears the bases and batter ends up at third\n\t */\n\ttriple() {\n\t    this.lastPitch.base1Change = false;\n\t    this.lastPitch.base2Change = false;\n\t    this.lastPitch.base3Change = false;\n\t    this.lastPitch.base1to3 = false;\n\t\tlet numRuns = 0;\n\t\tif (this.third) {\n\t\t\tthis.third = false;\n\t\t\tnumRuns++;\n\t\t}\n\t\tif (this.second) {\n\t\t\tthis.second = false;\n\t\t\tnumRuns++;\n\t\t}\n\t\tif (this.first) {\n\t\t\tthis.first = false;\n\t\t\tnumRuns++;\n\t\t}\n\t\tthis.third = true;\n\t\tif (this.inningSide === false) {\n\t\t\tthis.visitTeam.score(numRuns);\n\t\t}\n\t\telse {\n\t\t\tthis.homeTeam.score(numRuns);\n\t\t}\n\t\tthis.newAB();\n\t\tthis.lastPitch.play = \"triple\";\n\t\tthis.lastPitch.out = false;\n\n\t\tthis.lastPitch.newInning = false;\n\t\tthis.lastPitch.runsScored = numRuns;\n\t}\n\n\t/**\n\t * Bases-clearing double - clears the bases (runner at first scores) and batter ends up at second\n\t */\n\tdoubleClear() {\n\t    this.lastPitch.base1Change = false;\n\t    this.lastPitch.base2Change = false;\n\t    this.lastPitch.base3Change = false;\n\t    this.lastPitch.base1to3 = false;\n\t\tlet numRuns = 0;\n\t\tif (this.third) {\n\t\t\tthis.third = false;\n\t\t\tnumRuns++;\n\t\t}\n\t\tif (this.second) {\n\t\t\tthis.second = false;\n\t\t\tnumRuns++;\n\t\t}\n\t\tif (this.first) {\n\t\t\tthis.first = false;\n\t\t\tnumRuns++;\n\t\t}\n\t\tthis.second = true;\n\t\tif (this.inningSide === false) {\n\t\t\tthis.visitTeam.score(numRuns);\n\t\t}\n\t\telse {\n\t\t\tthis.homeTeam.score(numRuns);\n\t\t}\n\t\tthis.newAB();\n\t\tthis.lastPitch.play = \"doubleClear\";\n\t\tthis.lastPitch.out = false;\n\n\t\tthis.lastPitch.newInning = false;\n\t\tthis.lastPitch.runsScored = numRuns;\n\n\t}\n\n\t/**\n\t * Double - runners at third and second score, runner at first goes to third, batter ends up at second\n\t */\n\tdouble() {\n\t    this.lastPitch.base1Change = false;\n\t    this.lastPitch.base2Change = false;\n\t    this.lastPitch.base3Change = false;\n\t    this.lastPitch.base1to3 = false;\n\t\tlet numRuns = 0;\n\t\tif (this.third) {\n\t\t\tthis.third = false;\n\t\t\tnumRuns++;\n\t\t}\n\t\tif (this.second) {\n\t\t\tthis.second = false;\n\t\t\tnumRuns++;\n\t\t}\n\t\tif (this.first) {\n\t\t\tthis.first = false;\n\t\t\tthis.third = true;\n\t\t\tthis.lastPitch.base1to3 = true;\n\t\t}\n\t\tthis.second = true;\n\t\tif (this.inningSide === false) {\n\t\t\tthis.visitTeam.score(numRuns);\n\t\t}\n\t\telse {\n\t\t\tthis.homeTeam.score(numRuns);\n\t\t}\n\t\tthis.newAB();\n\t\tthis.lastPitch.play = \"double\";\n\t\tthis.lastPitch.out = false;\n\n\t\tthis.lastPitch.newInning = false;\n\t\tthis.lastPitch.runsScored = numRuns;\n\t}\n\n\t/**\n\t * Single - all runners advance one base, batter ends up at first\n\t */\n\tsingle() {\n\t    this.lastPitch.base1Change = false;\n\t    this.lastPitch.base2Change = false;\n\t    this.lastPitch.base3Change = false;\n\t    this.lastPitch.base1to3 = false;\n\t\tlet numRuns = 0;\n\t\tif (this.third) {\n\t\t    this.third = false;\n\t\t    this.lastPitch.base3Change = true;\n\t\t\tnumRuns++;\n\t\t}\n\t\tif (this.second) {\n\t\t\tthis.second = false;\n\t\t\tthis.third = true;\n\t\t\tthis.lastPitch.base2Change = true;\n\t\t}\n\t\tif (this.first) {\n\t\t\tthis.first = false;\n\t\t\tthis.second = true;\n\t\t\tthis.lastPitch.base1Change = true;\n\t\t}\n\t\tthis.first = true;\n\t\tif (this.inningSide === false) {\n\t\t\tthis.visitTeam.score(numRuns);\n\t\t}\n\t\telse {\n\t\t\tthis.homeTeam.score(numRuns);\n\t\t}\n\t\tthis.newAB();\n\t\tthis.lastPitch.play = \"single\";\n\t\tthis.lastPitch.out = false;\n\n\t\tthis.lastPitch.newInning = false;\n\t\tthis.lastPitch.runsScored = numRuns;\n\t}\n\n\t/**\n\t * Single that scores runners in scoring postion - runners at third and second score, runner at first goes to second, batter ends up at first\n\t */\n\tsingleRISP() {\n\t    this.lastPitch.base1Change = false;\n\t    this.lastPitch.base2Change = false;\n\t    this.lastPitch.base3Change = false;\n\t    this.lastPitch.base1to3 = false;\n\t\tlet numRuns = 0;\n\t\tif (this.third) {\n\t\t\tthis.third = false;\n\t\t\tnumRuns++;\n\t\t}\n\t\tif (this.second) {\n\t\t\tthis.second = false;\n\t\t\tnumRuns++;\n\t\t}\n\t\tif (this.first) {\n\t\t\tthis.first = false;\n\t\t\tthis.second = true;\n\t\t\tthis.lastPitch.base1Change = true;\n\t\t}\n\t\tthis.first = true;\n\t\tif (this.inningSide === false) {\n\t\t\tthis.visitTeam.score(numRuns);\n\t\t}\n\t\telse {\n\t\t\tthis.homeTeam.score(numRuns);\n\t\t}\n\t\tthis.newAB();\n\t\tthis.lastPitch.play = \"singleRISP\";\n\t\tthis.lastPitch.out = false;\n\n\t\tthis.lastPitch.newInning = false;\n\t\tthis.lastPitch.runsScored = numRuns;\n\t}\n\n\t/**\n\t * Single that allows runner at first to go to third - runners at third and second score, runner at first goes to third, batter ends up at first\n\t */\n\tsingleAdvance() {\n\t    this.lastPitch.base1Change = false;\n\t    this.lastPitch.base2Change = false;\n\t    this.lastPitch.base3Change = false;\n\t    this.lastPitch.base1to3 = false;\n\t\tlet numRuns = 0;\n\t\tif (this.third) {\n\t\t\tthis.third = false;\n\t\t\tnumRuns++;\n\t\t}\n\t\tif (this.second) {\n\t\t\tthis.second = false;\n\t\t\tnumRuns++;\n\t\t}\n\t\tif (this.first) {\n\t\t\tthis.first = false;\n\t\t\tthis.third = true;\n\t\t\tthis.lastPitch.base1to3 = true;\n\t\t}\n\t\tthis.first = true;\n\t\tif (this.inningSide === false) {\n\t\t\tthis.visitTeam.score(numRuns);\n\t\t}\n\t\telse {\n\t\t\tthis.homeTeam.score(numRuns);\n\t\t}\n\t\tthis.newAB();\n\t\tthis.lastPitch.play = \"singleAdvance\";\n\t\tthis.lastPitch.out = false;\n\n\t\tthis.lastPitch.newInning = false;\n\t\tthis.lastPitch.runsScored = numRuns;\n\t}\n\n\t/**\n\t * Error - All runners move up a base, batter is safe at first in play that should've resulted in an out\n\t */\n\terror() {\n\t    this.lastPitch.base1Change = false;\n\t    this.lastPitch.base2Change = false;\n\t    this.lastPitch.base3Change = false;\n\t    this.lastPitch.base1to3 = false;\n\t\tlet numRuns = 0;\n\t\tif (this.third) {\n\t\t    this.third = false;\n\t\t    this.lastPitch.base3Change = true;\n\t\t\tnumRuns++;\n\t\t}\n\t\tif (this.second) {\n\t\t\tthis.second = false;\n\t\t\tthis.third = true;\n\t\t\tthis.lastPitch.base2Change = true;\n\t\t}\n\t\tif (this.first) {\n\t\t\tthis.first = false;\n\t\t\tthis.second = true;\n\t\t\tthis.lastPitch.base1Change = true;\n\t\t}\n\t\tthis.first = true;\n\t\tif (this.inningSide === false) {\n\t\t\tthis.visitTeam.score(numRuns);\n\t\t}\n\t\telse {\n\t\t\tthis.homeTeam.score(numRuns);\n\t\t}\n\t\tthis.newAB();\n\t\tthis.lastPitch.play = \"error\";\n\t\tthis.lastPitch.out = false;\n\n\t\tthis.lastPitch.newInning = false;\n\t\tthis.lastPitch.runsScored = numRuns;\n\t}\n\n\t/**\n\t * Batter pops out in foul territory - All runners hold\n\t */\n\tfoulout() {\n\t\tthis.newAB();\n\t\tthis.out(1);\n\n\t\tthis.lastPitch.play = \"foulout\";\n\t\tthis.lastPitch.runsScored = 0;\n\t}\n\n\t/**\n\t * Batter pops out - All runners hold\n\t */\n\tflyout() {\n\t\tthis.newAB();\n\t\tthis.out(1);\n\n\t\tthis.lastPitch.play = \"flyout\";\n\t\tthis.lastPitch.runsScored = 0;\n\t}\n\n\t/**\n\t * Batter pops out - All runners advance one base\n\t */\n\tflyoutAdv() {\n\t    this.lastPitch.base1Change = false;\n\t    this.lastPitch.base2Change = false;\n\t    this.lastPitch.base3Change = false;\n\t    this.lastPitch.base1to3 = false;\n\t\tlet numRuns = 0;\n\t\tthis.newAB();\n\t\tif (this.third) {\n\t\t    this.third = false;\n\t\t    this.lastPitch.base3Change = true;\n\t\t\tif (this.outs < 2)\n\t\t\t\tnumRuns++;\n\t\t}\n\t\tif (this.second) {\n\t\t\tthis.second = false;\n\t\t\tthis.third = true;\n\t\t\tthis.lastPitch.base2Change = true;\n\t\t}\n\t\tif (this.first) {\n\t\t\tthis.first = false;\n\t\t\tthis.second = true;\n\t\t\tthis.lastPitch.base1Change = true;\n\t\t}\n\t\tthis.out(1);\n\t\tif (this.inningSide === false) {\n\t\t\tthis.visitTeam.score(numRuns);\n\t\t}\n\t\telse {\n\t\t\tthis.homeTeam.score(numRuns);\n\t\t}\n\n\t\tthis.lastPitch.play = \"flyoutAdv\";\n\t\tthis.lastPitch.runsScored = numRuns;\n\t}\n\n\t/**\n\t * Batter pops out - All runners (except runner at first) advance one base\n\t */\n\tflyoutNoAdv1st() {\n\t    this.lastPitch.base1Change = false;\n\t    this.lastPitch.base2Change = false;\n\t    this.lastPitch.base3Change = false;\n\t    this.lastPitch.base1to3 = false;\n\t\tlet numRuns = 0;\n\t\tthis.newAB();\n\t\tif (this.third) {\n\t\t    this.third = false;\n\t\t    this.lastPitch.base3Change = true;\n\t\t\tif (this.outs < 2)\n\t\t\t\tnumRuns++;\n\t\t}\n\t\tif (this.second) {\n\t\t\tthis.second = false;\n\t\t\tthis.third = true;\n\t\t\tthis.lastPitch.base2Change = true;\n\t\t}\n\t\tthis.out(1);\n\t\tif (this.inningSide === false) {\n\t\t\tthis.visitTeam.score(numRuns);\n\t\t}\n\t\telse {\n\t\t\tthis.homeTeam.score(numRuns);\n\t\t}\n\n\t\tthis.lastPitch.play = \"flyoutNoAdv1st\";\n\t\tthis.lastPitch.runsScored = numRuns;\n\t}\n\n\t/**\n\t * Batter grounds out - All runners advance one base\n\t */\n\tgroundout() {\n\t    this.lastPitch.base1Change = false;\n\t    this.lastPitch.base2Change = false;\n\t    this.lastPitch.base3Change = false;\n\t    this.lastPitch.base1to3 = false;\n\t\tlet numRuns = 0;\n\t\tthis.newAB();\n\t\tif (this.third) {\n\t\t    this.third = false;\n\t\t    this.lastPitch.base3Change = true;\n\t\t\tif (this.outs < 2)\n\t\t\t\tnumRuns++;\n\t\t}\n\t\tif (this.second) {\n\t\t\tthis.second = false;\n\t\t\tthis.third = true;\n\t\t\tthis.lastPitch.base2Change = true;\n\t\t}\n\t\tif (this.first) {\n\t\t\tthis.first = false;\n\t\t\tthis.second = true;\n\t\t\tthis.lastPitch.base1Change = true;\n\t\t}\n\t\tthis.out(1);\n\t\tif (this.inningSide === false) {\n\t\t\tthis.visitTeam.score(numRuns);\n\t\t}\n\t\telse {\n\t\t\tthis.homeTeam.score(numRuns);\n\t\t}\n\n\t\tthis.lastPitch.play = \"groundout\";\n\t\tthis.lastPitch.runsScored = numRuns;\n\t}\n\n\t/**\n\t * Batter grounds out - Runners hold unless they are forced to advance\n\t */\n\tgroundoutAdvIfForced() {\n\t    this.lastPitch.base1Change = false;\n\t    this.lastPitch.base2Change = false;\n\t    this.lastPitch.base3Change = false;\n\t    this.lastPitch.base1to3 = false;\n\t\tlet numRuns = 0;\n\t\tthis.newAB();\n\t\tif (this.third && this.second && this.first) {\n\t\t    this.third = false;\n\t\t    this.lastPitch.base3Change = true;\n\t\t\tif (this.outs < 2) {\n\t\t\t\tnumRuns++;\n\t\t\t}\n\t\t}\n\t\tif (this.second && this.first) {\n\t\t\tthis.second = false;\n\t\t\tthis.third = true;\n\t\t\tthis.lastPitch.base2Change = true;\n\t\t}\n\t\tif (this.first) {\n\t\t\tthis.first = false;\n\t\t\tthis.second = true;\n\t\t\tthis.lastPitch.base1Change = true;\n\t\t}\n\t\tthis.out(1);\n\t\tif (this.inningSide === false) {\n\t\t\tthis.visitTeam.score(numRuns);\n\t\t}\n\t\telse {\n\t\t\tthis.homeTeam.score(numRuns);\n\t\t}\n\n\t\tthis.lastPitch.play = \"groundoutAdvIfForced\";\n\t\tthis.lastPitch.runsScored = numRuns;\n\t}\n\n\t/**\n\t * Double play - Runner at first out and batter out\n\t */\n\tgroundoutDoublePlay() {\n\t    this.lastPitch.base1Change = false;\n\t    this.lastPitch.base2Change = false;\n\t    this.lastPitch.base3Change = false;\n\t    this.lastPitch.base1to3 = false;\n\t\tlet numRuns = 0;\n\t\tthis.newAB();\n\t\tif (this.third) {\n\t\t    this.third = false;\n\t\t    this.lastPitch.base3Change = true;\n\t\t\tif (this.outs < 1 && !this.first) {\n\t\t\t\tnumRuns++;\n\t\t\t}\n\t\t\telse if (this.outs < 2) {\n\t\t\t\tnumRuns++;\n\t\t\t}\n\t\t}\n\t\tif (this.second) {\n\t\t\tthis.second = false;\n\t\t\tthis.third = true;\n\t\t\tthis.lastPitch.base2Change = true;\n\t\t}\n\t\tif (this.first) {\n\t\t\tthis.first = false;\n\t\t\tthis.out(2);\n\t\t}\n\t\telse {\n\t\t\tthis.out(1);\n\t\t}\n\t\tif (this.inningSide === false) {\n\t\t\tthis.visitTeam.score(numRuns);\n\t\t}\n\t\telse {\n\t\t\tthis.homeTeam.score(numRuns);\n\t\t}\n\n\t\tthis.lastPitch.play = \"groundoutDoublePlay\";\n\t\tthis.lastPitch.runsScored = numRuns;\n\t}\n\t/**\n\t * Double play - Lead runner and batter out\n\t */\n\tlineoutDoublePlay() {\n\t\tthis.newAB();\n\t\tif (this.third) {\n\t\t\tthis.third = false;\n\t\t\tthis.out(2);\n\t\t}\n\t\telse if (this.second) {\n\t\t\tthis.second = false;\n\t\t\tthis.out(2);\n\t\t}\n\t\telse if (this.first) {\n\t\t\tthis.first = false;\n\t\t\tthis.out(2);\n\t\t}\n\t\telse {\n\t\t\tthis.out(1);\n\t\t}\n\n\t\tthis.lastPitch.play = \"lineoutDoublePlay\";\n\t\tthis.lastPitch.runsScored = 0;\n\t}\n\n\t/**\n\t * Triple play - Runners at first and second and batter out\n\t */\n\ttriplePlay() {\n\t\tthis.newAB();\n\t\tif (this.second && this.first) {\n\t\t\tthis.second = false;\n\t\t\tthis.first = false;\n\t\t\tthis.out(3);\n\t\t}\n\t\telse if (this.second) {\n\t\t\tthis.second = false;\n\t\t\tthis.out(2);\n\t\t}\n\t\telse if (this.first) {\n\t\t\tthis.first = false;\n\t\t\tthis.out(2);\n\t\t}\n\t\telse {\n\t\t\tthis.out(1);\n\t\t}\n\t\tthis.lastPitch.play = \"triplePlay\";\n\t\tthis.lastPitch.runsScored = 0;\n\t}\n\n\t/**\n\t * Fielder's choice - Runner advances only if forced and lead runner is out, batter out and runners hold otherwise\n\t */\n\tfieldersChoice() {\n\t\tthis.newAB();\n\t\tthis.out(1);\n\t\tthis.lastPitch.play = \"fieldersChoice\";\n\t\tthis.lastPitch.runsScored = 0;\n\t}\n\n\t/**\n\t * Error - Runners at first and second advance 2 bases and batter ends up at second\n\t */\n\terrorSecond() {\n\t    this.lastPitch.base1Change = false;\n\t    this.lastPitch.base2Change = false;\n\t    this.lastPitch.base3Change = false;\n\t    this.lastPitch.base1to3 = false;\n\t\tlet numRuns = 0;\n\t\tif (this.third) {\n\t\t    this.third = false;\n\t\t    this.lastPitch.base3Change = true;\n\t\t\tnumRuns++;\n\t\t}\n\t\tif (this.second) {\n\t\t\tthis.second = false;\n\t\t\tnumRuns++;\n\t\t}\n\t\tif (this.first) {\n\t\t\tthis.first = false;\n\t\t\tthis.third = true;\n\t\t\tthis.lastPitch.base1to3 = true;\n\t\t}\n\t\tthis.second = true;\n\t\tif (this.inningSide === false) {\n\t\t\tthis.visitTeam.score(numRuns);\n\t\t}\n\t\telse {\n\t\t\tthis.homeTeam.score(numRuns);\n\t\t}\n\t\tthis.newAB();\n\t\tthis.lastPitch.play = \"errorSecond\";\n\t\tthis.lastPitch.out = false;\n\t\tthis.lastPitch.runsScored = numRuns;\n\t}\n\n\t/**\n\t * Foul ball - only counts as a strike if there are less than 2 strikes\n\t */\n\tfoul() {\n\t\tif (this.strikes < 2) {\n\t\t    this.strikes++;\n\t\t    this.lastPitch.play = \"foul\";\n\t\t    this.lastPitch.out = false;\n\t\t    this.lastPitch.newAB = false;\n\t\t    this.lastPitch.newInning = false;\n\t\t\tthis.lastPitch.runsScored = 0;\n\t\t}\n\t}\n\n\t/**\n\t * Swinging Strike - Strike that is swung at, 3 strikes and you're out\n\t */\n\tswingingStrike() {\n\t\tthis.strikes++;\n\t\tif (this.strikes === 3) {\n\t\t\tthis.strikes = 0;\n\t\t\tthis.newAB();\n\t\t\tthis.out(1);\n\t\t\tthis.lastPitch.play = \"strikeoutSwinging\";\n\t\t}\n\t\telse {\n\t\t\tthis.lastPitch.play = \"swingingStrike\";\n\t\t\tthis.lastPitch.out = false;\n\t\t\tthis.lastPitch.newAB = false;\n\t\t\tthis.lastPitch.newInning = false;\n\t\t}\n\t\tthis.lastPitch.runsScored = 0;\n\t}\n\n\t/**\n\t * Called Strike - Strike that's taken, 3 strikes and you're out\n\t */\n\tcalledStrike() {\n\t\tthis.strikes++;\n\t\tif (this.strikes === 3) {\n\t\t\tthis.strikes = 0;\n\t\t\tthis.newAB();\n\t\t\tthis.out(1);\n\t\t\tthis.lastPitch.play = \"strikeoutLooking\";\n\t\t}\n\t\telse {\n\t\t\tthis.lastPitch.play = \"calledStrike\";\n\t\t\tthis.lastPitch.out = false;\n\t\t\tthis.lastPitch.newAB = false;\n\t\t\tthis.lastPitch.newInning = false;\n\t\t}\n\t\tthis.lastPitch.runsScored = 0;\n\t}\n\n\t/**\n\t * Ball - 4 balls and it's a free pass on base\n\t */\n\tball() {\n\t\tlet numRuns = 0;\n\t\tthis.balls++;\n\t\tif (this.balls === 4) {\n\t\t\tthis.balls = 0;\n\t\t\tif (this.third && this.second && this.first) {\n\t\t\t\tthis.third = false;\n\t\t\t\tnumRuns++;\n\t\t\t}\n\t\t\tif (this.second && this.first) {\n\t\t\t\tthis.second = false;\n\t\t\t\tthis.third = true;\n\t\t\t}\n\t\t\tif (this.first) {\n\t\t\t\tthis.first = false;\n\t\t\t\tthis.second = true;\n\t\t\t}\n\t\t\tthis.first = true;\n\t\t\tif (this.inningSide === false) {\n\t\t\t\tthis.visitTeam.score(numRuns);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.homeTeam.score(numRuns);\n\t\t\t}\n\t\t\tthis.newAB();\n\t\t\tthis.lastPitch.play = \"walk\";\n\t\t}\n\t\telse {\n\t\t\tthis.lastPitch.play = \"ball\";\n\t\t\tthis.lastPitch.newAB = false;\n\t\t}\n\t\tthis.lastPitch.out = false;\n\t\tthis.lastPitch.newInning = false;\n\t\tthis.lastPitch.runsScored = numRuns;\n\t}\n\n\t/**\n\t * Out - 3 Outs and that's the end of the inning\n\t */\n\tout(num) {\n\t\tif (num === 1) {\n\t\t\tthis.outs++;\n\t\t}\n\t\telse if (num === 2) {\n\t\t\tif (this.outs < 2) {\n\t\t\t\tthis.outs += 2;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.outs++;\n\t\t\t}\n\t\t}\n\t\telse if (num === 3) {\n\t\t\tthis.outs = 3;\n\t\t}\n\n\t\tif (this.outs === 3) {\n\t\t\tthis.newInning();\n\t\t}\n\t\telse {\n\t\t\tthis.lastPitch.newInning = false;\n\t\t}\n\t\tthis.lastPitch.out = true;\n\t}\n\n\t/**\n\t * Resets the game for a new at bat\n\t */\n\tnewAB() {\n\t\tthis.balls = 0;\n\t\tthis.strikes = 0;\n\t\tif (this.inningSide === false) {\n\t\t\tif (this.visitAB === 8) {\n\t\t\t\tthis.visitAB = 0;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.visitAB++;\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tif (this.inning >= 9 && this.homeTeam.runs > this.visitTeam.runs) {\n\t\t\t\tthis.gameOver = true;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (this.homeAB === 8) {\n\t\t\t\t\tthis.homeAB = 0;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis.homeAB++;\n\t\t\t\t}\n\t\t\t}\n\n\t\t}\n\n\t\tthis.lastPitch.newAB = true;\n\t}\n\n\t/**\n\t * Resets the bases and outs for a new half-inning\n\t */\n\tnewInning() {\n\t\tthis.first = false;\n\t\tthis.second = false;\n\t\tthis.third = false;\n\t\tthis.outs = 0;\n\t\tif (this.inningSide === true && this.inning >= 9 && this.visitTeam.runs > this.homeTeam.runs) {\n\t\t\tthis.gameOver = true;\n\t\t}\n\t\telse if (this.inningSide === false && this.inning === 9 && this.homeTeam.runs > this.visitTeam.runs) {\n\t\t\tthis.gameOver = true;\n\t\t}\n\t\telse {\n\t\t\tif (this.inningSide) {\n\t\t\t\tthis.inning++;\n\t\t\t}\n\t\t\tthis.inningSide = !this.inningSide;\n\n\t\t}\n\t\tthis.lastPitch.newInning = true;\n\n\t}\n\n\tteamPointer(team) {\n\t\tif (team === \"home\") {\n\t\t\treturn this.homeTeam;\n\t\t}\n\t\telse {\n\t\t\treturn this.visitTeam;\n\t\t}\n\t}\n\n\n}\n",
    "static": true,
    "longname": "/home/jacob/Programming/eecs448/big-league-baseball/src/Game.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 115,
    "kind": "class",
    "name": "Game",
    "memberof": "src/Game.js",
    "static": true,
    "longname": "src/Game.js~Game",
    "access": "public",
    "export": true,
    "importPath": "big-league-baseball/src/Game.js",
    "importStyle": "{Game}",
    "description": "Game class - makes decisions and stores the game status based on player/user actions.",
    "lineNumber": 7,
    "interface": false
  },
  {
    "__docId__": 116,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/Game.js~Game",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Game.js~Game#constructor",
    "access": "public",
    "description": "Constructor - creates and instantiates all necessary variables",
    "lineNumber": 12,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "playerTeam",
        "description": "The team that the user will play as"
      }
    ]
  },
  {
    "__docId__": 117,
    "kind": "member",
    "name": "playerTeam",
    "memberof": "src/Game.js~Game",
    "static": false,
    "longname": "src/Game.js~Game#playerTeam",
    "access": "public",
    "description": "The team the user will be playing for, either \"home\" or \"away\".",
    "lineNumber": 18,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 118,
    "kind": "member",
    "name": "outs",
    "memberof": "src/Game.js~Game",
    "static": false,
    "longname": "src/Game.js~Game#outs",
    "access": "public",
    "description": "Number of outs in the inning",
    "lineNumber": 24,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 119,
    "kind": "member",
    "name": "balls",
    "memberof": "src/Game.js~Game",
    "static": false,
    "longname": "src/Game.js~Game#balls",
    "access": "public",
    "description": "Number of balls in the AB",
    "lineNumber": 29,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 120,
    "kind": "member",
    "name": "strikes",
    "memberof": "src/Game.js~Game",
    "static": false,
    "longname": "src/Game.js~Game#strikes",
    "access": "public",
    "description": "Number of strikes in the AB",
    "lineNumber": 34,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 121,
    "kind": "member",
    "name": "first",
    "memberof": "src/Game.js~Game",
    "static": false,
    "longname": "src/Game.js~Game#first",
    "access": "public",
    "description": "First base - true if occupied, false otherwise",
    "lineNumber": 39,
    "type": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 122,
    "kind": "member",
    "name": "second",
    "memberof": "src/Game.js~Game",
    "static": false,
    "longname": "src/Game.js~Game#second",
    "access": "public",
    "description": "Second base - true if occupied, false otherwise",
    "lineNumber": 44,
    "type": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 123,
    "kind": "member",
    "name": "third",
    "memberof": "src/Game.js~Game",
    "static": false,
    "longname": "src/Game.js~Game#third",
    "access": "public",
    "description": "Third base - true if occupied, false otherwise",
    "lineNumber": 49,
    "type": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 124,
    "kind": "member",
    "name": "homeTeam",
    "memberof": "src/Game.js~Game",
    "static": false,
    "longname": "src/Game.js~Game#homeTeam",
    "access": "public",
    "description": "Home team object - stores all data for the home team",
    "lineNumber": 55,
    "type": {
      "nullable": null,
      "types": [
        "Team"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 125,
    "kind": "member",
    "name": "visitTeam",
    "memberof": "src/Game.js~Game",
    "static": false,
    "longname": "src/Game.js~Game#visitTeam",
    "access": "public",
    "description": "Visitor team object - stores all data for the visiting team",
    "lineNumber": 60,
    "type": {
      "nullable": null,
      "types": [
        "Team"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 126,
    "kind": "member",
    "name": "homeAB",
    "memberof": "src/Game.js~Game",
    "static": false,
    "longname": "src/Game.js~Game#homeAB",
    "access": "public",
    "description": "Position in the home team lineup that is at bat (or scheduled to bat next)",
    "lineNumber": 66,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 127,
    "kind": "member",
    "name": "visitAB",
    "memberof": "src/Game.js~Game",
    "static": false,
    "longname": "src/Game.js~Game#visitAB",
    "access": "public",
    "description": "Position in the visiting team lineup that is at bat (or scheduled to bat next)",
    "lineNumber": 72,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 128,
    "kind": "member",
    "name": "inning",
    "memberof": "src/Game.js~Game",
    "static": false,
    "longname": "src/Game.js~Game#inning",
    "access": "public",
    "description": "Inning number - this.inningSide denotes the top or the bottom of the inning",
    "lineNumber": 78,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 129,
    "kind": "member",
    "name": "inningSide",
    "memberof": "src/Game.js~Game",
    "static": false,
    "longname": "src/Game.js~Game#inningSide",
    "access": "public",
    "description": "Top or the bottom of the inning - false denotes the top, true denotes the bottom.",
    "lineNumber": 84,
    "type": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 130,
    "kind": "member",
    "name": "lastPitch",
    "memberof": "src/Game.js~Game",
    "static": false,
    "longname": "src/Game.js~Game#lastPitch",
    "access": "public",
    "description": "Object that stores the result of the last pitch thrown - what pitch it was, what the category of contact was, the resulting play, whether an out was made, whether a new at bat is starting, and whether a new half-innning is starting.",
    "lineNumber": 90,
    "type": {
      "nullable": null,
      "types": [
        "{pitch: string, swing: boolean, play: string, out: boolean, newAB: boolean, newInning: boolean, runsScored: number}"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 131,
    "kind": "member",
    "name": "gameOver",
    "memberof": "src/Game.js~Game",
    "static": false,
    "longname": "src/Game.js~Game#gameOver",
    "access": "public",
    "description": "Boolean that shows if the game is over or not. True if game is over, false otherwise.",
    "lineNumber": 108,
    "type": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 132,
    "kind": "method",
    "name": "ssPitch",
    "memberof": "src/Game.js~Game",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Game.js~Game#ssPitch",
    "access": "public",
    "description": "Pitcher throws a slowball straight pitch and the outcome is determined by the batter's action",
    "lineNumber": 130,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "batter",
        "description": "The batter's action"
      }
    ],
    "return": null
  },
  {
    "__docId__": 133,
    "kind": "method",
    "name": "shPitch",
    "memberof": "src/Game.js~Game",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Game.js~Game#shPitch",
    "access": "public",
    "description": "Pitcher throws a slowball high pitch and the outcome is determined by the batter's action",
    "lineNumber": 188,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "batter",
        "description": "The batter's action"
      }
    ],
    "return": null
  },
  {
    "__docId__": 134,
    "kind": "method",
    "name": "slPitch",
    "memberof": "src/Game.js~Game",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Game.js~Game#slPitch",
    "access": "public",
    "description": "Pitcher throws a slowball low pitch and the outcome is determined by the batter's action",
    "lineNumber": 241,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "batter",
        "description": "The batter's action"
      }
    ],
    "return": null
  },
  {
    "__docId__": 135,
    "kind": "method",
    "name": "siPitch",
    "memberof": "src/Game.js~Game",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Game.js~Game#siPitch",
    "access": "public",
    "description": "Pitcher throws a slowball inside pitch and the outcome is determined by the batter's action",
    "lineNumber": 294,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "batter",
        "description": "The batter's action"
      }
    ],
    "return": null
  },
  {
    "__docId__": 136,
    "kind": "method",
    "name": "fsPitch",
    "memberof": "src/Game.js~Game",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Game.js~Game#fsPitch",
    "access": "public",
    "description": "Pitcher throws a fastball straight pitch and the outcome is determined by the batter's action",
    "lineNumber": 349,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "batter",
        "description": "The batter's action"
      }
    ],
    "return": null
  },
  {
    "__docId__": 137,
    "kind": "method",
    "name": "fhPitch",
    "memberof": "src/Game.js~Game",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Game.js~Game#fhPitch",
    "access": "public",
    "description": "Pitcher throws a fastball high pitch and the outcome is determined by the batter's action",
    "lineNumber": 407,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "batter",
        "description": "The batter's action"
      }
    ],
    "return": null
  },
  {
    "__docId__": 138,
    "kind": "method",
    "name": "flPitch",
    "memberof": "src/Game.js~Game",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Game.js~Game#flPitch",
    "access": "public",
    "description": "Pitcher throws a fastball low pitch and the outcome is determined by the batter's action",
    "lineNumber": 459,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "batter",
        "description": "The batter's action"
      }
    ],
    "return": null
  },
  {
    "__docId__": 139,
    "kind": "method",
    "name": "fiPitch",
    "memberof": "src/Game.js~Game",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Game.js~Game#fiPitch",
    "access": "public",
    "description": "Pitcher throws a fastball inside pitch and the outcome is determined by the batter's action",
    "lineNumber": 511,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "batter",
        "description": "The batter's action"
      }
    ],
    "return": null
  },
  {
    "__docId__": 140,
    "kind": "method",
    "name": "coPitch",
    "memberof": "src/Game.js~Game",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Game.js~Game#coPitch",
    "access": "public",
    "description": "Pitcher throws a curveball outside pitch and the outcome is determined by the batter's action",
    "lineNumber": 569,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "batter",
        "description": "The batter's action"
      }
    ],
    "return": null
  },
  {
    "__docId__": 141,
    "kind": "method",
    "name": "chPitch",
    "memberof": "src/Game.js~Game",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Game.js~Game#chPitch",
    "access": "public",
    "description": "Pitcher throws a curveball high pitch and the outcome is determined by the batter's action",
    "lineNumber": 627,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "batter",
        "description": "The batter's action"
      }
    ],
    "return": null
  },
  {
    "__docId__": 142,
    "kind": "method",
    "name": "clPitch",
    "memberof": "src/Game.js~Game",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Game.js~Game#clPitch",
    "access": "public",
    "description": "Pitcher throws a curveball low pitch and the outcome is determined by the batter's action",
    "lineNumber": 676,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "batter",
        "description": "The batter's action"
      }
    ],
    "return": null
  },
  {
    "__docId__": 143,
    "kind": "method",
    "name": "ciPitch",
    "memberof": "src/Game.js~Game",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Game.js~Game#ciPitch",
    "access": "public",
    "description": "Pitcher throws a curveball inside pitch and the outcome is determined by the batter's action",
    "lineNumber": 728,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "batter",
        "description": "The batter's action"
      }
    ],
    "return": null
  },
  {
    "__docId__": 144,
    "kind": "method",
    "name": "hit1",
    "memberof": "src/Game.js~Game",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Game.js~Game#hit1",
    "access": "public",
    "description": "Hit chart 1: Infield balls",
    "lineNumber": 786,
    "params": [],
    "return": null
  },
  {
    "__docId__": 145,
    "kind": "method",
    "name": "hit2",
    "memberof": "src/Game.js~Game",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Game.js~Game#hit2",
    "access": "public",
    "description": "Hit chart 2: Hits that fall over the infield, moderately hard hit grounders in the infield and fly balls that infielders go out for and outfielders come in for",
    "lineNumber": 823,
    "params": [],
    "return": null
  },
  {
    "__docId__": 146,
    "kind": "method",
    "name": "hit3",
    "memberof": "src/Game.js~Game",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Game.js~Game#hit3",
    "access": "public",
    "description": "Hit chart 3: Sharply hit balls through the infield and fly balls and hits to the outfield that go farther than chart 2 balls",
    "lineNumber": 858,
    "params": [],
    "return": null
  },
  {
    "__docId__": 147,
    "kind": "method",
    "name": "hit4",
    "memberof": "src/Game.js~Game",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Game.js~Game#hit4",
    "access": "public",
    "description": "Hit chart 4: Balls hit down the 1st and 3rd base lines and hard hit balls not going as far as those on chart 5",
    "lineNumber": 892,
    "params": [],
    "return": null
  },
  {
    "__docId__": 148,
    "kind": "method",
    "name": "hit5",
    "memberof": "src/Game.js~Game",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Game.js~Game#hit5",
    "access": "public",
    "description": "Hit chart 5: Hard hit balls",
    "lineNumber": 933,
    "params": [],
    "return": null
  },
  {
    "__docId__": 149,
    "kind": "method",
    "name": "hit6",
    "memberof": "src/Game.js~Game",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Game.js~Game#hit6",
    "access": "public",
    "description": "Hit chart 6: The most solidly hit balls and when hit for extra bases are the longest hit balls",
    "lineNumber": 974,
    "params": [],
    "return": null
  },
  {
    "__docId__": 150,
    "kind": "method",
    "name": "homeRun",
    "memberof": "src/Game.js~Game",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Game.js~Game#homeRun",
    "access": "public",
    "description": "Home run - clears the bases and adds one run for every runner",
    "lineNumber": 1015,
    "params": [],
    "return": null
  },
  {
    "__docId__": 154,
    "kind": "method",
    "name": "triple",
    "memberof": "src/Game.js~Game",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Game.js~Game#triple",
    "access": "public",
    "description": "Triple - clears the bases and batter ends up at third",
    "lineNumber": 1054,
    "params": [],
    "return": null
  },
  {
    "__docId__": 159,
    "kind": "method",
    "name": "doubleClear",
    "memberof": "src/Game.js~Game",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Game.js~Game#doubleClear",
    "access": "public",
    "description": "Bases-clearing double - clears the bases (runner at first scores) and batter ends up at second",
    "lineNumber": 1090,
    "params": [],
    "return": null
  },
  {
    "__docId__": 164,
    "kind": "method",
    "name": "double",
    "memberof": "src/Game.js~Game",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Game.js~Game#double",
    "access": "public",
    "description": "Double - runners at third and second score, runner at first goes to third, batter ends up at second",
    "lineNumber": 1127,
    "params": [],
    "return": null
  },
  {
    "__docId__": 170,
    "kind": "method",
    "name": "single",
    "memberof": "src/Game.js~Game",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Game.js~Game#single",
    "access": "public",
    "description": "Single - all runners advance one base, batter ends up at first",
    "lineNumber": 1164,
    "params": [],
    "return": null
  },
  {
    "__docId__": 177,
    "kind": "method",
    "name": "singleRISP",
    "memberof": "src/Game.js~Game",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Game.js~Game#singleRISP",
    "access": "public",
    "description": "Single that scores runners in scoring postion - runners at third and second score, runner at first goes to second, batter ends up at first",
    "lineNumber": 1203,
    "params": [],
    "return": null
  },
  {
    "__docId__": 183,
    "kind": "method",
    "name": "singleAdvance",
    "memberof": "src/Game.js~Game",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Game.js~Game#singleAdvance",
    "access": "public",
    "description": "Single that allows runner at first to go to third - runners at third and second score, runner at first goes to third, batter ends up at first",
    "lineNumber": 1240,
    "params": [],
    "return": null
  },
  {
    "__docId__": 189,
    "kind": "method",
    "name": "error",
    "memberof": "src/Game.js~Game",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Game.js~Game#error",
    "access": "public",
    "description": "Error - All runners move up a base, batter is safe at first in play that should've resulted in an out",
    "lineNumber": 1277,
    "params": [],
    "return": null
  },
  {
    "__docId__": 196,
    "kind": "method",
    "name": "foulout",
    "memberof": "src/Game.js~Game",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Game.js~Game#foulout",
    "access": "public",
    "description": "Batter pops out in foul territory - All runners hold",
    "lineNumber": 1316,
    "params": [],
    "return": null
  },
  {
    "__docId__": 197,
    "kind": "method",
    "name": "flyout",
    "memberof": "src/Game.js~Game",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Game.js~Game#flyout",
    "access": "public",
    "description": "Batter pops out - All runners hold",
    "lineNumber": 1327,
    "params": [],
    "return": null
  },
  {
    "__docId__": 198,
    "kind": "method",
    "name": "flyoutAdv",
    "memberof": "src/Game.js~Game",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Game.js~Game#flyoutAdv",
    "access": "public",
    "description": "Batter pops out - All runners advance one base",
    "lineNumber": 1338,
    "params": [],
    "return": null
  },
  {
    "__docId__": 204,
    "kind": "method",
    "name": "flyoutNoAdv1st",
    "memberof": "src/Game.js~Game",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Game.js~Game#flyoutNoAdv1st",
    "access": "public",
    "description": "Batter pops out - All runners (except runner at first) advance one base",
    "lineNumber": 1376,
    "params": [],
    "return": null
  },
  {
    "__docId__": 208,
    "kind": "method",
    "name": "groundout",
    "memberof": "src/Game.js~Game",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Game.js~Game#groundout",
    "access": "public",
    "description": "Batter grounds out - All runners advance one base",
    "lineNumber": 1409,
    "params": [],
    "return": null
  },
  {
    "__docId__": 214,
    "kind": "method",
    "name": "groundoutAdvIfForced",
    "memberof": "src/Game.js~Game",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Game.js~Game#groundoutAdvIfForced",
    "access": "public",
    "description": "Batter grounds out - Runners hold unless they are forced to advance",
    "lineNumber": 1447,
    "params": [],
    "return": null
  },
  {
    "__docId__": 220,
    "kind": "method",
    "name": "groundoutDoublePlay",
    "memberof": "src/Game.js~Game",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Game.js~Game#groundoutDoublePlay",
    "access": "public",
    "description": "Double play - Runner at first out and batter out",
    "lineNumber": 1486,
    "params": [],
    "return": null
  },
  {
    "__docId__": 225,
    "kind": "method",
    "name": "lineoutDoublePlay",
    "memberof": "src/Game.js~Game",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Game.js~Game#lineoutDoublePlay",
    "access": "public",
    "description": "Double play - Lead runner and batter out",
    "lineNumber": 1528,
    "params": [],
    "return": null
  },
  {
    "__docId__": 229,
    "kind": "method",
    "name": "triplePlay",
    "memberof": "src/Game.js~Game",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Game.js~Game#triplePlay",
    "access": "public",
    "description": "Triple play - Runners at first and second and batter out",
    "lineNumber": 1553,
    "params": [],
    "return": null
  },
  {
    "__docId__": 234,
    "kind": "method",
    "name": "fieldersChoice",
    "memberof": "src/Game.js~Game",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Game.js~Game#fieldersChoice",
    "access": "public",
    "description": "Fielder's choice - Runner advances only if forced and lead runner is out, batter out and runners hold otherwise",
    "lineNumber": 1578,
    "params": [],
    "return": null
  },
  {
    "__docId__": 235,
    "kind": "method",
    "name": "errorSecond",
    "memberof": "src/Game.js~Game",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Game.js~Game#errorSecond",
    "access": "public",
    "description": "Error - Runners at first and second advance 2 bases and batter ends up at second",
    "lineNumber": 1588,
    "params": [],
    "return": null
  },
  {
    "__docId__": 241,
    "kind": "method",
    "name": "foul",
    "memberof": "src/Game.js~Game",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Game.js~Game#foul",
    "access": "public",
    "description": "Foul ball - only counts as a strike if there are less than 2 strikes",
    "lineNumber": 1624,
    "params": [],
    "return": null
  },
  {
    "__docId__": 242,
    "kind": "method",
    "name": "swingingStrike",
    "memberof": "src/Game.js~Game",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Game.js~Game#swingingStrike",
    "access": "public",
    "description": "Swinging Strike - Strike that is swung at, 3 strikes and you're out",
    "lineNumber": 1638,
    "params": [],
    "return": null
  },
  {
    "__docId__": 244,
    "kind": "method",
    "name": "calledStrike",
    "memberof": "src/Game.js~Game",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Game.js~Game#calledStrike",
    "access": "public",
    "description": "Called Strike - Strike that's taken, 3 strikes and you're out",
    "lineNumber": 1658,
    "params": [],
    "return": null
  },
  {
    "__docId__": 246,
    "kind": "method",
    "name": "ball",
    "memberof": "src/Game.js~Game",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Game.js~Game#ball",
    "access": "public",
    "description": "Ball - 4 balls and it's a free pass on base",
    "lineNumber": 1678,
    "params": [],
    "return": null
  },
  {
    "__docId__": 254,
    "kind": "method",
    "name": "out",
    "memberof": "src/Game.js~Game",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Game.js~Game#out",
    "access": "public",
    "description": "Out - 3 Outs and that's the end of the inning",
    "lineNumber": 1717,
    "params": [
      {
        "name": "num",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 257,
    "kind": "method",
    "name": "newAB",
    "memberof": "src/Game.js~Game",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Game.js~Game#newAB",
    "access": "public",
    "description": "Resets the game for a new at bat",
    "lineNumber": 1745,
    "params": [],
    "return": null
  },
  {
    "__docId__": 263,
    "kind": "method",
    "name": "newInning",
    "memberof": "src/Game.js~Game",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Game.js~Game#newInning",
    "access": "public",
    "description": "Resets the bases and outs for a new half-inning",
    "lineNumber": 1777,
    "params": [],
    "return": null
  },
  {
    "__docId__": 271,
    "kind": "method",
    "name": "teamPointer",
    "memberof": "src/Game.js~Game",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Game.js~Game#teamPointer",
    "access": "public",
    "description": null,
    "lineNumber": 1799,
    "undocument": true,
    "params": [
      {
        "name": "team",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 272,
    "kind": "file",
    "name": "src/Infielder.js",
    "content": "'use strict';\n/**\n *Child of PositionPlayer class\n */\nimport { PositionPlayer } from './PositionPlayer.js';\n/**\n * Infielder class - stores information about name, position, batting strength, baserunning speed, whether they have been chosen on a team.\n */\nexport class Infielder extends PositionPlayer {\n    /**\n    * * Constructor creates a player that stores there name, position, hitting stats, baserunning speed and whether the player is on a team using functions inherited from the PositionPlayer class.\n    * POSTCONDITION: name, position, hitting stats, baserunning speed all now have set values.\n        * @extends {PositionPlayerClass}This class is a child of the PositionPlayer class.\n        * @param {string} positionType The players position\n        */\n    constructor(name, position, batStrengths, baseSpeed){\n        /**\n        * @extends {PositionPlayerClass}\n        */\n        super(name, position, batStrengths, baseSpeed);\n    }\n}\n",
    "static": true,
    "longname": "/home/jacob/Programming/eecs448/big-league-baseball/src/Infielder.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 273,
    "kind": "class",
    "name": "Infielder",
    "memberof": "src/Infielder.js",
    "static": true,
    "longname": "src/Infielder.js~Infielder",
    "access": "public",
    "export": true,
    "importPath": "big-league-baseball/src/Infielder.js",
    "importStyle": "{Infielder}",
    "description": "Infielder class - stores information about name, position, batting strength, baserunning speed, whether they have been chosen on a team.",
    "lineNumber": 9,
    "interface": false,
    "extends": [
      "src/PositionPlayer.js~PositionPlayer"
    ]
  },
  {
    "__docId__": 274,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/Infielder.js~Infielder",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Infielder.js~Infielder#constructor",
    "access": "public",
    "description": "* Constructor creates a player that stores there name, position, hitting stats, baserunning speed and whether the player is on a team using functions inherited from the PositionPlayer class.\nPOSTCONDITION: name, position, hitting stats, baserunning speed all now have set values.",
    "lineNumber": 16,
    "unknown": [
      {
        "tagName": "@extends",
        "tagValue": "{PositionPlayerClass}This class is a child of the PositionPlayer class."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "positionType",
        "description": "The players position"
      }
    ]
  },
  {
    "__docId__": 275,
    "kind": "file",
    "name": "src/Outfielder.js",
    "content": "'use strict';\n/**\n *Child of PositionPlayer class\n */\nimport { PositionPlayer } from './PositionPlayer.js';\n/**\n * Outfielder class - stores information about name, position, batting strength, baserunning speed, whether they have been chosen on a team.\n */\nexport class Outfielder extends PositionPlayer {\n    /**\n    * * Constructor creates a player that stores there name, position, hitting stats, baserunning speed and whether the player is on a team using functions inherited from the PositionPlayer class.\n    * POSTCONDITION: name, position, hitting stats, baserunning speed all now have set values.\n        * @extends {PositionPlayerClass}This class is a child of the PositionPlayer class.\n        * @param {string} positionType The players position\n        */\n    constructor(name, position, batStrengths, baseSpeed){\n        /**\n        * @extends {PositionPlayerClass}\n        */\n        super(name, position, batStrengths, baseSpeed);\n    }\n}\n",
    "static": true,
    "longname": "/home/jacob/Programming/eecs448/big-league-baseball/src/Outfielder.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 276,
    "kind": "class",
    "name": "Outfielder",
    "memberof": "src/Outfielder.js",
    "static": true,
    "longname": "src/Outfielder.js~Outfielder",
    "access": "public",
    "export": true,
    "importPath": "big-league-baseball/src/Outfielder.js",
    "importStyle": "{Outfielder}",
    "description": "Outfielder class - stores information about name, position, batting strength, baserunning speed, whether they have been chosen on a team.",
    "lineNumber": 9,
    "interface": false,
    "extends": [
      "src/PositionPlayer.js~PositionPlayer"
    ]
  },
  {
    "__docId__": 277,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/Outfielder.js~Outfielder",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Outfielder.js~Outfielder#constructor",
    "access": "public",
    "description": "* Constructor creates a player that stores there name, position, hitting stats, baserunning speed and whether the player is on a team using functions inherited from the PositionPlayer class.\nPOSTCONDITION: name, position, hitting stats, baserunning speed all now have set values.",
    "lineNumber": 16,
    "unknown": [
      {
        "tagName": "@extends",
        "tagValue": "{PositionPlayerClass}This class is a child of the PositionPlayer class."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "positionType",
        "description": "The players position"
      }
    ]
  },
  {
    "__docId__": 278,
    "kind": "file",
    "name": "src/PinchHitter.js",
    "content": "'use strict';\n/**\n *Child of PositionPlayer class\n */\nimport { PositionPlayer } from './PositionPlayer.js';\n/**\n * PinchHitter class - stores information about name, position, batting strength, baserunning speed, whether they have been chosen on a team.\n */\nexport class PinchHitter extends PositionPlayer {\n    /**\n    * * Constructor creates a player that stores there name, position, hitting stats, baserunning speed and whether the player is on a team using functions inherited from the PositionPlayer class.\n    * POSTCONDITION: name, position, hitting stats, baserunning speed all now have set values.\n        * @extends {PositionPlayerClass}This class is a child of the PositionPlayer class.\n        * @param {string} positionType The players position\n        */\n    constructor(name, position, batStrengths, baseSpeed, batSide){\n        /**\n        * @extends {PositionPlayerClass}\n        */\n        super(name, position, batStrengths, baseSpeed);\n        /**\n\t\t*Hitters batting side of plate.\n     \t* @type {string}\n     \t*/\n        this.batSide= batSide;\n    }\n    /**\n\t* Returns the baseball players batting side of plate.\n\t* @return{string}  batSide\n\t*/\n    getBatSide(){\n        return this.batSide;\n    }\n}\n",
    "static": true,
    "longname": "/home/jacob/Programming/eecs448/big-league-baseball/src/PinchHitter.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 279,
    "kind": "class",
    "name": "PinchHitter",
    "memberof": "src/PinchHitter.js",
    "static": true,
    "longname": "src/PinchHitter.js~PinchHitter",
    "access": "public",
    "export": true,
    "importPath": "big-league-baseball/src/PinchHitter.js",
    "importStyle": "{PinchHitter}",
    "description": "PinchHitter class - stores information about name, position, batting strength, baserunning speed, whether they have been chosen on a team.",
    "lineNumber": 9,
    "interface": false,
    "extends": [
      "src/PositionPlayer.js~PositionPlayer"
    ]
  },
  {
    "__docId__": 280,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/PinchHitter.js~PinchHitter",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/PinchHitter.js~PinchHitter#constructor",
    "access": "public",
    "description": "* Constructor creates a player that stores there name, position, hitting stats, baserunning speed and whether the player is on a team using functions inherited from the PositionPlayer class.\nPOSTCONDITION: name, position, hitting stats, baserunning speed all now have set values.",
    "lineNumber": 16,
    "unknown": [
      {
        "tagName": "@extends",
        "tagValue": "{PositionPlayerClass}This class is a child of the PositionPlayer class."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "positionType",
        "description": "The players position"
      }
    ]
  },
  {
    "__docId__": 281,
    "kind": "member",
    "name": "batSide",
    "memberof": "src/PinchHitter.js~PinchHitter",
    "static": false,
    "longname": "src/PinchHitter.js~PinchHitter#batSide",
    "access": "public",
    "description": "Hitters batting side of plate.",
    "lineNumber": 25,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 282,
    "kind": "method",
    "name": "getBatSide",
    "memberof": "src/PinchHitter.js~PinchHitter",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/PinchHitter.js~PinchHitter#getBatSide",
    "access": "public",
    "description": "Returns the baseball players batting side of plate.\n@return{string}  batSide",
    "lineNumber": 31,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 283,
    "kind": "file",
    "name": "src/Pitcher.js",
    "content": "'use strict';\n/**\n *Child of Player class\n */\nimport { Player } from './Player.js';\n/**\n * Pitcher class - stores information about name,pitcher type, batting strength, baserunning speed,whether they have been chosen on a team and pitching arsenal\n */\nexport class Pitcher extends Player {\n    /**\n    * Constructor creates a player that stores there name,,pitcher type , hitting stats, baserunning speed and whether the player is on a team using functions inherited from the Player class. Also, type of pitcher they are, types of pitches they throw.\n    * POSTCONDITION: name, position, hitting stats, baserunning speed and inLineup all now have set values,  pitcher type and the pitcher arsenal all now have set values.\n        * @extends {PlayerClass}This class is a child of the player class.\n        * @param {string} position Type of pitcher.\n        * @param {string[]} arsenal The type of pitches he throws.\n        */\n    constructor(name, position, batStrengths, baseSpeed, pitches, pitchSide){\n        /**\n        * @extends {PlayerClass}\n        */\n        super(name, position);\n\t\t/**\n\t\t* Pitches thrown by this picture.\n     \t* @type {string[]}\n     \t*/\n        this.arsenal = pitches;\n\n        this.pitchSide = pitchSide;\n    }\n    /**\n\t* Gets the baseball players pitches he throws.\n\t* @return {string[]} arsenal\n\t*/\n    //TODO\n    getArsenal(){\n        return this.arsenal;\n    }\n\n\t/**\n\t * Gets the preferred pitches of the player (which, in a pitcher's case, is none)\n\t * @returns {Array}\n\t */\n\tgetBatStrengths() {\n    \treturn [];\n    }\n}\n",
    "static": true,
    "longname": "/home/jacob/Programming/eecs448/big-league-baseball/src/Pitcher.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 284,
    "kind": "class",
    "name": "Pitcher",
    "memberof": "src/Pitcher.js",
    "static": true,
    "longname": "src/Pitcher.js~Pitcher",
    "access": "public",
    "export": true,
    "importPath": "big-league-baseball/src/Pitcher.js",
    "importStyle": "{Pitcher}",
    "description": "Pitcher class - stores information about name,pitcher type, batting strength, baserunning speed,whether they have been chosen on a team and pitching arsenal",
    "lineNumber": 9,
    "interface": false,
    "extends": [
      "src/Player.js~Player"
    ]
  },
  {
    "__docId__": 285,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/Pitcher.js~Pitcher",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Pitcher.js~Pitcher#constructor",
    "access": "public",
    "description": "Constructor creates a player that stores there name,,pitcher type , hitting stats, baserunning speed and whether the player is on a team using functions inherited from the Player class. Also, type of pitcher they are, types of pitches they throw.\nPOSTCONDITION: name, position, hitting stats, baserunning speed and inLineup all now have set values,  pitcher type and the pitcher arsenal all now have set values.",
    "lineNumber": 17,
    "unknown": [
      {
        "tagName": "@extends",
        "tagValue": "{PlayerClass}This class is a child of the player class."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "position",
        "description": "Type of pitcher."
      },
      {
        "nullable": null,
        "types": [
          "string[]"
        ],
        "spread": false,
        "optional": false,
        "name": "arsenal",
        "description": "The type of pitches he throws."
      }
    ]
  },
  {
    "__docId__": 286,
    "kind": "member",
    "name": "arsenal",
    "memberof": "src/Pitcher.js~Pitcher",
    "static": false,
    "longname": "src/Pitcher.js~Pitcher#arsenal",
    "access": "public",
    "description": "Pitches thrown by this picture.",
    "lineNumber": 26,
    "type": {
      "nullable": null,
      "types": [
        "string[]"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 287,
    "kind": "member",
    "name": "pitchSide",
    "memberof": "src/Pitcher.js~Pitcher",
    "static": false,
    "longname": "src/Pitcher.js~Pitcher#pitchSide",
    "access": "public",
    "description": null,
    "lineNumber": 28,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 288,
    "kind": "method",
    "name": "getArsenal",
    "memberof": "src/Pitcher.js~Pitcher",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Pitcher.js~Pitcher#getArsenal",
    "access": "public",
    "description": "Gets the baseball players pitches he throws.",
    "lineNumber": 35,
    "return": {
      "nullable": null,
      "types": [
        "string[]"
      ],
      "spread": false,
      "description": "arsenal"
    },
    "params": []
  },
  {
    "__docId__": 289,
    "kind": "method",
    "name": "getBatStrengths",
    "memberof": "src/Pitcher.js~Pitcher",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Pitcher.js~Pitcher#getBatStrengths",
    "access": "public",
    "description": "Gets the preferred pitches of the player (which, in a pitcher's case, is none)",
    "lineNumber": 43,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Array}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Array"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 290,
    "kind": "file",
    "name": "src/Player.js",
    "content": "'use strict';\n\n/**\n * Basic player class - stores information about name, position, batting strength, baserunning speed and whether they have been chosen on a team.\n */\nexport class Player {\n\t/**\n\t* Constructor creates a player that stores there name, position, hitting stats, baserunning speed and whether the player is on a team.\n\t* POSTCONDITION: name, position, hitting stats, baserunning speed and inLineup all now have set values.\n\t\t* @param {string} name Name of baseball player.\n\t\t* @param {string} position Position the baseball player holds in the game.\n\t\t* @param {string[]} batStrengths The type of pitches the batter hits best.\n\t\t* @param {boolean} baseSpeed The players baserunning speed\n\t\t*/\n\tconstructor(name, position) {\n\t\t/**\n\t\t* Baseball player name.\n     \t* @type {string}\n     \t*/\n\t\tthis.playerName = name;\n\t\t/**\n\t\t* Position player or pitcher.\n     \t* @type {string}\n     \t*/\n\t\tthis.position = position;\n        /**\n        * Is available to be selected or not.\n        * @type {boolean}\n        */\n        this.inLineup = true;\n\t}\n\t/**\n\t* Gets the baseball players name.\n\t* @return {string} name\n\t*/\n    getPlayerName(){\n        return this.playerName;\n    }\n\t/**\n\t* Gets the baseball players position in the game.\n\t* @return {string} position\n\t*/\n    getPosition(){\n        return this.position;\n    }\n\t/**\n\t* Gets whether the player has already been chosen by a team or not.\n\t* @return {boolean} true\n\t*/\n    getInLineup(){\n        return this.inLineup;\n    }\n}\n",
    "static": true,
    "longname": "/home/jacob/Programming/eecs448/big-league-baseball/src/Player.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 291,
    "kind": "class",
    "name": "Player",
    "memberof": "src/Player.js",
    "static": true,
    "longname": "src/Player.js~Player",
    "access": "public",
    "export": true,
    "importPath": "big-league-baseball/src/Player.js",
    "importStyle": "{Player}",
    "description": "Basic player class - stores information about name, position, batting strength, baserunning speed and whether they have been chosen on a team.",
    "lineNumber": 6,
    "interface": false
  },
  {
    "__docId__": 292,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/Player.js~Player",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Player.js~Player#constructor",
    "access": "public",
    "description": "Constructor creates a player that stores there name, position, hitting stats, baserunning speed and whether the player is on a team.\nPOSTCONDITION: name, position, hitting stats, baserunning speed and inLineup all now have set values.",
    "lineNumber": 15,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "name",
        "description": "Name of baseball player."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "position",
        "description": "Position the baseball player holds in the game."
      },
      {
        "nullable": null,
        "types": [
          "string[]"
        ],
        "spread": false,
        "optional": false,
        "name": "batStrengths",
        "description": "The type of pitches the batter hits best."
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "baseSpeed",
        "description": "The players baserunning speed"
      }
    ]
  },
  {
    "__docId__": 293,
    "kind": "member",
    "name": "playerName",
    "memberof": "src/Player.js~Player",
    "static": false,
    "longname": "src/Player.js~Player#playerName",
    "access": "public",
    "description": "Baseball player name.",
    "lineNumber": 20,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 294,
    "kind": "member",
    "name": "position",
    "memberof": "src/Player.js~Player",
    "static": false,
    "longname": "src/Player.js~Player#position",
    "access": "public",
    "description": "Position player or pitcher.",
    "lineNumber": 25,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 295,
    "kind": "member",
    "name": "inLineup",
    "memberof": "src/Player.js~Player",
    "static": false,
    "longname": "src/Player.js~Player#inLineup",
    "access": "public",
    "description": "Is available to be selected or not.",
    "lineNumber": 30,
    "type": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 296,
    "kind": "method",
    "name": "getPlayerName",
    "memberof": "src/Player.js~Player",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Player.js~Player#getPlayerName",
    "access": "public",
    "description": "Gets the baseball players name.",
    "lineNumber": 36,
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "name"
    },
    "params": []
  },
  {
    "__docId__": 297,
    "kind": "method",
    "name": "getPosition",
    "memberof": "src/Player.js~Player",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Player.js~Player#getPosition",
    "access": "public",
    "description": "Gets the baseball players position in the game.",
    "lineNumber": 43,
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "position"
    },
    "params": []
  },
  {
    "__docId__": 298,
    "kind": "method",
    "name": "getInLineup",
    "memberof": "src/Player.js~Player",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Player.js~Player#getInLineup",
    "access": "public",
    "description": "Gets whether the player has already been chosen by a team or not.",
    "lineNumber": 50,
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "true"
    },
    "params": []
  },
  {
    "__docId__": 299,
    "kind": "file",
    "name": "src/PositionPlayer.js",
    "content": "'use strict';\n/**\n *Child of Player class\n */\nimport { Player } from './Player.js';\n/**\n * PositionPlayer class - stores information about name, position, batting strength, baserunning speed, whether they have been chosen on a team.\n */\nexport class PositionPlayer extends Player {\n    /**\n    * * Constructor creates a player that stores there name, position, hitting stats, baserunning speed and whether the player is on a team using functions inherited from the Player class.\n    * POSTCONDITION: name, position, hitting stats, baserunning speed all now have set values.\n        * @extends {PlayerClass}This class is a child of the player class.\n        * @param {string} positionType The players position\n        */\n    constructor(name, position, batStrengths, baseSpeed){\n        /**\n        * @extends {PlayerClass}\n        */\n        super(name, position)\n        /**\n\t\t*Hitters batting strengths.\n     \t* @type {string[]}\n     \t*/\n\t\tthis.batStrengths = batStrengths;\n\t\t/**\n\t\t* Player baserunning speed - true if fast runner, false if not fast.\n\t\t* @type {boolean}\n\t\t*/\n\t\tthis.baseSpeed = baseSpeed;\n    }\n\t/**\n\t* Gets if pitch thrown is batters strength.\n\t* @return {array} batStrengths\n\t*/\n    getBatStrengths(){\n\t\treturn this.batStrengths;\n    }\n\t/**\n\t* Gets the baseball players baserunning speed.\n\t* @return {boolean}  baseSpeed\n\t*/\n    getBaseSpeed(){\n        return this.baseSpeed;\n    }\n}\n",
    "static": true,
    "longname": "/home/jacob/Programming/eecs448/big-league-baseball/src/PositionPlayer.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 300,
    "kind": "class",
    "name": "PositionPlayer",
    "memberof": "src/PositionPlayer.js",
    "static": true,
    "longname": "src/PositionPlayer.js~PositionPlayer",
    "access": "public",
    "export": true,
    "importPath": "big-league-baseball/src/PositionPlayer.js",
    "importStyle": "{PositionPlayer}",
    "description": "PositionPlayer class - stores information about name, position, batting strength, baserunning speed, whether they have been chosen on a team.",
    "lineNumber": 9,
    "interface": false,
    "extends": [
      "src/Player.js~Player"
    ]
  },
  {
    "__docId__": 301,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/PositionPlayer.js~PositionPlayer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/PositionPlayer.js~PositionPlayer#constructor",
    "access": "public",
    "description": "* Constructor creates a player that stores there name, position, hitting stats, baserunning speed and whether the player is on a team using functions inherited from the Player class.\nPOSTCONDITION: name, position, hitting stats, baserunning speed all now have set values.",
    "lineNumber": 16,
    "unknown": [
      {
        "tagName": "@extends",
        "tagValue": "{PlayerClass}This class is a child of the player class."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "positionType",
        "description": "The players position"
      }
    ]
  },
  {
    "__docId__": 302,
    "kind": "member",
    "name": "batStrengths",
    "memberof": "src/PositionPlayer.js~PositionPlayer",
    "static": false,
    "longname": "src/PositionPlayer.js~PositionPlayer#batStrengths",
    "access": "public",
    "description": "Hitters batting strengths.",
    "lineNumber": 25,
    "type": {
      "nullable": null,
      "types": [
        "string[]"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 303,
    "kind": "member",
    "name": "baseSpeed",
    "memberof": "src/PositionPlayer.js~PositionPlayer",
    "static": false,
    "longname": "src/PositionPlayer.js~PositionPlayer#baseSpeed",
    "access": "public",
    "description": "Player baserunning speed - true if fast runner, false if not fast.",
    "lineNumber": 30,
    "type": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 304,
    "kind": "method",
    "name": "getBatStrengths",
    "memberof": "src/PositionPlayer.js~PositionPlayer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/PositionPlayer.js~PositionPlayer#getBatStrengths",
    "access": "public",
    "description": "Gets if pitch thrown is batters strength.",
    "lineNumber": 36,
    "return": {
      "nullable": null,
      "types": [
        "array"
      ],
      "spread": false,
      "description": "batStrengths"
    },
    "params": []
  },
  {
    "__docId__": 305,
    "kind": "method",
    "name": "getBaseSpeed",
    "memberof": "src/PositionPlayer.js~PositionPlayer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/PositionPlayer.js~PositionPlayer#getBaseSpeed",
    "access": "public",
    "description": "Gets the baseball players baserunning speed.",
    "lineNumber": 43,
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "baseSpeed"
    },
    "params": []
  },
  {
    "__docId__": 306,
    "kind": "file",
    "name": "src/ReliefPitcher.js",
    "content": "'use strict';\n/**\n *Child of Pitcher class\n */\nimport { Pitcher } from './Pitcher.js';\n/**\n * ReliefPitcher class - stores information about name,ReliefPitcher type, batting strength, baserunning speed,whether they have been chosen on a team and pitching arsenal\n */\nexport class ReliefPitcher extends Pitcher {\n    /**\n    * Constructor creates a ReliefPitcher that stores there name,Pitcher type , hitting stats, baserunning speed and whether the ReliefPitcher is on a team using functions inherited from the Pitcher class. Also, type of Pitcher they are, types of pitches they throw.\n    * POSTCONDITION: name, position, hitting stats, baserunning speed and inLineup all now have set values,  ReliefPitcher type and the ReliefPitcher arsenal all now have set values.\n        * @extends {PitcherClass}This class is a child of the Pitcher class.\n        * @param {string} position Type of Pitcher.\n        * @param {string[]} arsenal The type of pitches he throws.\n        */\n    constructor(name, position, batStrengths, baseSpeed, pitches, pitchSide){\n        /**\n        * @extends {PitcherClass}\n        */\n        super(name, position, batStrengths, baseSpeed, pitches, pitchSide);\n\t\t/**\n\t\t* The number of innings the reliever may pitch.\n     \t* @type {num}\n     \t*/\n        this.numInningsLeft = 3;\n    }\n    /**\n\t* De-increments the number of innings the reliever can pitch.\n\t* @return {num} Innings left to pitch.\n\t*/\n    //TODO Run this after every inning he is in the lineup.\n    numInningsLeft(){\n        this.numInningsLeft= this.numInningsLeft -1;\n    }\n    /**\n\t* Returns the number of innings the reliever can pitch.\n\t* @return {num} Innings left to pitch.\n\t*/\n    //TODO?\n    getNumInningsLeft(){\n        return this.numInningsLeft;\n    }\n}\n",
    "static": true,
    "longname": "/home/jacob/Programming/eecs448/big-league-baseball/src/ReliefPitcher.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 307,
    "kind": "class",
    "name": "ReliefPitcher",
    "memberof": "src/ReliefPitcher.js",
    "static": true,
    "longname": "src/ReliefPitcher.js~ReliefPitcher",
    "access": "public",
    "export": true,
    "importPath": "big-league-baseball/src/ReliefPitcher.js",
    "importStyle": "{ReliefPitcher}",
    "description": "ReliefPitcher class - stores information about name,ReliefPitcher type, batting strength, baserunning speed,whether they have been chosen on a team and pitching arsenal",
    "lineNumber": 9,
    "interface": false,
    "extends": [
      "src/Pitcher.js~Pitcher"
    ]
  },
  {
    "__docId__": 308,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/ReliefPitcher.js~ReliefPitcher",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/ReliefPitcher.js~ReliefPitcher#constructor",
    "access": "public",
    "description": "Constructor creates a ReliefPitcher that stores there name,Pitcher type , hitting stats, baserunning speed and whether the ReliefPitcher is on a team using functions inherited from the Pitcher class. Also, type of Pitcher they are, types of pitches they throw.\nPOSTCONDITION: name, position, hitting stats, baserunning speed and inLineup all now have set values,  ReliefPitcher type and the ReliefPitcher arsenal all now have set values.",
    "lineNumber": 17,
    "unknown": [
      {
        "tagName": "@extends",
        "tagValue": "{PitcherClass}This class is a child of the Pitcher class."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "position",
        "description": "Type of Pitcher."
      },
      {
        "nullable": null,
        "types": [
          "string[]"
        ],
        "spread": false,
        "optional": false,
        "name": "arsenal",
        "description": "The type of pitches he throws."
      }
    ]
  },
  {
    "__docId__": 310,
    "kind": "method",
    "name": "numInningsLeft",
    "memberof": "src/ReliefPitcher.js~ReliefPitcher",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/ReliefPitcher.js~ReliefPitcher#numInningsLeft",
    "access": "public",
    "description": "De-increments the number of innings the reliever can pitch.",
    "lineNumber": 33,
    "return": {
      "nullable": null,
      "types": [
        "num"
      ],
      "spread": false,
      "description": "Innings left to pitch."
    },
    "params": []
  },
  {
    "__docId__": 312,
    "kind": "method",
    "name": "getNumInningsLeft",
    "memberof": "src/ReliefPitcher.js~ReliefPitcher",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/ReliefPitcher.js~ReliefPitcher#getNumInningsLeft",
    "access": "public",
    "description": "Returns the number of innings the reliever can pitch.",
    "lineNumber": 41,
    "return": {
      "nullable": null,
      "types": [
        "num"
      ],
      "spread": false,
      "description": "Innings left to pitch."
    },
    "params": []
  },
  {
    "__docId__": 313,
    "kind": "file",
    "name": "src/Team.js",
    "content": "'use strict';\n/**\n *Team class creates teams\n */\nimport { Catcher } from './Catcher.js';\nimport { Infielder } from './Infielder.js';\nimport { Outfielder } from './Outfielder.js';\nimport { Pitcher } from './Pitcher.js';\nimport { ReliefPitcher } from './ReliefPitcher.js';\nimport { PinchHitter } from './PinchHitter.js';\nimport { UtilityInfielder } from './UtilityInfielder.js';\nimport { UtilityOutfielder } from './UtilityOutfielder.js';\n/**\n * Team\n */\nexport class Team {\n    /**\n    * Constructor creates a team that stores players in an array.\n    * POSTCONDITION: * Parameters: baseball player name, position, array of batting strengths, baserunning speed,\n    *type of pitches thrown,(LF, right or switch hitter),( LF or right-handed pitcher)\n        *\n        * @param {string} team of baseball players\n        */\n    constructor(team){\n     \t/**\n\t\t* Baseball team(home or visitor).\n     \t* @type {string}\n     \t*/\n        this.team = team;\n        /**\n\t\t* Baseball array of players on team.\n     \t* @type {Player[]}\n     \t*/\n        this.arrOfPlayers = [];\n        /**\n        * Number of runs scored by the team\n        * @type {number}\n        */\n        this.runs = 0;\n\n\t    /**\n         * Batting lineup of the team\n\t     * @type {Player[]}\n\t     */\n\t    this.lineup = [];\n\n\t    /**\n         * The starting pitcher\n\t     * @type {Player}\n\t     */\n\t    this.pitcher = null;\n\n\n        this.createPlayers(team);\n    }\n\n    /**\n    * This function buildes an array of players receiving a parameter of home or visiting team.\n    **Sending parameters to Player subclasses.\n    *Parameters: baseball player name, position, array of batting strengths, baserunning speed, type of pitches thrown,\n    *(left, right or switch hitter),( left or right-handed pitcher)\n    * POSTCONDITION: No return.\n    */\n    createPlayers(team){\n        if(team === \"home\"){\n            this.arrOfPlayers[0]= new Catcher(\"Jielong GoLong\", \"C\", [\"co\", \"ch\"], false);\n            this.arrOfPlayers[1]= new Infielder(\"Jacob \\\"The Bull\\\" Parnell\", \"1B\", [\"fs\", \"fl\"], false);\n            this.arrOfPlayers[2]= new Infielder(\"Rocco Manzeene\", \"SS\", [\"ci\"], false);\n            this.arrOfPlayers[3]= new Infielder(\"Benjamin Franklin Pierce\", \"2B\", [\"fs\", \"fl\"], false);\n            this.arrOfPlayers[4]= new Infielder(\"Johnny Demp\", \"3B\", [\"ss\", \"sl\"], true);\n            this.arrOfPlayers[5]= new Outfielder(\"Ray Cobb\", \"LF\", [\"fs\", \"fi\"], false);\n            this.arrOfPlayers[6]= new Outfielder(\"Mike Truk\", \"CF\", [\"si\", \"ci\"], true);\n            this.arrOfPlayers[7]= new Outfielder(\"Micl Jrod\", \"RF\", [\"co\"], false);\n            //Bench\n            this.arrOfPlayers[8]= new Catcher(\"Micky Robinson\", \"C\", [\"si\"], false);\n            this.arrOfPlayers[9]= new UtilityInfielder(\"Evan Riley\", \"ui\", [\"fi\"], false);//position \"ui\" == Utility Infielder\n            this.arrOfPlayers[10]= new UtilityOutfielder(\"Duke Johnston\", \"uo\", [\"fs\"], true);//position \"uo\" == Utility Outfielder\n            this.arrOfPlayers[11]= new PinchHitter(\"Boom Mannski\", \"ph\", [\"si\",\"fi\",\"ci\"], false, \"lefty\");//position \"ph\" == Pinch Hitter; Bats Lefty\n            this.arrOfPlayers[12]= new PinchHitter(\"Jake Harrison\", \"ph\", [\"co\",\"ch\"], true, \"righty\");//position \"ph\" == Pinch Hitter; Bats righty\n            this.arrOfPlayers[13]= new PinchHitter(\"Stan Lee\", \"ph\", [\"sh\",\"ch\"], true, \"switch\");//position \"ph\" == Pinch Hitter; switch== Bats Lefty and Righty\n            //Pitchers\n            this.arrOfPlayers[14]= new Pitcher(\"Zack Greenlee\", \"RHP\", [], false, [\"ss\",\"sl\",\"fh\",\"fl\",\"fi\",\"co\",\"ch\",\"ci\"], \"rhp\");\n            this.arrOfPlayers[15]= new Pitcher(\"Miguel Rodriguez\", \"LHP\", [], false, [\"ss\",\"sh\",\"sl\",\"si\",\"fh\",\"fi\",\"co\",\"ch\"], \"lhp\");\n            this.arrOfPlayers[16]= new Pitcher(\"A. J. Heinrich\", \"RHP\", [], false, [\"ss\",\"sh\",\"si\",\"fs\",\"fh\",\"fl\",\"cl\",\"ci\"], \"rhp\");\n            this.arrOfPlayers[17]= new Pitcher(\"Hideo Matsui\", \"LHP\", [], false, [\"ss\",\"sh\",\"fs\",\"fh\",\"fl\",\"fi\",\"co\",\"cl\"], \"lhp\");\n            this.arrOfPlayers[18]= new ReliefPitcher(\"Clinton Dempsey\", \"RHP\", [], false, [\"sh\",\"sl\",\"si\",\"fs\",\"fh\",\"fl\",\"co\",\"ch\",\"ci\"], \"rhp\");\n\n            this.lineup[0] = this.arrOfPlayers[2];\n            this.lineup[1] = this.arrOfPlayers[3];\n            this.lineup[2] = this.arrOfPlayers[6];\n            this.lineup[3] = this.arrOfPlayers[1];\n            this.lineup[4] = this.arrOfPlayers[4];\n            this.lineup[5] = this.arrOfPlayers[0];\n            this.lineup[6] = this.arrOfPlayers[5];\n            this.lineup[7] = this.arrOfPlayers[7];\n            this.lineup[8] = this.arrOfPlayers[14];\n\n        }\n        else{\n            this.arrOfPlayers[0]= new Catcher(\"Alex Canseco\", \"C\", [\"fi\", \"ci\"], false);\n            this.arrOfPlayers[1]= new Infielder(\"Michael Bonds\", \"1B\", [\"sh\", \"si\"], false);\n            this.arrOfPlayers[2]= new Infielder(\"Terry Jeter\", \"SS\", [\"ss\"], true);\n            this.arrOfPlayers[3]= new Infielder(\"Larry Smerts\", \"2B\", [\"co\", \"ch\"], false);\n            this.arrOfPlayers[4]= new Infielder(\"Forest Whitmore\", \"3B\", [\"fs\"], false);\n            this.arrOfPlayers[5]= new Outfielder(\"Hank \\\"The Tank\\\" Aaron\", \"LF\", [\"si\"], false);\n            this.arrOfPlayers[6]= new Outfielder(\"Jackie Young\", \"CF\", [\"cl\", \"ci\"], false);\n            this.arrOfPlayers[7]= new Outfielder(\"Jason Purinton\", \"RF\", [\"ss\",\"si\"], true);\n            //Bench\n            this.arrOfPlayers[8]= new Catcher(\"Micky Robinson\", \"C\", [\"co\"], false);\n            this.arrOfPlayers[9]= new UtilityInfielder(\"Bryce Hatfield\", \"ui\", [\"ui\"], true);//position \"ui\" == Utility Infielder\n            this.arrOfPlayers[10]= new UtilityOutfielder(\"Fhog Allen\", \"uo\", [\"si\"], false);//position \"uo\" == Utility Outfielder\n            this.arrOfPlayers[11]= new PinchHitter(\"CiCi Sabathia\", \"ph\", [\"ss\",\"fs\",\"ci\"], false, \"lefty\");//position \"ph\" == Pinch Hitter; Bats Lefty\n            this.arrOfPlayers[12]= new PinchHitter(\"Roberto Cabrera\", \"ph\", [\"fh\",\"ch\"], true, \"righty\");//position \"ph\" == Pinch Hitter; Bats righty\n            this.arrOfPlayers[13]= new PinchHitter(\"Tommy Chapman\", \"ph\", [\"co\",\"ch\"], false, \"switch\");//position \"ph\" == Pinch Hitter; switch== Bats Lefty and Righty\n            //Pitchers\n            this.arrOfPlayers[14]= new Pitcher(\"Dizzy Lasorda\", \"LHP\", [], false, [\"ss\",\"fh\",\"fl\",\"fi\",\"co\",\"ch\",\"cl\",\"ci\"], \"lhp\");\n            this.arrOfPlayers[15]= new Pitcher(\"Babe Ruth\", \"RHP\", [], false, [\"sh\",\"si\",\"fs\",\"fl\",\"co\",\"ch\",\"cl\",\"ci\"], \"rhp\");\n            this.arrOfPlayers[16]= new Pitcher(\"Alcides Ortiz\", \"LHP\", [], false, [\"ss\",\"sh\",\"sl\",\"si\",\"fl\",\"fi\",\"ch\",\"ci\"], \"lhp\");\n            this.arrOfPlayers[17]= new Pitcher(\"Dennis Eckard\", \"RHP\", [], false, [\"ss\",\"sh\",\"sl\",\"si\",\"co\",\"ch\",\"cl\",\"ci\"], \"rhp\");\n            this.arrOfPlayers[18]= new ReliefPitcher(\"Leslie Koufax\", \"LHP\", [], false, [\"ss\",\"sh\",\"sl\",\"si\",\"fi\",\"co\",\"ch\",\"cl\",\"ci\"], \"lhp\");\n\n\t        this.lineup[0] = this.arrOfPlayers[5];\n\t        this.lineup[1] = this.arrOfPlayers[6];\n\t        this.lineup[2] = this.arrOfPlayers[4];\n\t        this.lineup[3] = this.arrOfPlayers[3];\n\t        this.lineup[4] = this.arrOfPlayers[0];\n\t        this.lineup[5] = this.arrOfPlayers[1];\n\t        this.lineup[6] = this.arrOfPlayers[7];\n\t        this.lineup[7] = this.arrOfPlayers[2];\n\t        this.lineup[8] = this.arrOfPlayers[14];\n        }\n\n        this.pitcher = this.arrOfPlayers[14];\n    }\n    /**\n    * This function returns a team of players in an array.\n    * POSTCONDITION: Returns array of team\n    */\n    getTeam(){\n        return this.lineup;\n    }\n\n    /**\n\t * Add runs to the team's score\n\t * @param {number} r The number of runs scored on the play\n\t */\n\tscore(r) {\n    \tthis.runs += r;\n    }\n}\n",
    "static": true,
    "longname": "/home/jacob/Programming/eecs448/big-league-baseball/src/Team.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 314,
    "kind": "class",
    "name": "Team",
    "memberof": "src/Team.js",
    "static": true,
    "longname": "src/Team.js~Team",
    "access": "public",
    "export": true,
    "importPath": "big-league-baseball/src/Team.js",
    "importStyle": "{Team}",
    "description": "Team",
    "lineNumber": 16,
    "interface": false
  },
  {
    "__docId__": 315,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/Team.js~Team",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Team.js~Team#constructor",
    "access": "public",
    "description": "Constructor creates a team that stores players in an array.\nPOSTCONDITION: * Parameters: baseball player name, position, array of batting strengths, baserunning speed,\ntype of pitches thrown,(LF, right or switch hitter),( LF or right-handed pitcher)",
    "lineNumber": 24,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "team",
        "description": "of baseball players"
      }
    ]
  },
  {
    "__docId__": 316,
    "kind": "member",
    "name": "team",
    "memberof": "src/Team.js~Team",
    "static": false,
    "longname": "src/Team.js~Team#team",
    "access": "public",
    "description": "Baseball team(home or visitor).",
    "lineNumber": 29,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 317,
    "kind": "member",
    "name": "arrOfPlayers",
    "memberof": "src/Team.js~Team",
    "static": false,
    "longname": "src/Team.js~Team#arrOfPlayers",
    "access": "public",
    "description": "Baseball array of players on team.",
    "lineNumber": 34,
    "type": {
      "nullable": null,
      "types": [
        "Player[]"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 318,
    "kind": "member",
    "name": "runs",
    "memberof": "src/Team.js~Team",
    "static": false,
    "longname": "src/Team.js~Team#runs",
    "access": "public",
    "description": "Number of runs scored by the team",
    "lineNumber": 39,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 319,
    "kind": "member",
    "name": "lineup",
    "memberof": "src/Team.js~Team",
    "static": false,
    "longname": "src/Team.js~Team#lineup",
    "access": "public",
    "description": "Batting lineup of the team",
    "lineNumber": 45,
    "type": {
      "nullable": null,
      "types": [
        "Player[]"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 320,
    "kind": "member",
    "name": "pitcher",
    "memberof": "src/Team.js~Team",
    "static": false,
    "longname": "src/Team.js~Team#pitcher",
    "access": "public",
    "description": "The starting pitcher",
    "lineNumber": 51,
    "type": {
      "nullable": null,
      "types": [
        "Player"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 321,
    "kind": "method",
    "name": "createPlayers",
    "memberof": "src/Team.js~Team",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Team.js~Team#createPlayers",
    "access": "public",
    "description": "This function buildes an array of players receiving a parameter of home or visiting team.\n*Sending parameters to Player subclasses.\nParameters: baseball player name, position, array of batting strengths, baserunning speed, type of pitches thrown,\n(left, right or switch hitter),( left or right-handed pitcher)\nPOSTCONDITION: No return.",
    "lineNumber": 64,
    "params": [
      {
        "name": "team",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 323,
    "kind": "method",
    "name": "getTeam",
    "memberof": "src/Team.js~Team",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Team.js~Team#getTeam",
    "access": "public",
    "description": "This function returns a team of players in an array.\nPOSTCONDITION: Returns array of team",
    "lineNumber": 139,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 324,
    "kind": "method",
    "name": "score",
    "memberof": "src/Team.js~Team",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Team.js~Team#score",
    "access": "public",
    "description": "Add runs to the team's score",
    "lineNumber": 147,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "r",
        "description": "The number of runs scored on the play"
      }
    ],
    "return": null
  },
  {
    "__docId__": 326,
    "kind": "file",
    "name": "src/UtilityInfielder.js",
    "content": "'use strict';\n/**\n *Child of Infielder class\n */\nimport { Infielder } from './Infielder.js';\n/**\n * UtilityInfielder class - stores information about name, position, batting strength, baserunning speed, whether they have been chosen on a team.\n */\nexport class UtilityInfielder extends Infielder {\n    /**\n    * Constructor creates a player that stores there name, position, hitting stats, baserunning speed and whether the player is on a team using functions inherited from the Infielder class.\n    * POSTCONDITION: name, position, hitting stats, baserunning speed all now have set values.\n        * @extends {InfielderClass}This class is a child of the Infielder class.\n        * @param {string} positionType The players position\n        */\n    constructor(name, position, batStrengths, baseSpeed){\n        /**\n        * @extends {InfielderClass}\n        */\n        super(name, position, batStrengths, baseSpeed);\n    }\n}\n",
    "static": true,
    "longname": "/home/jacob/Programming/eecs448/big-league-baseball/src/UtilityInfielder.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 327,
    "kind": "class",
    "name": "UtilityInfielder",
    "memberof": "src/UtilityInfielder.js",
    "static": true,
    "longname": "src/UtilityInfielder.js~UtilityInfielder",
    "access": "public",
    "export": true,
    "importPath": "big-league-baseball/src/UtilityInfielder.js",
    "importStyle": "{UtilityInfielder}",
    "description": "UtilityInfielder class - stores information about name, position, batting strength, baserunning speed, whether they have been chosen on a team.",
    "lineNumber": 9,
    "interface": false,
    "extends": [
      "src/Infielder.js~Infielder"
    ]
  },
  {
    "__docId__": 328,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/UtilityInfielder.js~UtilityInfielder",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/UtilityInfielder.js~UtilityInfielder#constructor",
    "access": "public",
    "description": "Constructor creates a player that stores there name, position, hitting stats, baserunning speed and whether the player is on a team using functions inherited from the Infielder class.\nPOSTCONDITION: name, position, hitting stats, baserunning speed all now have set values.",
    "lineNumber": 16,
    "unknown": [
      {
        "tagName": "@extends",
        "tagValue": "{InfielderClass}This class is a child of the Infielder class."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "positionType",
        "description": "The players position"
      }
    ]
  },
  {
    "__docId__": 329,
    "kind": "file",
    "name": "src/UtilityOutfielder.js",
    "content": "'use strict';\n/**\n *Child of Outfielder class\n */\nimport { Outfielder } from './Outfielder.js';\n/**\n * UtilityOutfielder class - stores information about name, position, batting strength, baserunning speed, whether they have been chosen on a team.\n */\nexport class UtilityOutfielder extends Outfielder {\n    /**\n    * Constructor creates a player that stores there name, position, hitting stats, baserunning speed and whether the player is on a team using functions inherited from the Outfielder class.\n    * POSTCONDITION: name, position, hitting stats, baserunning speed all now have set values.\n        * @extends {OutfielderClass}This class is a child of the Outfielder class.\n        * @param {string} positionType The players position\n        */\n    constructor(name, position, batStrengths, baseSpeed){\n        /**\n        * @extends {OutfielderClass}\n        */\n        super(name, position, batStrengths, baseSpeed);\n    }\n}\n",
    "static": true,
    "longname": "/home/jacob/Programming/eecs448/big-league-baseball/src/UtilityOutfielder.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 330,
    "kind": "class",
    "name": "UtilityOutfielder",
    "memberof": "src/UtilityOutfielder.js",
    "static": true,
    "longname": "src/UtilityOutfielder.js~UtilityOutfielder",
    "access": "public",
    "export": true,
    "importPath": "big-league-baseball/src/UtilityOutfielder.js",
    "importStyle": "{UtilityOutfielder}",
    "description": "UtilityOutfielder class - stores information about name, position, batting strength, baserunning speed, whether they have been chosen on a team.",
    "lineNumber": 9,
    "interface": false,
    "extends": [
      "src/Outfielder.js~Outfielder"
    ]
  },
  {
    "__docId__": 331,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/UtilityOutfielder.js~UtilityOutfielder",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/UtilityOutfielder.js~UtilityOutfielder#constructor",
    "access": "public",
    "description": "Constructor creates a player that stores there name, position, hitting stats, baserunning speed and whether the player is on a team using functions inherited from the Outfielder class.\nPOSTCONDITION: name, position, hitting stats, baserunning speed all now have set values.",
    "lineNumber": 16,
    "unknown": [
      {
        "tagName": "@extends",
        "tagValue": "{OutfielderClass}This class is a child of the Outfielder class."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "positionType",
        "description": "The players position"
      }
    ]
  },
  {
    "__docId__": 332,
    "kind": "file",
    "name": "src/main.js",
    "content": "import {Game} from './Game.js';\nimport {drawPitchHit, drawSwingOut, drawSwingStrike, drawTakeBall, batterSound, BackGroundOnload, SwitchSideOnload} from './Animation.js';\n\n\n\nlet game = null;\nvar side;\n/**\n * Initializes game object and the gui\n * @param location {string} The side the user is playing on - \"home\" or \"away\"\n */\nexport function startGame(location) {\n    game = new Game(location);\n    side = location;\n    BackGroundOnload(location);\n    document.getElementById('uPlayBall').play();\n    document.getElementById('c0').play();//Starts crowd noise\n    loopCrowdChatter();//Calls to set the interval of the crowd noise loop.\n    loopCrowdOrgan();//Call to loop clapping and organ music.\n    if (location === \"home\") {\n        displayPitchMenu();\n    }\n    else {\n        displayHitMenu();\n    }\n    drawScore();\n}\n\n\n/**\n*   This method render the index.html with canvas. The size of canvas will auto change with user web browser size.\n**/\nexport function initStartPage()\n{\n    var screenWidth = document.documentElement.clientWidth;\n    var screenHeight = document.documentElement.clientHeight;\n    var a = document.getElementById(\"startPage\");\n    a.width = (screenWidth * 0.99);\n    a.height = (screenHeight * 0.97);\n\n    var ctx = a.getContext(\"2d\");\n    var img = document.getElementById(\"startPic\");\n    ctx.drawImage(img,0,0, screenWidth, screenHeight);\n\n    var button = document.getElementById(\"startGame\");\n    button.style.left = String(screenWidth * 0.45) + \"px\";\n    button.style.top = String(screenHeight * 0.60) + \"px\";\n\n    var title = document.getElementById(\"title\");\n    var input = document.getElementById(\"userName\");\n    var describe = document.getElementById(\"doc\");\n    title.style.left = String(screenWidth * 0.32) + \"px\";\n    title.style.top = String(screenHeight * 0.25) + \"px\";\n    input.style.left = String(screenWidth * 0.42) + \"px\";\n    input.style.top = String(screenHeight * 0.45) + \"px\";\n    describe.style.left = String(screenWidth * 0.425) + \"px\";\n    describe.style.top = String(screenHeight * 0.40) + \"px\";\n}\n\n\n/**\n*   This method render the batter view html page with canvas and two table represent the action opinions and game log. The size canvas will auto change with user web browser.\n**/\nexport function initBatter()\n{\n    var screenWidth = document.documentElement.clientWidth;\n    var screenHeight = document.documentElement.clientHeight;\n    var a = document.getElementById(\"batterView\");\n    a.width = (screenWidth * 0.74);\n    a.height = (screenHeight * 0.73);\n\n    var ctx = a.getContext(\"2d\");\n    var img = document.getElementById(\"viewPic\");\n    //ctx.drawImage(img, 10, 10);\n\n    var gamelog = document.getElementById(\"gameLog\");\n    gamelog.scrollTop = gamelog.scrollHeight;\n    gamelog.style.height = (screenHeight * 0.725) + \"px\";\n\n    var action = document.getElementById(\"batterAction\");\n    action.style.height = (screenHeight * 0.245) + \"px\";\n\n    document.getElementById(\"gameLogTable\").innerHTML = document.getElementById(\"gameLogTable\").innerHTML + \"<tr><td>Match start!</td></tr>\" + \"<tr><td>Decide your batter action.</td></tr>\";\n\n    var PitcherPitchCanvas = document.getElementById(\"PitcherPitch\");\n    var BatterHitCanvas = document.getElementById(\"BatterHit\");\n    PitcherPitchCanvas.style.filter = \"opacity(0%)\";\n    PitcherPitchCanvas.style.WebkitFilter = \"opacity(0%)\";\n    BatterHitCanvas.style.filter = \"opacity(0%)\";\n    BatterHitCanvas.style.WebkitFilter = \"opacity(0%)\";\n\n    var BallCanvas = document.getElementById(\"Ball\");\n    BallCanvas.style.top = \"80px\";\n    BallCanvas.style.left = \"330px\";\n}\n\n/**\n*   This method render the team member select html page with canvas. The size canvas will auto change with user web browser.\n**/\nexport function initSelectTeam()\n{\n    var screenWidth = document.documentElement.clientWidth;\n    var screenHeight = document.documentElement.clientHeight;\n    var a = document.getElementById(\"SelectMember\");\n    a.width = (screenWidth * 0.99);\n    a.height = (screenHeight * 0.97);\n\n    var ctx = a.getContext(\"2d\");\n    ctx.font = \"30px Arial\";\n    ctx.fillText(\"Select your Team member!\",10,50);\n    //var img = document.getElementById(\"SelectPic\");\n    //ctx.drawImage(img,0,0, screenWidth, screenHeight);\n\n    var button = document.getElementById(\"startMatch\");\n    button.style.left = String(screenWidth * 0.45) + \"px\";\n    button.style.top = String(screenHeight * 0.8) + \"px\";\n}\n\n\n/**\n*   change the canvas to see what happend when runner on the base. Not surport in prototype.\n**/\nvar state = false; //After the javascript method complete, change the condition.\n\nexport function seeFiled()\n{\n    if(state == false)\n    {\n        var screenWidth = document.documentElement.clientWidth;\n        var screenHeight = document.documentElement.clientHeight;\n        var a = document.getElementById(\"filedView\");\n        var b = document.getElementById(\"batterView\");\n        b.style.display = \"none\";\n        a.style.display = \"block\";\n        a.width = (screenWidth * 0.74);\n        a.height = (screenHeight * 0.73);\n\n        var ctx = a.getContext(\"2d\");\n        var img = document.getElementById(\"filedPic\");\n        ctx.drawImage(img,10,10);\n\n        state = true;\n    }\n    else if(state == true)\n    {\n        var a = document.getElementById(\"filedView\");\n        var b = document.getElementById(\"batterView\");\n        a.style.display = \"none\";\n        b.style.display = \"block\";\n        state = false;\n    }\n\n}\n\n/**\n*   Button method. It will call when batter decide take action.\n**/\nexport function take() {\n    hitSelect(\"take\");\n}\n\n/**\n *   Button method. It will call when batter decide Slow Straight action.\n **/\nexport function ssHit() {\n    hitSelect(\"ss\");\n}\n\n/**\n *   Button method. It will call when pitcher decide Slow Straight action.\n **/\nexport function ssPit() {\n\tpitchSelect(\"ss\");\n}\n\n/**\n *   Button method. It will call when batter decide Slow Straight action.\n **/\nexport function shHit() {\n\thitSelect(\"sh\");\n}\n\n/**\n *   Button method. It will call when pitcher decide Slow Straight action.\n **/\nexport function shPit() {\n\tpitchSelect(\"sh\");\n}\n\n/**\n *   Button method. It will call when batter decide Slow Straight action.\n **/\nexport function slHit() {\n\thitSelect(\"sl\");\n}\n\n/**\n *   Button method. It will call when pitcher decide Slow Straight action.\n **/\nexport function slPit() {\n\tpitchSelect(\"sl\");\n}\n\n/**\n *   Button method. It will call when batter decide Slow Straight action.\n **/\nexport function siHit() {\n\thitSelect(\"si\");\n}\n\n/**\n *   Button method. It will call when pitcher decide Slow Straight action.\n **/\nexport function siPit() {\n\tpitchSelect(\"si\");\n}\n\n/**\n *   Button method. It will call when batter decide Slow Straight action.\n **/\nexport function fsHit() {\n\thitSelect(\"fs\");\n}\n\n/**\n *   Button method. It will call when pitcher decide Slow Straight action.\n **/\nexport function fsPit() {\n\tpitchSelect(\"fs\");\n}\n\n/**\n *   Button method. It will call when batter decide Slow Straight action.\n **/\nexport function fhHit() {\n\thitSelect(\"fh\");\n}\n\n/**\n *   Button method. It will call when pitcher decide Slow Straight action.\n **/\nexport function fhPit() {\n\tpitchSelect(\"fh\");\n}\n\n/**\n *   Button method. It will call when batter decide Slow Straight action.\n **/\nexport function flHit() {\n\thitSelect(\"fl\");\n}\n\n/**\n *   Button method. It will call when pitcher decide Slow Straight action.\n **/\nexport function flPit() {\n\tpitchSelect(\"fl\");\n}\n\n/**\n *   Button method. It will call when batter decide Slow Straight action.\n **/\nexport function fiHit() {\n\thitSelect(\"fi\");\n}\n\n/**\n *   Button method. It will call when pitcher decide Slow Straight action.\n **/\nexport function fiPit() {\n\tpitchSelect(\"fi\");\n}\n\n/**\n *   Button method. It will call when batter decide Slow Straight action.\n **/\nexport function coHit() {\n\thitSelect(\"co\");\n}\n\n/**\n *   Button method. It will call when pitcher decide Slow Straight action.\n **/\nexport function coPit() {\n\tpitchSelect(\"co\");\n}\n\n/**\n *   Button method. It will call when batter decide Slow Straight action.\n **/\nexport function chHit() {\n\thitSelect(\"ch\");\n}\n\n/**\n *   Button method. It will call when pitcher decide Slow Straight action.\n **/\nexport function chPit() {\n\tpitchSelect(\"ch\");\n}\n\n/**\n *   Button method. It will call when batter decide Slow Straight action.\n **/\nexport function clHit() {\n\thitSelect(\"cl\");\n}\n\n/**\n *   Button method. It will call when pitcher decide Slow Straight action.\n **/\nexport function clPit() {\n\tpitchSelect(\"cl\");\n}\n\n/**\n *   Button method. It will call when batter decide Slow Straight action.\n **/\nexport function ciHit() {\n\thitSelect(\"ci\");\n}\n\n/**\n *   Button method. It will call when pitcher decide Slow Straight action.\n **/\nexport function ciPit() {\n\tpitchSelect(\"ci\");\n}\n\n/**\n * Prints the status of the game on the right hand side of the interface\n */\nfunction drawScore() {\n\tlet innStr = \"\";\n\tlet innScoreID = \"\";\n\tif (game.inningSide) {\n\t\tinnStr = \"&#9660 \";\n\t\tinnScoreID = \"h\" + game.inning;\n\t}\n\telse {\n\t\tinnStr = \"&#9650 \";\n\t\tinnScoreID = \"a\" + game.inning;\n\n\t}\n\tinnStr = innStr + game.inning;\n\n\tlet countStr = game.balls + \"-\" + game.strikes + \"<br>\" + game.outs + \" Out\";\n\tif (game.inning <= 9) {\n\t\tlet innScore = Number(document.getElementById(innScoreID).innerHTML);\n\t\tinnScore = innScore + game.lastPitch.runsScored;\n\t\tdocument.getElementById(innScoreID).innerHTML = innScore;\n\t}\n\n\n    document.getElementById(\"score\").innerHTML = game.visitTeam.runs + \"-\" + game.homeTeam.runs;\n    document.getElementById(\"ar\").innerHTML = String(game.visitTeam.runs);\n\tdocument.getElementById(\"hr\").innerHTML = String(game.homeTeam.runs);\n    document.getElementById(\"inning\").innerHTML = innStr;\n    document.getElementById(\"count\").innerHTML = countStr;\n\n    if (game.first) {\n        document.getElementById(\"firstBase\").style.fillOpacity = \"255\";\n    }\n    else {\n\t    document.getElementById(\"firstBase\").style.fillOpacity = \"0\";\n    }\n\tif (game.second) {\n\t\tdocument.getElementById(\"secondBase\").style.fillOpacity = \"255\";\n\t}\n\telse {\n\t\tdocument.getElementById(\"secondBase\").style.fillOpacity = \"0\";\n\t}\n\tif (game.third) {\n\t\tdocument.getElementById(\"thirdBase\").style.fillOpacity = \"255\";\n\t}\n\telse {\n\t\tdocument.getElementById(\"thirdBase\").style.fillOpacity = \"0\";\n\t}\n\n\tlet curHitter = \"At Bat:<br>\";\n\tif (game.inningSide) {\n\t    curHitter = curHitter + game.homeTeam.lineup[game.homeAB].getPlayerName() + \"&nbsp;- \" + game.homeTeam.lineup[game.homeAB].getPosition() + \"<br>\";\n\t    curHitter = curHitter + \"Strength(s):\";\n\t\tif (game.homeTeam.lineup[game.homeAB].getBatStrengths() == []) {\n\t\t\tcurHitter = curHitter + \" None,\";\n\t\t}\n\t    for (let strength of game.homeTeam.lineup[game.homeAB].getBatStrengths()) {\n\t    \tswitch (strength) {\n\t\t\t    case \"ss\":\n\t\t\t\t    curHitter = curHitter + \" Slow Straight,\";\n\t\t\t\t    break;\n\t\t\t    case \"sh\":\n\t\t\t\t    curHitter = curHitter + \" Slow High,\";\n\t\t\t\t    break;\n\t\t\t    case \"sl\":\n\t\t\t\t    curHitter = curHitter + \" Slow Low,\";\n\t\t\t\t    break;\n\t\t\t    case \"si\":\n\t\t\t\t    curHitter = curHitter + \" Slow Inside,\";\n\t\t\t\t    break;\n\t\t\t    case \"fs\":\n\t\t\t\t    curHitter = curHitter + \" Fast Straight,\";\n\t\t\t\t    break;\n\t\t\t    case \"fh\":\n\t\t\t\t    curHitter = curHitter + \" Fast High,\";\n\t\t\t\t    break;\n\t\t\t    case \"fl\":\n\t\t\t\t    curHitter = curHitter + \" Fast Low,\";\n\t\t\t\t    break;\n\t\t\t    case \"fi\":\n\t\t\t\t    curHitter = curHitter + \" Fast Inside,\";\n\t\t\t\t    break;\n\t\t\t    case \"co\":\n\t\t\t\t    curHitter = curHitter + \" Curve Outside,\";\n\t\t\t\t    break;\n\t\t\t    case \"ch\":\n\t\t\t\t    curHitter = curHitter + \" Curve High,\";\n\t\t\t\t    break;\n\t\t\t    case \"cl\":\n\t\t\t\t    curHitter = curHitter + \" Curve Low,\";\n\t\t\t\t    break;\n\t\t\t    case \"ci\":\n\t\t\t\t    curHitter = curHitter + \" Curve Inside,\";\n\t\t\t\t    break;\n\t\t    }\n\t    }\n\t\tcurHitter = curHitter.slice(0, -1);\n    }\n\telse {\n\t\tcurHitter = curHitter + game.visitTeam.lineup[game.visitAB].getPlayerName() + \"&nbsp;- \" + game.visitTeam.lineup[game.visitAB].getPosition() + \"<br>\";\n\t\tcurHitter = curHitter + \"Strength(s):\";\n\t\tif (game.visitTeam.lineup[game.visitAB].getBatStrengths() == []) {\n\t\t\tcurHitter = curHitter + \" None,\";\n\t\t}\n\t\tfor (let strength of game.visitTeam.lineup[game.visitAB].getBatStrengths()) {\n\t\t\tswitch (strength) {\n\t\t\t\tcase \"ss\":\n\t\t\t\t\tcurHitter = curHitter + \" Slow Straight,\";\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"sh\":\n\t\t\t\t\tcurHitter = curHitter + \" Slow High,\";\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"sl\":\n\t\t\t\t\tcurHitter = curHitter + \" Slow Low,\";\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"si\":\n\t\t\t\t\tcurHitter = curHitter + \" Slow Inside,\";\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"fs\":\n\t\t\t\t\tcurHitter = curHitter + \" Fast Straight,\";\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"fh\":\n\t\t\t\t\tcurHitter = curHitter + \" Fast High,\";\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"fl\":\n\t\t\t\t\tcurHitter = curHitter + \" Fast Low,\";\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"fi\":\n\t\t\t\t\tcurHitter = curHitter + \" Fast Inside,\";\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"co\":\n\t\t\t\t\tcurHitter = curHitter + \" Curve Outside,\";\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"ch\":\n\t\t\t\t\tcurHitter = curHitter + \" Curve High,\";\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"cl\":\n\t\t\t\t\tcurHitter = curHitter + \" Curve Low,\";\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"ci\":\n\t\t\t\t\tcurHitter = curHitter + \" Curve Inside,\";\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tcurHitter = curHitter.slice(0, -1);\n\t}\n\tdocument.getElementById(\"currentHitter\").innerHTML = curHitter;\n\n\tlet curPitcher = \"Pitching:<br>\";\n\tif (game.inningSide) {\n\t\tcurPitcher = curPitcher + game.visitTeam.pitcher.getPlayerName() + \"&nbsp;- \" + game.visitTeam.pitcher.getPosition() + \"<br>\";\n\t}\n\telse {\n\t\tcurPitcher = curPitcher + game.homeTeam.pitcher.getPlayerName() + \"&nbsp;- \" + game.homeTeam.pitcher.getPosition() + \"<br>\";\n\t}\n\tdocument.getElementById(\"currentPitcher\").innerHTML = curPitcher;\n}\n\n/**\n * Displays the menu for selecting a hit on the bottom of the gui\n */\nfunction displayHitMenu() {\n    document.getElementById(\"gameLog\").style.display = \"none\";\n    document.getElementById(\"pitcherMenu\").style.display = \"none\";\n    document.getElementById(\"hitterMenu\").style.display = \"grid\";\n}\n\n/**\n * Displays the menu for selecting a pitch on the bottom of the gui\n */\nfunction displayPitchMenu() {\n\tdocument.getElementById(\"gameLog\").style.display = \"none\";\n\tdocument.getElementById(\"hitterMenu\").style.display = \"none\";\n\tdocument.getElementById(\"pitcherMenu\").style.display = \"grid\";\n}\n\n/**\n * Displays the game log on the bottom of the gui\n */\nfunction displayGameLog() {\n\tdocument.getElementById(\"hitterMenu\").style.display = \"none\";\n\tdocument.getElementById(\"pitcherMenu\").style.display = \"none\";\n\tdocument.getElementById(\"gameLog\").style.display = \"grid\";\n}\n\n/**\n * Run when the user, acting as the hitter, selects a hit they want to swing for and runs through the game logic and prints to the game log\n * @param action {string} The pitch that the hitter will swing for\n */\nfunction hitSelect(action) {\n    displayGameLog();\n    let message = \"Here's the pitch...\";\n    document.getElementById(\"gameLog\").innerHTML = message;\n    setTimeout(() => {\n        let roll = Math.floor((Math.random() * 12) + 1);\n        switch (roll) {\n            case 1:\n                game.ssPitch(action);\n                break;\n            case 2:\n                game.shPitch(action);\n\t            break;\n\t        case 3:\n\t\t        game.slPitch(action);\n\t\t        break;\n\t        case 4:\n\t\t        game.siPitch(action);\n\t\t        break;\n\t        case 5:\n\t\t        game.fsPitch(action);\n\t\t        break;\n\t        case 6:\n\t\t        game.fhPitch(action);\n\t\t        break;\n\t        case 7:\n\t\t        game.flPitch(action);\n\t\t        break;\n\t        case 8:\n\t\t        game.fiPitch(action);\n\t\t        break;\n\t        case 9:\n\t\t        game.coPitch(action);\n\t\t        break;\n\t        case 10:\n\t\t        game.chPitch(action);\n\t\t        break;\n\t        case 11:\n\t\t        game.clPitch(action);\n\t\t        break;\n\t        case 12:\n\t\t        game.ciPitch(action);\n\t\t        break;\n        }\n\t    DetermineAnimation();\n\t    message = log2Print(message);\n\n\t    document.getElementById(\"gameLog\").innerHTML = message;\n\t    setTimeout(() => {\n\t\t    message = log3Print(message);\n\t\t    drawScore();\n\t\t    document.getElementById(\"gameLog\").innerHTML = message;\n\t\t    setTimeout(() => {\n\t\t\t    if (game.gameOver) {\n\t\t\t\t    gameOver();\n\t\t\t    }\n\t\t        else if (game.lastPitch.newInning) {\n\t\t            displayPitchMenu();\n\t\t            if(side == \"home\")\n\t\t            {\n\t\t                side = \"away\";\n\t\t            }\n\t\t            else\n\t\t            {\n\t\t                side = \"home\";\n\t\t            }\n                }\n                else {\n\t\t            displayHitMenu();\n\t\t            if(side == \"home\")\n\t\t            {\n\t\t                side = \"away\";\n\t\t            }\n\t\t            else\n\t\t            {\n\t\t                side = \"home\";\n\t\t            }\n                }\n            }, 2000);\n\n        }, 2000);\n\n    }, 3000);\n\n}\n\n/**\n * Run when the user, acting as the pitch, selects a pitch they want to throw and runs through the game logic and prints to the game log\n * @param action {string} The pitch that the pitcher will pitch\n */\nfunction pitchSelect(action) {\n\tdisplayGameLog();\n\tlet message = \"Here's the pitch...\";\n\tdocument.getElementById(\"gameLog\").innerHTML = message;\n\tsetTimeout(() => {\n\t    const actions = [\"ss\", \"sh\", \"sl\", \"si\", \"take\", \"fs\", \"fh\", \"fl\", \"fi\", \"take\", \"co\", \"ch\", \"cl\", \"ci\", \"take\"];\n\t\tlet roll = Math.floor((Math.random() * 13));\n\t\tswitch (action) {\n\t\t\tcase \"ss\":\n\t\t\t\tgame.ssPitch(actions[roll]);\n\t\t\t\tbreak;\n\t\t\tcase \"sh\":\n\t\t\t\tgame.shPitch(actions[roll]);\n\t\t\t\tbreak;\n\t\t\tcase \"sl\":\n\t\t\t\tgame.slPitch(actions[roll]);\n\t\t\t\tbreak;\n\t\t\tcase \"si\":\n\t\t\t\tgame.siPitch(actions[roll]);\n\t\t\t\tbreak;\n\t\t\tcase \"fs\":\n\t\t\t\tgame.fsPitch(actions[roll]);\n\t\t\t\tbreak;\n\t\t\tcase \"fh\":\n\t\t\t\tgame.fhPitch(actions[roll]);\n\t\t\t\tbreak;\n\t\t\tcase \"fl\":\n\t\t\t\tgame.flPitch(actions[roll]);\n\t\t\t\tbreak;\n\t\t\tcase \"fi\":\n\t\t\t\tgame.fiPitch(actions[roll]);\n\t\t\t\tbreak;\n\t\t\tcase \"co\":\n\t\t\t\tgame.coPitch(actions[roll]);\n\t\t\t\tbreak;\n\t\t\tcase \"ch\":\n\t\t\t\tgame.chPitch(actions[roll]);\n\t\t\t\tbreak;\n\t\t\tcase \"cl\":\n\t\t\t\tgame.clPitch(actions[roll]);\n\t\t\t\tbreak;\n\t\t\tcase \"ci\":\n\t\t\t\tgame.ciPitch(actions[roll]);\n\t\t\t\tbreak;\n\t\t}\n        DetermineAnimation();\n\t\tmessage = log2Print(message);\n\n\t\tdocument.getElementById(\"gameLog\").innerHTML = message;\n\t\tsetTimeout(() => {\n\t\t\tmessage = log3Print(message);\n\t\t\tdrawScore();\n\t\t\tdocument.getElementById(\"gameLog\").innerHTML = message;\n\t\t\tsetTimeout(() => {\n\t\t\t\tif (game.gameOver) {\n\t\t\t\t\tgameOver();\n\t\t\t\t}\n\t\t\t\telse if (game.lastPitch.newInning) {\n\t\t\t\t    displayHitMenu();\n\t\t\t\t    if(side == \"home\")\n\t\t\t\t    {\n\t\t\t\t        side = \"away\";\n\t\t\t\t    }\n\t\t\t\t    else\n\t\t\t\t    {\n\t\t\t\t        side = \"home\";\n\t\t\t\t    }\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t    displayPitchMenu();\n\t\t\t\t    if(side == \"home\")\n\t\t\t\t    {\n\t\t\t\t        side = \"away\";\n\t\t\t\t    }\n\t\t\t\t    else\n\t\t\t\t    {\n\t\t\t\t        side = \"home\";\n\t\t\t\t    }\n\t\t\t\t}\n\t\t\t}, 2000);\n\n\t\t}, 2000);\n\n\t}, 3000);\n}\n\n\nfunction DetermineAnimation()\n{\n        if( game.lastPitch.play == \"homeRun\" ||  game.lastPitch.play == \"triple\"\n            ||  game.lastPitch.play == \"doubleClear\" ||  game.lastPitch.play == \"double\"\n            ||  game.lastPitch.play == \"single\" ||  game.lastPitch.play == \"singleRISP\"\n            ||  game.lastPitch.play == \"singleAdvance\" ||  game.lastPitch.play == \"error\"\n            ||  game.lastPitch.play == \"flyoutAdv\" ||  game.lastPitch.play == \"flyoutNoAdv1st\"\n            ||  game.lastPitch.play == \"groundout\" ||  game.lastPitch.play == \"groundoutAdvIfForced\"\n            ||  game.lastPitch.play == \"groundoutDoublePlay\" ||  game.lastPitch.play == \"errorSecond\")//groundoutAdvIfForced question\n        {\n            drawPitchHit(game);\n        }\n        if( game.lastPitch.play == \"foulout\"\n            ||  game.lastPitch.play == \"flyout\"\n            ||  game.lastPitch.play == \"triplePlay\"\n            ||  game.lastPitch.play == \"fieldersChoice\"\n            ||  game.lastPitch.play == \"lineoutDoublePlay\")\n        {\n            drawSwingOut(game);\n        }\n\n        if( game.lastPitch.play == \"foul\"\n            ||  game.lastPitch.play == \"calledStrike\"\n            || game.lastPitch.play == \"swingingStrike\")\n        {\n            drawSwingStrike(game);\n        }\n        if( game.lastPitch.play == \"walk\")\n        {\n            drawTakeBall(game);//take animation with one base;\n        }\n        if( game.lastPitch.play == \"ball\"\n            ||  game.lastPitch.play == \"strikeoutLooking\")\n        {\n            drawTakeBall(game);\n        }\n        batterSound();\n}\n\nfunction gameOver() {\n\tdisplayGameLog();\n\tlet message = \"That's your ballgame!<br>\";\n\tdocument.getElementById(\"gameLog\").innerHTML = message;\n\tsetTimeout(() => {\n\t\tif (game.homeTeam.runs > game.visitTeam.runs) {\n\t\t\tmessage = message + \"The Home team wins by a final score of \" + game.homeTeam.runs + \" to \" + game.visitTeam.runs + \"!<br>\";\n\t\t}\n\t\telse {\n\t\t\tmessage = message + \"The Away team wins by a final score of \" + game.visitTeam.runs + \" to \" + game.homeTeam.runs + \"!<br>\";\n\t\t}\n\t\tmessage = message + \"Thank you for playing Big League Baseball!<br>You can... put it on the boooooaaaaard YES!\";\n\t\tdocument.getElementById(\"gameLog\").innerHTML = message;\n\t}, 2000);\n}\n\nvar crowdOrgan= true;\nfunction loopCrowdOrgan()//Loops the organ music and crowd clapping. At this point called in PitcherWaitOnload()\n{\n    if(crowdOrgan)\n    {\n        setInterval(crowdFx, 80000);//exact time length is 1686421ms\n        crowdOrgan= false;\n    }\n}\nvar temp;\nfunction crowdFx()\n{\n    var time =Math.floor(Math.random() * 5);\n    while(time===temp)\n    {\n        var time =Math.floor(Math.random() * 5);\n    }\n    temp= time;\n    if(time== 0)\n    {\n        document.getElementById('c1').play();\n        clearInterval(crowdFx);//exact time length is 1686421ms\n    }\n    if(time== 1)\n    {\n        document.getElementById('o1').play();\n    }\n    if(time== 2)\n    {\n        document.getElementById('o2').play();\n    }\n    if(time== 3)\n    {\n        document.getElementById('c2').play();\n    }\n    if(time== 4)\n    {\n        document.getElementById('o4').play();\n    }\n\n    if(time== 7)\n    {\n        document.getElementById('7th').play();\n    }\n}\n\n\nvar fxCount= true;\nfunction loopCrowdChatter()//Loops the crowd noise. At this point called in PitcherWaitOnload()\n{\n    if(fxCount)\n    {\n        setInterval(crowdChatter, .0000001);//exact time length is 1686421ms\n        fxCount= false;\n    }\n    function crowdChatter()\n    {\n        document.getElementById('c0').play();\n    }\n}\n\n/**\n * Function to print the second line of the game log for both pitching and hitting\n * @param message {string} The string being added to\n * @return {string} The modified string\n */\nfunction log2Print(message) {\n\tswitch (game.lastPitch.play) {\n\t\tcase \"homeRun\":\n\t\t\tmessage = message + \"<br>Swung on, a high fly ball, get up, get outta here, gone! It's a home run!\";\n\t\t\tbreak;\n\t\tcase \"triple\":\n\t\t\tmessage = message + \"<br>Swung on, lined into the gap in the outfield! That's good for a triple!\";\n\t\t\tbreak;\n\t\tcase \"double\":\n\t\tcase \"doubleClear\":\n\t\t\tmessage = message + \"<br>Swung on, hit hard into the outfield, and the batter will end up at second base!\";\n\t\t\tbreak;\n\t\tcase \"single\":\n\t\tcase \"singleRISP\":\n\t\tcase \"singleAdvance\":\n\t\t\tmessage = message + \"<br>Swung on, and it's a base hit. The batter will end up at first.\";\n\t\t\tbreak;\n\t\tcase \"error\":\n\t\t\tmessage = message + \"<br>Swung on, and misplayed by the defense, the batter will reach on an error!\";\n\t\t\tbreak;\n\t\tcase \"errorSecond\":\n\t\t\tmessage = message + \"<br>Swung on, hit toward the infield, but they overthrow to first! The batter will reach second on an error!\";\n\t\t\tbreak;\n\t\tcase \"foulout\":\n\t\t\tmessage = message + \"<br>Popped up into foul territory, the fielder gets under it and makes the out.\";\n\t\t\tbreak;\n\t\tcase \"flyout\":\n\t\t\tmessage = message + \"<br>Swung on, and it's a pop fly that the defense takes care of easily.\";\n\t\t\tbreak;\n\t\tcase \"flyoutAdv\":\n\t\tcase \"flyoutNoAdv1st\":\n\t\t\tmessage = message + \"<br>Swung on, and it's a pop fly that the outfielder has to hurry to get to, but he makes the play for the out.\";\n\t\t\tbreak;\n\t\tcase \"groundout\":\n\t\tcase \"groundoutAdvIfForced\":\n\t\tcase \"groundoutDoublePlay\":\n\t\tcase \"fieldersChoice\":\n\t\t\tmessage = message + \"<br>Swung on, ground ball on the infield, and the infielders take care of it.\";\n\t\t\tbreak;\n\t\tcase \"lineoutDoublePlay\":\n\t\tcase \"triplePlay\":\n\t\t\tmessage = message + \"<br>Swung on, lined right at the infield defense, who makes a nice play to retire the batter.\";\n\t\t\tbreak;\n\t\tcase \"strikeoutSwinging\":\n\t\t\tmessage = message + \"<br>Swing and a miss, got him to strikeout!\";\n\t\t\tbreak;\n\t\tcase \"strikeoutLooking\":\n\t\t\tmessage = message + \"<br>Got him looking! He was taking, but the pitcher threw him a strike.\";\n\t\t\tbreak;\n\t\tcase \"swingingStrike\":\n\t\t\tmessage = message + \"<br>Swing and a miss, that's a strike.\";\n\t\t\tbreak;\n\t\tcase \"calledStrike\":\n\t\t\tmessage = message + \"<br>That one's taken for a strike.\";\n\t\t\tbreak;\n\t\tcase \"walk\":\n\t\t\tmessage = message + \"<br>That's ball four, and the batter is on with a walk!\";\n\t\t\tbreak;\n\t\tcase \"ball\":\n\t\t\tmessage = message + \"<br>That one's out of the zone, taken for a ball.\";\n\t\t\tbreak;\n\t\tcase \"foul\":\n\t\t\tmessage = message + \"<br>Swung on, but fouled out of play.\";\n\t\t\tbreak;\n\t}\n\treturn message;\n}\n\n/**\n * Function to print the third line of the game log for both pitching and hitting\n * @param message {string} The string being added to\n * @return {string} The modified string\n */\nfunction log3Print(message) {\n\tif (game.lastPitch.newInning) {\n\t\tmessage = message + \"<br>That's it for the inning.\";\n\t}\n\telse if (game.lastPitch.newAB) {\n\t\tif (game.first && game.second && game.third) {\n\t\t\tmessage = message + \"<br>The bases are now loaded with \" + game.outs + \" outs.\";\n\t\t}\n\t\telse if (game.first && game.third) {\n\t\t\tmessage = message + \"<br>Runners are now at the corners with \" + game.outs + \" outs.\";\n\t\t}\n\t\telse if (game.first && game.second) {\n\t\t\tmessage = message + \"<br>Runners are now at first and second with \" + game.outs + \" outs.\";\n\t\t}\n\t\telse if (game.second && game.third) {\n\t\t\tmessage = message + \"<br>Runners are now at second and third with \" + game.outs + \" outs.\";\n\t\t}\n\t\telse if (game.first) {\n\t\t\tmessage = message + \"<br>Man on first now with \" + game.outs + \" outs.\";\n\t\t}\n\t\telse if (game.second) {\n\t\t\tmessage = message + \"<br>Man on second now with \" + game.outs + \" outs.\";\n\t\t}\n\t\telse if (game.third) {\n\t\t\tmessage = message + \"<br>Man on third now with \" + game.outs + \" outs.\";\n\t\t}\n\t\telse {\n\t\t\tmessage = message + \"<br>The bases are now empty with \" + game.outs + \" outs.\";\n\t\t}\n\t}\n\telse {\n\t\tmessage = message + \"<br>\" + game.balls + \" balls and \" + game.strikes + \" strikes now.\";\n\t}\n\treturn message;\n}\n",
    "static": true,
    "longname": "/home/jacob/Programming/eecs448/big-league-baseball/src/main.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 333,
    "kind": "variable",
    "name": "game",
    "memberof": "src/main.js",
    "static": true,
    "longname": "src/main.js~game",
    "access": "public",
    "export": false,
    "importPath": "big-league-baseball/src/main.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 334,
    "kind": "function",
    "name": "startGame",
    "memberof": "src/main.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/main.js~startGame",
    "access": "public",
    "export": true,
    "importPath": "big-league-baseball/src/main.js",
    "importStyle": "{startGame}",
    "description": "Initializes game object and the gui",
    "lineNumber": 12,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "location",
        "description": "{string} The side the user is playing on - \"home\" or \"away\""
      }
    ],
    "return": null
  },
  {
    "__docId__": 335,
    "kind": "function",
    "name": "initStartPage",
    "memberof": "src/main.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/main.js~initStartPage",
    "access": "public",
    "export": true,
    "importPath": "big-league-baseball/src/main.js",
    "importStyle": "{initStartPage}",
    "description": "  This method render the index.html with canvas. The size of canvas will auto change with user web browser size.",
    "lineNumber": 33,
    "params": [],
    "return": null
  },
  {
    "__docId__": 336,
    "kind": "function",
    "name": "initBatter",
    "memberof": "src/main.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/main.js~initBatter",
    "access": "public",
    "export": true,
    "importPath": "big-league-baseball/src/main.js",
    "importStyle": "{initBatter}",
    "description": "  This method render the batter view html page with canvas and two table represent the action opinions and game log. The size canvas will auto change with user web browser.",
    "lineNumber": 64,
    "params": [],
    "return": null
  },
  {
    "__docId__": 337,
    "kind": "function",
    "name": "initSelectTeam",
    "memberof": "src/main.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/main.js~initSelectTeam",
    "access": "public",
    "export": true,
    "importPath": "big-league-baseball/src/main.js",
    "importStyle": "{initSelectTeam}",
    "description": "  This method render the team member select html page with canvas. The size canvas will auto change with user web browser.",
    "lineNumber": 100,
    "params": [],
    "return": null
  },
  {
    "__docId__": 338,
    "kind": "variable",
    "name": "state",
    "memberof": "src/main.js",
    "static": true,
    "longname": "src/main.js~state",
    "access": "public",
    "export": false,
    "importPath": "big-league-baseball/src/main.js",
    "importStyle": null,
    "description": "  change the canvas to see what happend when runner on the base. Not surport in prototype.",
    "lineNumber": 123,
    "type": {
      "types": [
        "boolean"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 339,
    "kind": "function",
    "name": "seeFiled",
    "memberof": "src/main.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/main.js~seeFiled",
    "access": "public",
    "export": true,
    "importPath": "big-league-baseball/src/main.js",
    "importStyle": "{seeFiled}",
    "description": null,
    "lineNumber": 125,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 340,
    "kind": "function",
    "name": "take",
    "memberof": "src/main.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/main.js~take",
    "access": "public",
    "export": true,
    "importPath": "big-league-baseball/src/main.js",
    "importStyle": "{take}",
    "description": "  Button method. It will call when batter decide take action.",
    "lineNumber": 158,
    "params": [],
    "return": null
  },
  {
    "__docId__": 341,
    "kind": "function",
    "name": "ssHit",
    "memberof": "src/main.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/main.js~ssHit",
    "access": "public",
    "export": true,
    "importPath": "big-league-baseball/src/main.js",
    "importStyle": "{ssHit}",
    "description": "  Button method. It will call when batter decide Slow Straight action.",
    "lineNumber": 165,
    "params": [],
    "return": null
  },
  {
    "__docId__": 342,
    "kind": "function",
    "name": "ssPit",
    "memberof": "src/main.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/main.js~ssPit",
    "access": "public",
    "export": true,
    "importPath": "big-league-baseball/src/main.js",
    "importStyle": "{ssPit}",
    "description": "  Button method. It will call when pitcher decide Slow Straight action.",
    "lineNumber": 172,
    "params": [],
    "return": null
  },
  {
    "__docId__": 343,
    "kind": "function",
    "name": "shHit",
    "memberof": "src/main.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/main.js~shHit",
    "access": "public",
    "export": true,
    "importPath": "big-league-baseball/src/main.js",
    "importStyle": "{shHit}",
    "description": "  Button method. It will call when batter decide Slow Straight action.",
    "lineNumber": 179,
    "params": [],
    "return": null
  },
  {
    "__docId__": 344,
    "kind": "function",
    "name": "shPit",
    "memberof": "src/main.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/main.js~shPit",
    "access": "public",
    "export": true,
    "importPath": "big-league-baseball/src/main.js",
    "importStyle": "{shPit}",
    "description": "  Button method. It will call when pitcher decide Slow Straight action.",
    "lineNumber": 186,
    "params": [],
    "return": null
  },
  {
    "__docId__": 345,
    "kind": "function",
    "name": "slHit",
    "memberof": "src/main.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/main.js~slHit",
    "access": "public",
    "export": true,
    "importPath": "big-league-baseball/src/main.js",
    "importStyle": "{slHit}",
    "description": "  Button method. It will call when batter decide Slow Straight action.",
    "lineNumber": 193,
    "params": [],
    "return": null
  },
  {
    "__docId__": 346,
    "kind": "function",
    "name": "slPit",
    "memberof": "src/main.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/main.js~slPit",
    "access": "public",
    "export": true,
    "importPath": "big-league-baseball/src/main.js",
    "importStyle": "{slPit}",
    "description": "  Button method. It will call when pitcher decide Slow Straight action.",
    "lineNumber": 200,
    "params": [],
    "return": null
  },
  {
    "__docId__": 347,
    "kind": "function",
    "name": "siHit",
    "memberof": "src/main.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/main.js~siHit",
    "access": "public",
    "export": true,
    "importPath": "big-league-baseball/src/main.js",
    "importStyle": "{siHit}",
    "description": "  Button method. It will call when batter decide Slow Straight action.",
    "lineNumber": 207,
    "params": [],
    "return": null
  },
  {
    "__docId__": 348,
    "kind": "function",
    "name": "siPit",
    "memberof": "src/main.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/main.js~siPit",
    "access": "public",
    "export": true,
    "importPath": "big-league-baseball/src/main.js",
    "importStyle": "{siPit}",
    "description": "  Button method. It will call when pitcher decide Slow Straight action.",
    "lineNumber": 214,
    "params": [],
    "return": null
  },
  {
    "__docId__": 349,
    "kind": "function",
    "name": "fsHit",
    "memberof": "src/main.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/main.js~fsHit",
    "access": "public",
    "export": true,
    "importPath": "big-league-baseball/src/main.js",
    "importStyle": "{fsHit}",
    "description": "  Button method. It will call when batter decide Slow Straight action.",
    "lineNumber": 221,
    "params": [],
    "return": null
  },
  {
    "__docId__": 350,
    "kind": "function",
    "name": "fsPit",
    "memberof": "src/main.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/main.js~fsPit",
    "access": "public",
    "export": true,
    "importPath": "big-league-baseball/src/main.js",
    "importStyle": "{fsPit}",
    "description": "  Button method. It will call when pitcher decide Slow Straight action.",
    "lineNumber": 228,
    "params": [],
    "return": null
  },
  {
    "__docId__": 351,
    "kind": "function",
    "name": "fhHit",
    "memberof": "src/main.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/main.js~fhHit",
    "access": "public",
    "export": true,
    "importPath": "big-league-baseball/src/main.js",
    "importStyle": "{fhHit}",
    "description": "  Button method. It will call when batter decide Slow Straight action.",
    "lineNumber": 235,
    "params": [],
    "return": null
  },
  {
    "__docId__": 352,
    "kind": "function",
    "name": "fhPit",
    "memberof": "src/main.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/main.js~fhPit",
    "access": "public",
    "export": true,
    "importPath": "big-league-baseball/src/main.js",
    "importStyle": "{fhPit}",
    "description": "  Button method. It will call when pitcher decide Slow Straight action.",
    "lineNumber": 242,
    "params": [],
    "return": null
  },
  {
    "__docId__": 353,
    "kind": "function",
    "name": "flHit",
    "memberof": "src/main.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/main.js~flHit",
    "access": "public",
    "export": true,
    "importPath": "big-league-baseball/src/main.js",
    "importStyle": "{flHit}",
    "description": "  Button method. It will call when batter decide Slow Straight action.",
    "lineNumber": 249,
    "params": [],
    "return": null
  },
  {
    "__docId__": 354,
    "kind": "function",
    "name": "flPit",
    "memberof": "src/main.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/main.js~flPit",
    "access": "public",
    "export": true,
    "importPath": "big-league-baseball/src/main.js",
    "importStyle": "{flPit}",
    "description": "  Button method. It will call when pitcher decide Slow Straight action.",
    "lineNumber": 256,
    "params": [],
    "return": null
  },
  {
    "__docId__": 355,
    "kind": "function",
    "name": "fiHit",
    "memberof": "src/main.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/main.js~fiHit",
    "access": "public",
    "export": true,
    "importPath": "big-league-baseball/src/main.js",
    "importStyle": "{fiHit}",
    "description": "  Button method. It will call when batter decide Slow Straight action.",
    "lineNumber": 263,
    "params": [],
    "return": null
  },
  {
    "__docId__": 356,
    "kind": "function",
    "name": "fiPit",
    "memberof": "src/main.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/main.js~fiPit",
    "access": "public",
    "export": true,
    "importPath": "big-league-baseball/src/main.js",
    "importStyle": "{fiPit}",
    "description": "  Button method. It will call when pitcher decide Slow Straight action.",
    "lineNumber": 270,
    "params": [],
    "return": null
  },
  {
    "__docId__": 357,
    "kind": "function",
    "name": "coHit",
    "memberof": "src/main.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/main.js~coHit",
    "access": "public",
    "export": true,
    "importPath": "big-league-baseball/src/main.js",
    "importStyle": "{coHit}",
    "description": "  Button method. It will call when batter decide Slow Straight action.",
    "lineNumber": 277,
    "params": [],
    "return": null
  },
  {
    "__docId__": 358,
    "kind": "function",
    "name": "coPit",
    "memberof": "src/main.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/main.js~coPit",
    "access": "public",
    "export": true,
    "importPath": "big-league-baseball/src/main.js",
    "importStyle": "{coPit}",
    "description": "  Button method. It will call when pitcher decide Slow Straight action.",
    "lineNumber": 284,
    "params": [],
    "return": null
  },
  {
    "__docId__": 359,
    "kind": "function",
    "name": "chHit",
    "memberof": "src/main.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/main.js~chHit",
    "access": "public",
    "export": true,
    "importPath": "big-league-baseball/src/main.js",
    "importStyle": "{chHit}",
    "description": "  Button method. It will call when batter decide Slow Straight action.",
    "lineNumber": 291,
    "params": [],
    "return": null
  },
  {
    "__docId__": 360,
    "kind": "function",
    "name": "chPit",
    "memberof": "src/main.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/main.js~chPit",
    "access": "public",
    "export": true,
    "importPath": "big-league-baseball/src/main.js",
    "importStyle": "{chPit}",
    "description": "  Button method. It will call when pitcher decide Slow Straight action.",
    "lineNumber": 298,
    "params": [],
    "return": null
  },
  {
    "__docId__": 361,
    "kind": "function",
    "name": "clHit",
    "memberof": "src/main.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/main.js~clHit",
    "access": "public",
    "export": true,
    "importPath": "big-league-baseball/src/main.js",
    "importStyle": "{clHit}",
    "description": "  Button method. It will call when batter decide Slow Straight action.",
    "lineNumber": 305,
    "params": [],
    "return": null
  },
  {
    "__docId__": 362,
    "kind": "function",
    "name": "clPit",
    "memberof": "src/main.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/main.js~clPit",
    "access": "public",
    "export": true,
    "importPath": "big-league-baseball/src/main.js",
    "importStyle": "{clPit}",
    "description": "  Button method. It will call when pitcher decide Slow Straight action.",
    "lineNumber": 312,
    "params": [],
    "return": null
  },
  {
    "__docId__": 363,
    "kind": "function",
    "name": "ciHit",
    "memberof": "src/main.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/main.js~ciHit",
    "access": "public",
    "export": true,
    "importPath": "big-league-baseball/src/main.js",
    "importStyle": "{ciHit}",
    "description": "  Button method. It will call when batter decide Slow Straight action.",
    "lineNumber": 319,
    "params": [],
    "return": null
  },
  {
    "__docId__": 364,
    "kind": "function",
    "name": "ciPit",
    "memberof": "src/main.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/main.js~ciPit",
    "access": "public",
    "export": true,
    "importPath": "big-league-baseball/src/main.js",
    "importStyle": "{ciPit}",
    "description": "  Button method. It will call when pitcher decide Slow Straight action.",
    "lineNumber": 326,
    "params": [],
    "return": null
  },
  {
    "__docId__": 365,
    "kind": "function",
    "name": "drawScore",
    "memberof": "src/main.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/main.js~drawScore",
    "access": "public",
    "export": false,
    "importPath": "big-league-baseball/src/main.js",
    "importStyle": null,
    "description": "Prints the status of the game on the right hand side of the interface",
    "lineNumber": 333,
    "params": [],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 366,
    "kind": "function",
    "name": "displayHitMenu",
    "memberof": "src/main.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/main.js~displayHitMenu",
    "access": "public",
    "export": false,
    "importPath": "big-league-baseball/src/main.js",
    "importStyle": null,
    "description": "Displays the menu for selecting a hit on the bottom of the gui",
    "lineNumber": 492,
    "params": [],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 367,
    "kind": "function",
    "name": "displayPitchMenu",
    "memberof": "src/main.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/main.js~displayPitchMenu",
    "access": "public",
    "export": false,
    "importPath": "big-league-baseball/src/main.js",
    "importStyle": null,
    "description": "Displays the menu for selecting a pitch on the bottom of the gui",
    "lineNumber": 501,
    "params": [],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 368,
    "kind": "function",
    "name": "displayGameLog",
    "memberof": "src/main.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/main.js~displayGameLog",
    "access": "public",
    "export": false,
    "importPath": "big-league-baseball/src/main.js",
    "importStyle": null,
    "description": "Displays the game log on the bottom of the gui",
    "lineNumber": 510,
    "params": [],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 369,
    "kind": "function",
    "name": "hitSelect",
    "memberof": "src/main.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/main.js~hitSelect",
    "access": "public",
    "export": false,
    "importPath": "big-league-baseball/src/main.js",
    "importStyle": null,
    "description": "Run when the user, acting as the hitter, selects a hit they want to swing for and runs through the game logic and prints to the game log",
    "lineNumber": 520,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "action",
        "description": "{string} The pitch that the hitter will swing for"
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 370,
    "kind": "function",
    "name": "pitchSelect",
    "memberof": "src/main.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/main.js~pitchSelect",
    "access": "public",
    "export": false,
    "importPath": "big-league-baseball/src/main.js",
    "importStyle": null,
    "description": "Run when the user, acting as the pitch, selects a pitch they want to throw and runs through the game logic and prints to the game log",
    "lineNumber": 610,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "action",
        "description": "{string} The pitch that the pitcher will pitch"
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 371,
    "kind": "function",
    "name": "DetermineAnimation",
    "memberof": "src/main.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/main.js~DetermineAnimation",
    "access": "public",
    "export": false,
    "importPath": "big-league-baseball/src/main.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 697,
    "undocument": true,
    "params": [],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 372,
    "kind": "function",
    "name": "gameOver",
    "memberof": "src/main.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/main.js~gameOver",
    "access": "public",
    "export": false,
    "importPath": "big-league-baseball/src/main.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 736,
    "undocument": true,
    "params": [],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 373,
    "kind": "variable",
    "name": "crowdOrgan",
    "memberof": "src/main.js",
    "static": true,
    "longname": "src/main.js~crowdOrgan",
    "access": "public",
    "export": false,
    "importPath": "big-league-baseball/src/main.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 752,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 374,
    "kind": "function",
    "name": "loopCrowdOrgan",
    "memberof": "src/main.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/main.js~loopCrowdOrgan",
    "access": "public",
    "export": false,
    "importPath": "big-league-baseball/src/main.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 753,
    "undocument": true,
    "params": [],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 375,
    "kind": "function",
    "name": "crowdFx",
    "memberof": "src/main.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/main.js~crowdFx",
    "access": "public",
    "export": false,
    "importPath": "big-league-baseball/src/main.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 762,
    "undocument": true,
    "params": [],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 376,
    "kind": "variable",
    "name": "fxCount",
    "memberof": "src/main.js",
    "static": true,
    "longname": "src/main.js~fxCount",
    "access": "public",
    "export": false,
    "importPath": "big-league-baseball/src/main.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 799,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 377,
    "kind": "function",
    "name": "loopCrowdChatter",
    "memberof": "src/main.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/main.js~loopCrowdChatter",
    "access": "public",
    "export": false,
    "importPath": "big-league-baseball/src/main.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 800,
    "undocument": true,
    "params": [],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 378,
    "kind": "function",
    "name": "log2Print",
    "memberof": "src/main.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/main.js~log2Print",
    "access": "public",
    "export": false,
    "importPath": "big-league-baseball/src/main.js",
    "importStyle": null,
    "description": "Function to print the second line of the game log for both pitching and hitting",
    "lineNumber": 818,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "message",
        "description": "{string} The string being added to"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "The modified string"
    },
    "ignore": true
  },
  {
    "__docId__": 379,
    "kind": "function",
    "name": "log3Print",
    "memberof": "src/main.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/main.js~log3Print",
    "access": "public",
    "export": false,
    "importPath": "big-league-baseball/src/main.js",
    "importStyle": null,
    "description": "Function to print the third line of the game log for both pitching and hitting",
    "lineNumber": 891,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "message",
        "description": "{string} The string being added to"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "The modified string"
    },
    "ignore": true
  },
  {
    "__docId__": 380,
    "kind": "file",
    "name": "src/testSuite.js",
    "content": "import {Game} from './Game.js';\n\nexport function runTests() {\n\tstartGame();\n\tout();\n\tfoul();\n\tball();\n\thomeRun();\n\tendGame();\n}\n\nfunction startGame() {\n\tlet game = new Game(\"home\");\n\n\tif (!game.first && !game.second && !game.third) {\n\t\tconsole.log(\"Bases are empty when game starts: PASS\");\n\t}\n\telse {\n\t\tconsole.log(\"Bases are empty when game starts: FAIL\");\n\t}\n\n\tif (game.balls === 0 && game.strikes === 0 && game.outs === 0) {\n\t\tconsole.log(\"Balls, strikes, and outs are all set to 0 when game starts: PASS\");\n\t}\n\telse {\n\t\tconsole.log(\"Balls, strikes, and outs are all set to 0 when game starts: FAIL\");\n\t}\n\n\tif (game.homeAB === 0 && game.visitAB === 0) {\n\t\tconsole.log(\"Home and visiting teams' lineup pointers are set to 0: PASS\");\n\t}\n\telse {\n\t\tconsole.log(\"Home and visiting teams' lineup pointers are set to 0: FAIL\");\n\t}\n\n\tif (game.inning === 1 && !game.inningSide) {\n\t\tconsole.log(\"Game starts in the top of the first inning: PASS\");\n\t}\n\telse {\n\t\tconsole.log(\"Game starts in the top of the first inning: FAIL\");\n\t}\n}\n\nfunction endGame() {\n\tlet game = new Game(\"home\");\n\tif (game.gameOver === false) {\n\t\tconsole.log(\"Game is not over when game starts: PASS\");\n\t}\n\telse {\n\t\tconsole.log(\"Game is not over when game starts: FAIL\");\n\t}\n}\n\nfunction homeRun() {\n\tlet game = new Game(\"home\");\n\n\tgame.first = true;\n\tgame.second = true;\n\tgame.third = true;\n\tgame.homeRun();\n\n\tif (game.visitTeam.runs === 4) {\n\t\tconsole.log(\"A home run for the visiting team with men on all 3 bases results in 4 runs: PASS\");\n\t}\n\telse {\n\t\tconsole.log(\"A home run for the visiting team with men on all 3 bases results in 4 runs: FAIL\");\n\t}\n\n\tgame.inningSide = true;\n\tgame.first = true;\n\tgame.second = true;\n\tgame.third = true;\n\tgame.homeRun();\n\n\tif (game.homeTeam.runs === 4) {\n\t\tconsole.log(\"A home run for the home team with men on all 3 bases results in 4 runs: PASS\");\n\t}\n\telse {\n\t\tconsole.log(\"A home run for the home team with men on all 3 bases results in 4 runs: FAIL\");\n\t}\n}\n\nfunction foul() {\n\tlet game = new Game(\"home\");\n\n\tgame.foul();\n\tif (game.strikes === 1) {\n\t\tconsole.log(\"Foul ball with 0 strikes results in 1 strike: PASS\");\n\t}\n\telse {\n\t\tconsole.log(\"Foul ball with 0 strikes results in 1 strike: FAIL\");\n\t}\n\n\tgame.strikes = 1;\n\tgame.foul();\n\tif (game.strikes === 2) {\n\t\tconsole.log(\"Foul ball with 1 strikes results in 2 strikes: PASS\");\n\t}\n\telse {\n\t\tconsole.log(\"Foul ball with 1 strikes results in 2 strikes: FAIL\");\n\t}\n\n\tgame.strikes = 2;\n\tgame.foul();\n\tif (game.strikes === 2 && game.outs === 0) {\n\t\tconsole.log(\"Foul ball with 2 strikes results in 2 strikes: PASS\");\n\t}\n\telse {\n\t\tconsole.log(\"Foul ball with 2 strikes results in 2 strikes: FAIL\");\n\t}\n}\n\nfunction out() {\n\tlet game = new Game();\n\n\tgame.inning = 1;\n\tgame.inningSide = false;\n\tgame.outs = 0;\n\tgame.out(1);\n\tif (game.outs === 1 && game.inning === 1 && game.inningSide === false) {\n\t\tconsole.log(\"1 out with 0 outs results in 1 out and no new inning: PASS\");\n\t}\n\telse {\n\t\tconsole.log(\"1 out with 0 outs results in 1 out and no new inning: FAIL\");\n\t}\n\n\tgame.inning = 1;\n\tgame.inningSide = false;\n\tgame.outs = 1;\n\tgame.out(1);\n\tif (game.outs === 2 && game.inning === 1 && game.inningSide === false) {\n\t\tconsole.log(\"1 out with 1 out results in 2 out and no new inning: PASS\");\n\t}\n\telse {\n\t\tconsole.log(\"1 out with 1 out results in 2 out and no new inning: FAIL\");\n\t}\n\n\tgame.inning = 1;\n\tgame.inningSide = false;\n\tgame.outs = 2;\n\tgame.out(1);\n\tif (game.outs === 0 && game.inning === 1 && game.inningSide === true) {\n\t\tconsole.log(\"1 out with 2 outs results in a new inning with 0 outs: PASS\");\n\t}\n\telse {\n\t\tconsole.log(\"1 out with 2 outs results in a new inning with 0 outs: FALSE\");\n\t}\n\n\tgame.inning = 1;\n\tgame.inningSide = false;\n\tgame.outs = 0;\n\tgame.out(2);\n\tif (game.outs === 2 && game.inning === 1 && game.inningSide === false) {\n\t\tconsole.log(\"A double play with 0 outs results in 2 outs and no new inning: PASS\");\n\t}\n\telse {\n\t\tconsole.log(\"A double play with 0 outs results in 2 outs and no new inning: FAIL\");\n\t}\n\n\tgame.inning = 1;\n\tgame.inningSide = false;\n\tgame.outs = 1;\n\tgame.out(2);\n\tif (game.outs === 0 && game.inning === 1 && game.inningSide === true) {\n\t\tconsole.log(\"A double play with 1 out results in a new inning with 0 outs: PASS\");\n\t}\n\telse {\n\t\tconsole.log(\"A double play with 1 out results in a new inning with 0 outs: FAIL\");\n\t}\n\n\tgame.inning = 1;\n\tgame.inningSide = false;\n\tgame.outs = 2;\n\tgame.out(2);\n\tif (game.outs === 0 && game.inning === 1 && game.inningSide === true) {\n\t\tconsole.log(\"A double play with 2 outs results in a new inning with 0 outs: PASS\");\n\t}\n\telse {\n\t\tconsole.log(\"A double play with 2 outs results in a new inning with 0 outs: FALSE\");\n\t}\n\n\tgame.inning = 1;\n\tgame.inningSide = false;\n\tgame.outs = 0;\n\tgame.out(3);\n\tif (game.outs === 0 && game.inning === 1 && game.inningSide === true) {\n\t\tconsole.log(\"A triple play with 0 outs results in a new inning with 0 outs: PASS\");\n\t}\n\telse {\n\t\tconsole.log(\"A triple play with 0 outs results in a new inning with 0 outs: FAIL\");\n\t}\n\n\tgame.inning = 1;\n\tgame.inningSide = false;\n\tgame.outs = 1;\n\tgame.out(3);\n\tif (game.outs === 0 && game.inning === 1 && game.inningSide === true) {\n\t\tconsole.log(\"A triple play with 1 out results in a new inning with 0 outs: PASS\");\n\t}\n\telse {\n\t\tconsole.log(\"A triple play with 1 out results in a new inning with 0 outs: FAIL\");\n\t}\n\n\tgame.inning = 1;\n\tgame.inningSide = false;\n\tgame.outs = 2;\n\tgame.out(3);\n\tif (game.outs === 0 && game.inning === 1 && game.inningSide === true) {\n\t\tconsole.log(\"A triple play with 2 outs results in a new inning with 0 outs: PASS\");\n\t}\n\telse {\n\t\tconsole.log(\"A triple play with 2 outs results in a new inning with 0 outs: FALSE\");\n\t}\n}\n\nfunction ball() {\n\tlet game = new Game(\"home\");\n\n\tgame.balls = 0;\n\tgame.ball();\n\tif (game.balls === 1) {\n\t\tconsole.log(\"Ball thrown with 0 balls results in 1 ball: PASS\");\n\t}\n\telse {\n\t\tconsole.log(\"Ball thrown with 0 balls results in 1 ball: FAIL\");\n\t}\n\n\tgame.balls = 1;\n\tgame.ball();\n\tif (game.balls === 2) {\n\t\tconsole.log(\"Ball thrown with 1 ball results in 1 balls: PASS\");\n\t}\n\telse {\n\t\tconsole.log(\"Ball thrown with 1 ball results in 1 balls: FAIL\");\n\t}\n\n\tgame.balls = 2;\n\tgame.ball();\n\tif (game.balls === 3) {\n\t\tconsole.log(\"Ball thrown with 2 balls results in 3 balls: PASS\");\n\t}\n\telse {\n\t\tconsole.log(\"Ball thrown with 2 balls results in 3 balls: FAIL\");\n\t}\n\n\tgame.balls = 3;\n\tgame.ball();\n\tif (game.balls === 0 && game.first === true) {\n\t\tconsole.log(\"Ball thrown with 3 balls results in a walk, putting a man on first base: PASS\");\n\t}\n\telse {\n\t\tconsole.log(\"Ball thrown with 3 balls results in a walk, putting a man on first base: FAIL\");\n\t}\n\n\tgame.inningSide = false;\n\tgame.visitTeam.runs = 0;\n\tgame.first = true;\n\tgame.second = true;\n\tgame.third = true;\n\tgame.balls = 3;\n\tgame.ball();\n\tif (game.visitTeam.runs === 1 && game.first && game.second && game.third) {\n\t\tconsole.log(\"Ball thrown with 3 balls and the bases loaded walks in a run: PASS\");\n\t}\n\telse {\n\t\tconsole.log(\"Ball thrown with 3 balls and the bases loaded walks in a run: FAIL\");\n\t}\n}",
    "static": true,
    "longname": "/home/jacob/Programming/eecs448/big-league-baseball/src/testSuite.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 381,
    "kind": "function",
    "name": "runTests",
    "memberof": "src/testSuite.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/testSuite.js~runTests",
    "access": "public",
    "export": true,
    "importPath": "big-league-baseball/src/testSuite.js",
    "importStyle": "{runTests}",
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 382,
    "kind": "function",
    "name": "startGame",
    "memberof": "src/testSuite.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/testSuite.js~startGame",
    "access": "public",
    "export": false,
    "importPath": "big-league-baseball/src/testSuite.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "params": [],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 383,
    "kind": "function",
    "name": "endGame",
    "memberof": "src/testSuite.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/testSuite.js~endGame",
    "access": "public",
    "export": false,
    "importPath": "big-league-baseball/src/testSuite.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 44,
    "undocument": true,
    "params": [],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 384,
    "kind": "function",
    "name": "homeRun",
    "memberof": "src/testSuite.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/testSuite.js~homeRun",
    "access": "public",
    "export": false,
    "importPath": "big-league-baseball/src/testSuite.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 54,
    "undocument": true,
    "params": [],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 385,
    "kind": "function",
    "name": "foul",
    "memberof": "src/testSuite.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/testSuite.js~foul",
    "access": "public",
    "export": false,
    "importPath": "big-league-baseball/src/testSuite.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 83,
    "undocument": true,
    "params": [],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 386,
    "kind": "function",
    "name": "out",
    "memberof": "src/testSuite.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/testSuite.js~out",
    "access": "public",
    "export": false,
    "importPath": "big-league-baseball/src/testSuite.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 113,
    "undocument": true,
    "params": [],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 387,
    "kind": "function",
    "name": "ball",
    "memberof": "src/testSuite.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/testSuite.js~ball",
    "access": "public",
    "export": false,
    "importPath": "big-league-baseball/src/testSuite.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 216,
    "undocument": true,
    "params": [],
    "return": null,
    "ignore": true
  },
  {
    "kind": "index",
    "content": "# Big Leauge Baseball\n\nPort of the 3M Sports board game written in Javascript using Express.\n\n### Install Dependencies\n\n`npm install`\n\n### Run the Server\n\n`npm run test`\n\nTo view the server, view `localhost:3000` in your favorite browser.\n\n### Generate Documentation\n\n`npm run doc`",
    "longname": "/home/jacob/Programming/eecs448/big-league-baseball/README.md",
    "name": "./README.md",
    "static": true,
    "access": "public"
  },
  {
    "kind": "packageJSON",
    "content": "{\n  \"name\": \"big-league-baseball\",\n  \"version\": \"1.0.0\",\n  \"description\": \"A port of the 3M Sports board game\",\n  \"main\": \"app.js\",\n  \"scripts\": {\n    \"test\": \"node app.js\",\n    \"doc\": \"./node_modules/.bin/esdoc\"\n  },\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"git+https://github.com/J3Productions/big-league-baseball.git\"\n  },\n  \"author\": \"J3Productions\",\n  \"license\": \"MIT\",\n  \"bugs\": {\n    \"url\": \"https://github.com/J3Productions/big-league-baseball/issues\"\n  },\n  \"homepage\": \"https://github.com/J3Productions/big-league-baseball#readme\",\n  \"dependencies\": {\n    \"ejs\": \"^2.6.1\",\n    \"express\": \"^4.16.4\"\n  },\n  \"devDependencies\": {\n    \"esdoc\": \"^1.1.0\",\n    \"esdoc-standard-plugin\": \"^1.0.0\"\n  }\n}\n",
    "longname": "/home/jacob/Programming/eecs448/big-league-baseball/package.json",
    "name": "package.json",
    "static": true,
    "access": "public"
  }
]